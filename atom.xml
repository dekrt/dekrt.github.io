<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>dekrt&#39;s blog</title>
  
  <subtitle>菜菜，呜呜</subtitle>
  <link href="https://dekrt.cn/atom.xml" rel="self"/>
  
  <link href="https://dekrt.cn/"/>
  <updated>2023-03-27T13:34:02.054Z</updated>
  <id>https://dekrt.cn/</id>
  
  <author>
    <name>dekrt</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>课本pdf互助站</title>
    <link href="https://dekrt.cn/tutorial/book/"/>
    <id>https://dekrt.cn/tutorial/book/</id>
    <published>2023-03-27T13:23:13.000Z</published>
    <updated>2023-03-27T13:34:02.054Z</updated>
    
    <content type="html"><![CDATA[<p>课本pdf互助站</p>]]></content>
    
    
    <summary type="html">你想找到的课本pdf（可能）都在这里噢</summary>
    
    
    
    <category term="tutorial" scheme="https://dekrt.cn/categories/tutorial/"/>
    
    
    <category term="教程 | tutorial" scheme="https://dekrt.cn/tags/%E6%95%99%E7%A8%8B-tutorial/"/>
    
  </entry>
  
  <entry>
    <title>软件设计综合实践实验报告</title>
    <link href="https://dekrt.cn/report/cpsd/"/>
    <id>https://dekrt.cn/report/cpsd/</id>
    <published>2023-03-14T10:17:46.000Z</published>
    <updated>2023-03-27T13:23:45.184Z</updated>
    
    <content type="html"><![CDATA[<h1 align="center">软件设计综合实践实验报告</h1><h1 id="实验内容和要求">1. 实验内容和要求</h1><p>本实验通过一个类 C 语言的 C--（C MinusMinus，CMM）语言编译器的设计和实现来熟悉编译器的基本原理和概念，了解计算系统基本架构（机器硬件层抽象、目标语言、语言编译和汇编语言等），熟练掌握 C语言开发，并为后续课程的学习打下基础。</p><h1 id="斐波拉契数代码">2. 斐波拉契数代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt;</span><br><span class="line">    <span class="keyword">int</span> firstFib;</span><br><span class="line">    <span class="keyword">int</span> secondFib;</span><br><span class="line">    <span class="keyword">int</span> fib;</span><br><span class="line"></span><br><span class="line">    firstFib = <span class="number">1</span>;</span><br><span class="line">    secondFib = <span class="number">1</span>;</span><br><span class="line">    cnt = <span class="number">2</span>; <span class="comment">/* n = 1 或 n = 2 时特判 */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (cnt &lt; n)</span><br><span class="line">        &#123;</span><br><span class="line">            fib = firstFib + secondFib;</span><br><span class="line">            firstFib = secondFib;</span><br><span class="line">            secondFib = fib;</span><br><span class="line">            cnt = cnt + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fib;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    n = input();</span><br><span class="line">    output(fibonacci(n));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="词法分析程序">3. 词法分析程序</h1><h2 id="主要设计和实现思路">3.1 主要设计和实现思路</h2><p>采用<code>enum</code>进行状态码的描述，具体如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  START,        <span class="comment">// 开始状态</span></span><br><span class="line">  INNUM,    <span class="comment">// 输入数字</span></span><br><span class="line">  INID,     <span class="comment">// 输入identifier</span></span><br><span class="line">  INEQ,     <span class="comment">// 第一次输入 = , 可能是  = 或 ==</span></span><br><span class="line">  INLT,     <span class="comment">// 输入 &lt; , </span></span><br><span class="line">  INGT,     <span class="comment">// 输入 &gt;</span></span><br><span class="line">  INDIV,    <span class="comment">// 输入 / </span></span><br><span class="line">  INNE,    <span class="comment">// 输入 !</span></span><br><span class="line">  INCOMMENT,    <span class="comment">// 输入 /*</span></span><br><span class="line">  ENDCOMMENT,   <span class="comment">// 输入 */</span></span><br><span class="line">  DONE<span class="comment">// 结束状态</span></span><br><span class="line">&#125; StateType;</span><br></pre></td></tr></table></figure><p><code>struct reservedWords</code>结构用来存储预置词</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">char</span> *str;</span><br><span class="line">  TokenType tok;</span><br><span class="line">&#125; reservedWords[MAXRESERVED] = &#123;&#123;(<span class="keyword">char</span> *)<span class="string">&quot;if&quot;</span>, IF&#125;, &#123;(<span class="keyword">char</span> *)<span class="string">&quot;else&quot;</span>, ELSE&#125;, </span><br><span class="line">                                &#123;(<span class="keyword">char</span> *)<span class="string">&quot;while&quot;</span>, WHILE&#125;, &#123;(<span class="keyword">char</span> *)<span class="string">&quot;int&quot;</span>, INT&#125;, </span><br><span class="line">                                &#123;(<span class="keyword">char</span> *)<span class="string">&quot;void&quot;</span>, VOID&#125;, &#123;(<span class="keyword">char</span> *)<span class="string">&quot;return&quot;</span>, RETURN&#125;&#125;;</span><br></pre></td></tr></table></figure><p><code>static int getNextChar(void)</code> 与 <code>static intungetNextChar(void)</code>函数用于读取下个字符与回溯下个字符</p><p><code>TokenType getToken(void)</code> 函数用于获取当前的token：</p><ul><li>如果状态码是<code>START</code>，进行一次<code>getNextChar()</code>：<ul><li>对于一元操作符，如<code>'+', '-', '*', '(', ')', ';', '&#123;','&#125;'</code>等字符，直接给出currentToken</li><li>对于可能存在的二元（多元）操作符，如<code>"= || ==", "&lt; ||&lt;=", "&gt; || &gt;=", "! || !=", "/ ||/*"</code>等状态，给定对应的状态码，进行进行进一步的判断</li><li>break；</li></ul></li><li>如果状态码是<code>INEQ</code>，则读取字符并判断是<code>=</code>还是<code>==</code></li><li>如果状态码是<code>INLT</code>，则读取字符并判断是<code>&lt;</code>还是<code>&lt;=</code></li><li>如果状态码是<code>INGT</code>，则读取字符并判断是<code>&gt;</code>还是<code>&gt;=</code></li><li>如果状态码是<code>INNE</code>，则读取字符并判断是<code>!</code>还是<code>!=</code></li><li>如果状态码是<code>INDIV</code>，则读取字符并判断是<code>/*</code>还是<code>/*</code><ul><li>为了防止注释中可能的<code>*</code>进行干扰，采用<code>INCOMMENT</code>和<code>ENDCOMMENT</code>两种状态进行判断</li></ul></li><li>如果状态码是<code>INNUM</code>或者<code>INID</code>，则进行读取</li><li>否则，输出错误信息</li><li>随后，对新的ID进行存储。</li><li>如果<code>TraceScan == true</code>，则调用<code>UTIL.c</code>中的<code>printToken()</code>函数，输出词法分析的结果</li><li>返回当前的Token</li></ul><p>调用<code>printToken()</code>函数进行token的打印，函数如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printToken</span><span class="params">(TokenType token, <span class="keyword">const</span> <span class="keyword">char</span>* lexeme)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">switch</span>(token)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> IF:</span><br><span class="line">        <span class="keyword">case</span> ELSE:</span><br><span class="line">        <span class="keyword">case</span> INT:</span><br><span class="line">        <span class="keyword">case</span> RETURN:</span><br><span class="line">        <span class="keyword">case</span> VOID:</span><br><span class="line">        <span class="keyword">case</span> WHILE:</span><br><span class="line">        <span class="built_in">fprintf</span>(listing, <span class="string">&quot;reserved word \&quot;%s\&quot;&quot;</span>, lexeme);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> PLUS:    <span class="built_in">fprintf</span>(listing, <span class="string">&quot;+&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> MINUS:   <span class="built_in">fprintf</span>(listing, <span class="string">&quot;-&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> TIMES:   <span class="built_in">fprintf</span>(listing, <span class="string">&quot;*&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> DIVIDE:  <span class="built_in">fprintf</span>(listing, <span class="string">&quot;/&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LT:      <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&lt;&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> GT:      <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&gt;&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ASSIGN:  <span class="built_in">fprintf</span>(listing, <span class="string">&quot;=&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> NE:      <span class="built_in">fprintf</span>(listing, <span class="string">&quot;!=&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> SEMI:    <span class="built_in">fprintf</span>(listing, <span class="string">&quot;;&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> COMMA:   <span class="built_in">fprintf</span>(listing, <span class="string">&quot;,&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LPAREN:  <span class="built_in">fprintf</span>(listing, <span class="string">&quot;(&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> RPAREN:  <span class="built_in">fprintf</span>(listing, <span class="string">&quot;)&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LBRACE:  <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&#123;&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> RBRACE:  <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&#125;&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LSQUARE: <span class="built_in">fprintf</span>(listing, <span class="string">&quot;[&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> RSQUARE: <span class="built_in">fprintf</span>(listing, <span class="string">&quot;]&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LTE:     <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&lt;=&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> GTE:     <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&gt;=&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> EQ:      <span class="built_in">fprintf</span>(listing, <span class="string">&quot;==&quot;</span>); <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> NUM:</span><br><span class="line">        <span class="built_in">fprintf</span>(listing, <span class="string">&quot;NUM, value = %s&quot;</span>, lexeme);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ID:</span><br><span class="line">        <span class="built_in">fprintf</span>(listing, <span class="string">&quot;ID, name = \&quot;%s\&quot;&quot;</span>, lexeme);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ENDOFFILE:</span><br><span class="line">        <span class="built_in">fprintf</span>(listing, <span class="string">&quot;EOF&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ERROR:</span><br><span class="line">        <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&lt;&lt;&lt;ERROR&gt;&gt;&gt; %s&quot;</span>, lexeme);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>: </span><br><span class="line">        <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&lt;&lt;&lt;UNKNOWN TOKEN&gt;&gt;&gt; %d&quot;</span>, token);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="词法分析程序代码">3.2 词法分析程序代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;globals.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;util.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;scan.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* states in scanner DFA */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  START,</span><br><span class="line">  INNUM,    <span class="comment">// input number</span></span><br><span class="line">  INID,     <span class="comment">// input identifier</span></span><br><span class="line">  INEQ,     <span class="comment">// input = , maybe = or ==</span></span><br><span class="line">  INLT,     <span class="comment">// input &lt; , </span></span><br><span class="line">  INGT,     <span class="comment">// input &gt;</span></span><br><span class="line">  INDIV,     <span class="comment">// input / </span></span><br><span class="line">  INNE,     <span class="comment">// input !</span></span><br><span class="line">  INCOMMENT,     <span class="comment">// input /*</span></span><br><span class="line">  ENDCOMMENT,     <span class="comment">// input */</span></span><br><span class="line">  DONE</span><br><span class="line">&#125; StateType;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* lexeme of identifier or reserved word */</span></span><br><span class="line"><span class="keyword">char</span> tokenString[MAXTOKENLEN + <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="comment">/* BUFLEN = length of the input buffer for</span></span><br><span class="line"><span class="comment">   source code lines */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> BUFLEN 256</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">char</span> lineBuf[BUFLEN]; <span class="comment">/* holds the current line */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> linepos = <span class="number">0</span>;      <span class="comment">/* current position in LineBuf */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> bufsize = <span class="number">0</span>;      <span class="comment">/* current size of buffer string */</span></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">int</span> EOF_flag = FALSE; <span class="comment">/* corrects ungetNextChar behavior on EOF */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* getNextChar fetches the next non-blank character</span></span><br><span class="line"><span class="comment">   from lineBuf, reading in a new line if lineBuf is</span></span><br><span class="line"><span class="comment">   exhausted */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getNextChar</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!(linepos &lt; bufsize))</span><br><span class="line">  &#123;</span><br><span class="line">    lineno++;</span><br><span class="line">    <span class="keyword">if</span> (fgets(lineBuf, BUFLEN - <span class="number">1</span>, source))</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> (EchoSource)</span><br><span class="line">        <span class="built_in">fprintf</span>(listing, <span class="string">&quot;%4d: %s&quot;</span>, lineno, lineBuf);</span><br><span class="line">      bufsize = <span class="built_in">strlen</span>(lineBuf);</span><br><span class="line">      linepos = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">return</span> lineBuf[linepos++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      EOF_flag = TRUE;</span><br><span class="line">      <span class="keyword">return</span> EOF;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> lineBuf[linepos++];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ungetNextChar backtracks one character</span></span><br><span class="line"><span class="comment">   in lineBuf */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ungetNextChar</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!EOF_flag)</span><br><span class="line">    linepos--;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* lookup table of reserved words */</span></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">char</span> *str;</span><br><span class="line">  TokenType tok;</span><br><span class="line">&#125; reservedWords[MAXRESERVED] = &#123;&#123;(<span class="keyword">char</span> *)<span class="string">&quot;if&quot;</span>, IF&#125;, &#123;(<span class="keyword">char</span> *)<span class="string">&quot;else&quot;</span>, ELSE&#125;, </span><br><span class="line">                                &#123;(<span class="keyword">char</span> *)<span class="string">&quot;while&quot;</span>, WHILE&#125;, &#123;(<span class="keyword">char</span> *)<span class="string">&quot;int&quot;</span>, INT&#125;, </span><br><span class="line">                                &#123;(<span class="keyword">char</span> *)<span class="string">&quot;void&quot;</span>, VOID&#125;, &#123;(<span class="keyword">char</span> *)<span class="string">&quot;return&quot;</span>, RETURN&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* lookup an identifier to see if it is a reserved word */</span></span><br><span class="line"><span class="comment">/* uses linear search */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> TokenType <span class="title">reservedLookup</span><span class="params">(<span class="keyword">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i;</span><br><span class="line">  <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAXRESERVED; i++)</span><br><span class="line">    <span class="keyword">if</span> (!<span class="built_in">strcmp</span>(s, reservedWords[i].str))</span><br><span class="line">      <span class="keyword">return</span> reservedWords[i].tok;</span><br><span class="line">  <span class="keyword">return</span> ID;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/****************************************/</span></span><br><span class="line"><span class="comment">/* the primary function of the scanner  */</span></span><br><span class="line"><span class="comment">/****************************************/</span></span><br><span class="line"><span class="comment">/* function getToken returns the</span></span><br><span class="line"><span class="comment"> * next token in source file</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function">TokenType <span class="title">getToken</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">/* index for storing into tokenString */</span></span><br><span class="line">  <span class="keyword">int</span> tokenStringIndex = <span class="number">0</span>;</span><br><span class="line">  <span class="comment">/* holds current token to be returned */</span></span><br><span class="line">  TokenType currentToken;</span><br><span class="line">  <span class="comment">/* current state - always begins at START */</span></span><br><span class="line">  StateType state = START;</span><br><span class="line">  <span class="comment">/* flag to indicate save to tokenString */</span></span><br><span class="line">  <span class="keyword">int</span> save;</span><br><span class="line">  <span class="keyword">while</span> (state != DONE)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">int</span> c = getNextChar();</span><br><span class="line">    save = TRUE;</span><br><span class="line">    <span class="keyword">switch</span> (state)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> START:</span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">isdigit</span>(c))</span><br><span class="line">        state = INNUM;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">isalpha</span>(c))</span><br><span class="line">        state = INID;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">        state = INEQ;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;&lt;&#x27;</span>)    </span><br><span class="line">        state = INLT;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;&gt;&#x27;</span>)</span><br><span class="line">        state = INGT;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;!&#x27;</span>)</span><br><span class="line">        state = INNE;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        state = INDIV;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> ((c == <span class="string">&#x27; &#x27;</span>) || (c == <span class="string">&#x27;\t&#x27;</span>) || (c == <span class="string">&#x27;\n&#x27;</span>))</span><br><span class="line">        save = FALSE;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        state = DONE;</span><br><span class="line">        <span class="keyword">switch</span> (c)</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">case</span> EOF:</span><br><span class="line">            save = FALSE;</span><br><span class="line">            currentToken = ENDFILE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">            currentToken = PLUS;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            currentToken = MINUS;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">&#x27;*&#x27;</span>:</span><br><span class="line">            currentToken = TIMES;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">            currentToken = LPAREN;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">            currentToken = RPAREN;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">&#x27;;&#x27;</span>:</span><br><span class="line">            currentToken = SEMI;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">&#x27;&#123;&#x27;</span>:</span><br><span class="line">            currentToken = LBRACE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">case</span> <span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">            currentToken = RBRACE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">default</span>:</span><br><span class="line">            currentToken = ERROR;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> INEQ:</span><br><span class="line">      state = DONE;</span><br><span class="line">      <span class="keyword">if</span> (c == <span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">        currentToken = EQ;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123; <span class="comment">/* backup in the input */</span></span><br><span class="line">        ungetNextChar();</span><br><span class="line">        save = FALSE;</span><br><span class="line">        currentToken = ASSIGN;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> INLT:</span><br><span class="line">      state = DONE;</span><br><span class="line">      <span class="keyword">if</span> (c == <span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">        currentToken = LTE;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        ungetNextChar();</span><br><span class="line">        save = FALSE;</span><br><span class="line">        currentToken = LT;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> INGT:</span><br><span class="line">      state = DONE;</span><br><span class="line">      <span class="keyword">if</span> (c == <span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">        currentToken = GTE;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        ungetNextChar();</span><br><span class="line">        save = FALSE;</span><br><span class="line">        currentToken = GT;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> INNE: </span><br><span class="line">      state = DONE;</span><br><span class="line">      <span class="keyword">if</span> (c == <span class="string">&#x27;=&#x27;</span>)</span><br><span class="line">        currentToken = NEQ;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        ungetNextChar();</span><br><span class="line">        save = FALSE;</span><br><span class="line">        currentToken = ERROR;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> INDIV:</span><br><span class="line">      <span class="keyword">if</span> (c == <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">      &#123;</span><br><span class="line">        save = FALSE;</span><br><span class="line">        state = INCOMMENT;</span><br><span class="line">        tokenStringIndex -= <span class="number">1</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        ungetNextChar();</span><br><span class="line">        save = FALSE;</span><br><span class="line">  state = DONE;</span><br><span class="line">  currentToken = DIVIDE;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> INCOMMENT:</span><br><span class="line">      save = FALSE;</span><br><span class="line">      <span class="keyword">if</span>(c == <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">        state = ENDCOMMENT; </span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> ENDCOMMENT:</span><br><span class="line">      save = FALSE;</span><br><span class="line">      <span class="keyword">if</span> (c == <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">        state = START;</span><br><span class="line">      <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">        state = ENDCOMMENT;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        state = INCOMMENT;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> INNUM:</span><br><span class="line">      <span class="keyword">if</span> (!<span class="built_in">isdigit</span>(c))</span><br><span class="line">      &#123; <span class="comment">/* backup in the input */</span></span><br><span class="line">        ungetNextChar();</span><br><span class="line">        save = FALSE;</span><br><span class="line">        state = DONE;</span><br><span class="line">        currentToken = NUM;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> INID:</span><br><span class="line">      <span class="keyword">if</span> (!<span class="built_in">isalpha</span>(c))</span><br><span class="line">      &#123; <span class="comment">/* backup in the input */</span></span><br><span class="line">        ungetNextChar();</span><br><span class="line">        save = FALSE;</span><br><span class="line">        state = DONE;</span><br><span class="line">        currentToken = ID;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> DONE:</span><br><span class="line">    <span class="keyword">default</span>: <span class="comment">/* should never happen */</span></span><br><span class="line">      <span class="built_in">fprintf</span>(listing, <span class="string">&quot;Scanner Bug: state= %d\n&quot;</span>, state);</span><br><span class="line">      state = DONE;</span><br><span class="line">      currentToken = ERROR;</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// append new id to token string</span></span><br><span class="line">    <span class="keyword">if</span> ((save) &amp;&amp; (tokenStringIndex &lt;= MAXTOKENLEN))</span><br><span class="line">      tokenString[tokenStringIndex++] = (<span class="keyword">char</span>)c;</span><br><span class="line">    <span class="keyword">if</span> (state == DONE)</span><br><span class="line">    &#123;</span><br><span class="line">      tokenString[tokenStringIndex] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">      <span class="keyword">if</span> (currentToken == ID)</span><br><span class="line">        currentToken = reservedLookup(tokenString);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (TraceScan)</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">fprintf</span>(listing, <span class="string">&quot;\t%d: &quot;</span>, lineno);</span><br><span class="line">    printToken(currentToken, tokenString);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> currentToken;</span><br><span class="line">&#125; <span class="comment">/* end getToken */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="实验演示">3.3 实验演示</h2><ul><li>求三个整数中的最大值</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">in Line:  2: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  2: get ID, name = &quot;max&quot;</span><br><span class="line">in Line:  2: get (</span><br><span class="line">in Line:  2: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  2: get ID, name = &quot;x&quot;</span><br><span class="line">in Line:  2: get ,</span><br><span class="line">in Line:  2: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  2: get ID, name = &quot;y&quot;</span><br><span class="line">in Line:  2: get ,</span><br><span class="line">in Line:  2: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  2: get ID, name = &quot;z&quot;</span><br><span class="line">in Line:  2: get )</span><br><span class="line">in Line:  3: get &#123;</span><br><span class="line">in Line:  4: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  4: get ID, name = &quot;biggest&quot;</span><br><span class="line">in Line:  4: get ;</span><br><span class="line">in Line:  5: get ID, name = &quot;biggest&quot;</span><br><span class="line">in Line:  5: get =</span><br><span class="line">in Line:  5: get ID, name = &quot;x&quot;</span><br><span class="line">in Line:  5: get ;</span><br><span class="line">in Line:  6: get reserved word &quot;if&quot;</span><br><span class="line">in Line:  6: get (</span><br><span class="line">in Line:  6: get ID, name = &quot;y&quot;</span><br><span class="line">in Line:  6: get &gt;</span><br><span class="line">in Line:  6: get ID, name = &quot;biggest&quot;</span><br><span class="line">in Line:  6: get )</span><br><span class="line">in Line:  7: get ID, name = &quot;biggest&quot;</span><br><span class="line">in Line:  7: get =</span><br><span class="line">in Line:  7: get ID, name = &quot;y&quot;</span><br><span class="line">in Line:  7: get ;</span><br><span class="line">in Line:  8: get reserved word &quot;if&quot;</span><br><span class="line">in Line:  8: get (</span><br><span class="line">in Line:  8: get ID, name = &quot;z&quot;</span><br><span class="line">in Line:  8: get &gt;</span><br><span class="line">in Line:  8: get ID, name = &quot;biggest&quot;</span><br><span class="line">in Line:  8: get )</span><br><span class="line">in Line:  9: get ID, name = &quot;biggest&quot;</span><br><span class="line">in Line:  9: get =</span><br><span class="line">in Line:  9: get ID, name = &quot;z&quot;</span><br><span class="line">in Line:  9: get ;</span><br><span class="line">in Line: 10: get reserved word &quot;return&quot;</span><br><span class="line">in Line: 10: get ID, name = &quot;biggest&quot;</span><br><span class="line">in Line: 10: get ;</span><br><span class="line">in Line: 11: get &#125;</span><br><span class="line">in Line: 12: get reserved word &quot;void&quot;</span><br><span class="line">in Line: 12: get ID, name = &quot;main&quot;</span><br><span class="line">in Line: 12: get (</span><br><span class="line">in Line: 12: get reserved word &quot;void&quot;</span><br><span class="line">in Line: 12: get )</span><br><span class="line">in Line: 13: get &#123;</span><br><span class="line">in Line: 14: get reserved word &quot;int&quot;</span><br><span class="line">in Line: 14: get ID, name = &quot;x&quot;</span><br><span class="line">in Line: 14: get ;</span><br><span class="line">in Line: 15: get reserved word &quot;int&quot;</span><br><span class="line">in Line: 15: get ID, name = &quot;y&quot;</span><br><span class="line">in Line: 15: get ;</span><br><span class="line">in Line: 16: get reserved word &quot;int&quot;</span><br><span class="line">in Line: 16: get ID, name = &quot;z&quot;</span><br><span class="line">in Line: 16: get ;</span><br><span class="line">in Line: 17: get reserved word &quot;int&quot;</span><br><span class="line">in Line: 17: get ID, name = &quot;biggest&quot;</span><br><span class="line">in Line: 17: get ;</span><br><span class="line">in Line: 18: get ID, name = &quot;x&quot;</span><br><span class="line">in Line: 18: get =</span><br><span class="line">in Line: 18: get ID, name = &quot;input&quot;</span><br><span class="line">in Line: 18: get (</span><br><span class="line">in Line: 18: get )</span><br><span class="line">in Line: 18: get ;</span><br><span class="line">in Line: 19: get ID, name = &quot;y&quot;</span><br><span class="line">in Line: 19: get =</span><br><span class="line">in Line: 19: get ID, name = &quot;input&quot;</span><br><span class="line">in Line: 19: get (</span><br><span class="line">in Line: 19: get )</span><br><span class="line">in Line: 19: get ;</span><br><span class="line">in Line: 20: get ID, name = &quot;z&quot;</span><br><span class="line">in Line: 20: get =</span><br><span class="line">in Line: 20: get ID, name = &quot;input&quot;</span><br><span class="line">in Line: 20: get (</span><br><span class="line">in Line: 20: get )</span><br><span class="line">in Line: 20: get ;</span><br><span class="line">in Line: 21: get ID, name = &quot;biggest&quot;</span><br><span class="line">in Line: 21: get =</span><br><span class="line">in Line: 21: get ID, name = &quot;max&quot;</span><br><span class="line">in Line: 21: get (</span><br><span class="line">in Line: 21: get ID, name = &quot;x&quot;</span><br><span class="line">in Line: 21: get ,</span><br><span class="line">in Line: 21: get ID, name = &quot;y&quot;</span><br><span class="line">in Line: 21: get ,</span><br><span class="line">in Line: 21: get ID, name = &quot;z&quot;</span><br><span class="line">in Line: 21: get )</span><br><span class="line">in Line: 21: get ;</span><br><span class="line">in Line: 22: get ID, name = &quot;output&quot;</span><br><span class="line">in Line: 22: get (</span><br><span class="line">in Line: 22: get ID, name = &quot;biggest&quot;</span><br><span class="line">in Line: 22: get )</span><br><span class="line">in Line: 22: get ;</span><br><span class="line">in Line: 23: get &#125;</span><br><span class="line">in Line: 24: get EOF</span><br></pre></td></tr></table></figure><ul><li>给定 N，求 1 到 N 之和</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">in Line:  1: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  1: get ID, name = &quot;sum&quot;</span><br><span class="line">in Line:  1: get (</span><br><span class="line">in Line:  1: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  1: get ID, name = &quot;n&quot;</span><br><span class="line">in Line:  1: get )</span><br><span class="line">in Line:  2: get &#123;</span><br><span class="line">in Line:  3: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  3: get ID, name = &quot;result&quot;</span><br><span class="line">in Line:  3: get ;</span><br><span class="line">in Line:  4: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  4: get ID, name = &quot;i&quot;</span><br><span class="line">in Line:  4: get ;</span><br><span class="line">in Line:  5: get ID, name = &quot;i&quot;</span><br><span class="line">in Line:  5: get =</span><br><span class="line">in Line:  5: get NUM, value = 1</span><br><span class="line">in Line:  5: get ;</span><br><span class="line">in Line:  6: get ID, name = &quot;result&quot;</span><br><span class="line">in Line:  6: get =</span><br><span class="line">in Line:  6: get NUM, value = 0</span><br><span class="line">in Line:  6: get ;</span><br><span class="line">in Line:  7: get reserved word &quot;while&quot;</span><br><span class="line">in Line:  7: get (</span><br><span class="line">in Line:  7: get ID, name = &quot;i&quot;</span><br><span class="line">in Line:  7: get &lt;=</span><br><span class="line">in Line:  7: get ID, name = &quot;n&quot;</span><br><span class="line">in Line:  7: get )</span><br><span class="line">in Line:  8: get &#123;</span><br><span class="line">in Line:  9: get ID, name = &quot;result&quot;</span><br><span class="line">in Line:  9: get =</span><br><span class="line">in Line:  9: get ID, name = &quot;result&quot;</span><br><span class="line">in Line:  9: get +</span><br><span class="line">in Line:  9: get ID, name = &quot;i&quot;</span><br><span class="line">in Line:  9: get ;</span><br><span class="line">in Line: 10: get ID, name = &quot;i&quot;</span><br><span class="line">in Line: 10: get =</span><br><span class="line">in Line: 10: get ID, name = &quot;i&quot;</span><br><span class="line">in Line: 10: get +</span><br><span class="line">in Line: 10: get NUM, value = 1</span><br><span class="line">in Line: 10: get ;</span><br><span class="line">in Line: 11: get &#125;</span><br><span class="line">in Line: 12: get reserved word &quot;return&quot;</span><br><span class="line">in Line: 12: get ID, name = &quot;result&quot;</span><br><span class="line">in Line: 12: get ;</span><br><span class="line">in Line: 13: get &#125;</span><br><span class="line">in Line: 15: get reserved word &quot;void&quot;</span><br><span class="line">in Line: 15: get ID, name = &quot;main&quot;</span><br><span class="line">in Line: 15: get (</span><br><span class="line">in Line: 15: get reserved word &quot;void&quot;</span><br><span class="line">in Line: 15: get )</span><br><span class="line">in Line: 16: get &#123;</span><br><span class="line">in Line: 17: get reserved word &quot;int&quot;</span><br><span class="line">in Line: 17: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 17: get ;</span><br><span class="line">in Line: 18: get reserved word &quot;int&quot;</span><br><span class="line">in Line: 18: get ID, name = &quot;s&quot;</span><br><span class="line">in Line: 18: get ;</span><br><span class="line">in Line: 19: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 19: get =</span><br><span class="line">in Line: 19: get ID, name = &quot;intput&quot;</span><br><span class="line">in Line: 19: get (</span><br><span class="line">in Line: 19: get )</span><br><span class="line">in Line: 19: get ;</span><br><span class="line">in Line: 20: get ID, name = &quot;s&quot;</span><br><span class="line">in Line: 20: get =</span><br><span class="line">in Line: 20: get ID, name = &quot;sum&quot;</span><br><span class="line">in Line: 20: get (</span><br><span class="line">in Line: 20: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 20: get )</span><br><span class="line">in Line: 20: get ;</span><br><span class="line">in Line: 21: get ID, name = &quot;output&quot;</span><br><span class="line">in Line: 21: get (</span><br><span class="line">in Line: 21: get ID, name = &quot;s&quot;</span><br><span class="line">in Line: 21: get )</span><br><span class="line">in Line: 21: get ;</span><br><span class="line">in Line: 22: get &#125;</span><br><span class="line">in Line: 23: get EOF</span><br></pre></td></tr></table></figure><ul><li>计算第n个斐波那契数</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">in Line:  1: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  1: get ID, name = &quot;fibonacci&quot;</span><br><span class="line">in Line:  1: get (</span><br><span class="line">in Line:  1: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  1: get ID, name = &quot;n&quot;</span><br><span class="line">in Line:  1: get )</span><br><span class="line">in Line:  2: get &#123;</span><br><span class="line">in Line:  3: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  3: get ID, name = &quot;cnt&quot;</span><br><span class="line">in Line:  3: get ;</span><br><span class="line">in Line:  4: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  4: get ID, name = &quot;firstFib&quot;</span><br><span class="line">in Line:  4: get ;</span><br><span class="line">in Line:  5: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  5: get ID, name = &quot;secondFib&quot;</span><br><span class="line">in Line:  5: get ;</span><br><span class="line">in Line:  6: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  6: get ID, name = &quot;fib&quot;</span><br><span class="line">in Line:  6: get ;</span><br><span class="line">in Line:  8: get ID, name = &quot;firstFib&quot;</span><br><span class="line">in Line:  8: get =</span><br><span class="line">in Line:  8: get NUM, value = 1</span><br><span class="line">in Line:  8: get ;</span><br><span class="line">in Line:  9: get ID, name = &quot;secondFib&quot;</span><br><span class="line">in Line:  9: get =</span><br><span class="line">in Line:  9: get NUM, value = 1</span><br><span class="line">in Line:  9: get ;</span><br><span class="line">in Line: 10: get ID, name = &quot;cnt&quot;</span><br><span class="line">in Line: 10: get =</span><br><span class="line">in Line: 10: get NUM, value = 2</span><br><span class="line">in Line: 10: get ;</span><br><span class="line">in Line: 12: get reserved word &quot;if&quot;</span><br><span class="line">in Line: 12: get (</span><br><span class="line">in Line: 12: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 12: get ==</span><br><span class="line">in Line: 12: get NUM, value = 1</span><br><span class="line">in Line: 12: get )</span><br><span class="line">in Line: 13: get reserved word &quot;return&quot;</span><br><span class="line">in Line: 13: get NUM, value = 1</span><br><span class="line">in Line: 13: get ;</span><br><span class="line">in Line: 14: get reserved word &quot;else&quot;</span><br><span class="line">in Line: 14: get reserved word &quot;if&quot;</span><br><span class="line">in Line: 14: get (</span><br><span class="line">in Line: 14: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 14: get ==</span><br><span class="line">in Line: 14: get NUM, value = 2</span><br><span class="line">in Line: 14: get )</span><br><span class="line">in Line: 15: get reserved word &quot;return&quot;</span><br><span class="line">in Line: 15: get NUM, value = 1</span><br><span class="line">in Line: 15: get ;</span><br><span class="line">in Line: 16: get reserved word &quot;else&quot;</span><br><span class="line">in Line: 17: get &#123;</span><br><span class="line">in Line: 18: get reserved word &quot;while&quot;</span><br><span class="line">in Line: 18: get (</span><br><span class="line">in Line: 18: get ID, name = &quot;cnt&quot;</span><br><span class="line">in Line: 18: get &lt;</span><br><span class="line">in Line: 18: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 18: get )</span><br><span class="line">in Line: 19: get &#123;</span><br><span class="line">in Line: 20: get ID, name = &quot;fib&quot;</span><br><span class="line">in Line: 20: get =</span><br><span class="line">in Line: 20: get ID, name = &quot;firstFib&quot;</span><br><span class="line">in Line: 20: get +</span><br><span class="line">in Line: 20: get ID, name = &quot;secondFib&quot;</span><br><span class="line">in Line: 20: get ;</span><br><span class="line">in Line: 21: get ID, name = &quot;firstFib&quot;</span><br><span class="line">in Line: 21: get =</span><br><span class="line">in Line: 21: get ID, name = &quot;secondFib&quot;</span><br><span class="line">in Line: 21: get ;</span><br><span class="line">in Line: 22: get ID, name = &quot;secondFib&quot;</span><br><span class="line">in Line: 22: get =</span><br><span class="line">in Line: 22: get ID, name = &quot;fib&quot;</span><br><span class="line">in Line: 22: get ;</span><br><span class="line">in Line: 23: get ID, name = &quot;cnt&quot;</span><br><span class="line">in Line: 23: get =</span><br><span class="line">in Line: 23: get ID, name = &quot;cnt&quot;</span><br><span class="line">in Line: 23: get +</span><br><span class="line">in Line: 23: get NUM, value = 1</span><br><span class="line">in Line: 23: get ;</span><br><span class="line">in Line: 24: get &#125;</span><br><span class="line">in Line: 25: get &#125;</span><br><span class="line">in Line: 26: get reserved word &quot;return&quot;</span><br><span class="line">in Line: 26: get ID, name = &quot;fib&quot;</span><br><span class="line">in Line: 26: get ;</span><br><span class="line">in Line: 27: get &#125;</span><br><span class="line">in Line: 29: get reserved word &quot;void&quot;</span><br><span class="line">in Line: 29: get ID, name = &quot;main&quot;</span><br><span class="line">in Line: 29: get (</span><br><span class="line">in Line: 29: get reserved word &quot;void&quot;</span><br><span class="line">in Line: 29: get )</span><br><span class="line">in Line: 30: get &#123;</span><br><span class="line">in Line: 31: get reserved word &quot;int&quot;</span><br><span class="line">in Line: 31: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 31: get ;</span><br><span class="line">in Line: 32: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 32: get =</span><br><span class="line">in Line: 32: get ID, name = &quot;input&quot;</span><br><span class="line">in Line: 32: get (</span><br><span class="line">in Line: 32: get )</span><br><span class="line">in Line: 32: get ;</span><br><span class="line">in Line: 33: get ID, name = &quot;output&quot;</span><br><span class="line">in Line: 33: get (</span><br><span class="line">in Line: 33: get ID, name = &quot;fibonacci&quot;</span><br><span class="line">in Line: 33: get (</span><br><span class="line">in Line: 33: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 33: get )</span><br><span class="line">in Line: 33: get )</span><br><span class="line">in Line: 33: get ;</span><br><span class="line">in Line: 34: get &#125;</span><br><span class="line">in Line: 35: get EOF</span><br></pre></td></tr></table></figure><h1 id="lex文件">4. Lex文件</h1><h2 id="lex输入文件代码">4.1 Lex输入文件代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">%&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;globals.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;util.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;scan.h&quot;</span></span></span><br><span class="line"><span class="comment">/* lexeme of identifier or reserved word */</span></span><br><span class="line"><span class="keyword">char</span> tokenString[MAXTOKENLEN+<span class="number">1</span>];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printToken</span><span class="params">( TokenType token, <span class="keyword">const</span> <span class="keyword">char</span>* tokenString )</span></span>;</span><br><span class="line">%&#125;</span><br><span class="line"></span><br><span class="line">digit       [<span class="number">0</span><span class="number">-9</span>]</span><br><span class="line">number      &#123;digit&#125;+</span><br><span class="line">letter      [a-zA-Z]</span><br><span class="line">identifier  &#123;letter&#125;+</span><br><span class="line">newline     \n</span><br><span class="line">whitespace  [ \t]+</span><br><span class="line"></span><br><span class="line">%%</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;if&quot;</span>            &#123;<span class="keyword">return</span> IF;&#125;</span><br><span class="line"><span class="string">&quot;while&quot;</span>         &#123;<span class="keyword">return</span> WHILE;&#125;</span><br><span class="line"><span class="string">&quot;else&quot;</span>          &#123;<span class="keyword">return</span> ELSE;&#125;</span><br><span class="line"><span class="string">&quot;return&quot;</span>        &#123;<span class="keyword">return</span> RETURN;&#125;</span><br><span class="line"><span class="string">&quot;int&quot;</span>           &#123;<span class="keyword">return</span> INT;&#125;</span><br><span class="line"><span class="string">&quot;void&quot;</span>          &#123;<span class="keyword">return</span> VOID;&#125;</span><br><span class="line"><span class="string">&quot;=&quot;</span>             &#123;<span class="keyword">return</span> ASSIGN;&#125;</span><br><span class="line"><span class="string">&quot;==&quot;</span>            &#123;<span class="keyword">return</span> EQ;&#125;</span><br><span class="line"><span class="string">&quot;&lt;&quot;</span>             &#123;<span class="keyword">return</span> LT;&#125;</span><br><span class="line"><span class="string">&quot;&lt;=&quot;</span>            &#123;<span class="keyword">return</span> LTE;&#125;</span><br><span class="line"><span class="string">&quot;&gt;&quot;</span>             &#123;<span class="keyword">return</span> GT;&#125;</span><br><span class="line"><span class="string">&quot;&gt;=&quot;</span>            &#123;<span class="keyword">return</span> GTE;&#125;</span><br><span class="line"><span class="string">&quot;!=&quot;</span>            &#123;<span class="keyword">return</span> NE;&#125;</span><br><span class="line"><span class="string">&quot;+&quot;</span>             &#123;<span class="keyword">return</span> PLUS;&#125;</span><br><span class="line"><span class="string">&quot;-&quot;</span>             &#123;<span class="keyword">return</span> MINUS;&#125;</span><br><span class="line"><span class="string">&quot;*&quot;</span>             &#123;<span class="keyword">return</span> TIMES;&#125;</span><br><span class="line"><span class="string">&quot;/&quot;</span>             &#123;<span class="keyword">return</span> DIVIDE;&#125;</span><br><span class="line"><span class="string">&quot;(&quot;</span>             &#123;<span class="keyword">return</span> LPAREN;&#125;</span><br><span class="line"><span class="string">&quot;)&quot;</span>             &#123;<span class="keyword">return</span> RPAREN;&#125;</span><br><span class="line"><span class="string">&quot;;&quot;</span>             &#123;<span class="keyword">return</span> SEMI;&#125;</span><br><span class="line"><span class="string">&quot;&#123;&quot;</span>             &#123;<span class="keyword">return</span> LBRACE;&#125;</span><br><span class="line"><span class="string">&quot;&#125;&quot;</span>             &#123;<span class="keyword">return</span> LBRACE;&#125;</span><br><span class="line">&#123;number&#125;        &#123;<span class="keyword">return</span> NUM;&#125;</span><br><span class="line">&#123;identifier&#125;    &#123;<span class="keyword">return</span> ID;&#125;</span><br><span class="line">&#123;newline&#125;       &#123;lineno++;&#125;</span><br><span class="line">&#123;whitespace&#125;    &#123;<span class="comment">/* skip whitespace */</span>&#125;</span><br><span class="line"><span class="string">&quot;/*&quot;</span>             &#123; </span><br><span class="line">                   <span class="keyword">char</span> c;</span><br><span class="line">                   <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">                  <span class="keyword">do</span></span><br><span class="line">                  &#123; c = input();</span><br><span class="line">                    <span class="keyword">if</span> (c == EOF) <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">if</span> (c == <span class="string">&#x27;\n&#x27;</span>) lineno++;</span><br><span class="line">                    <span class="keyword">if</span> (c == <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                      c = input();</span><br><span class="line">                      <span class="keyword">if</span> (c == <span class="string">&#x27;/&#x27;</span>) flag = <span class="number">0</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125; <span class="keyword">while</span> (flag);</span><br><span class="line">                &#125;</span><br><span class="line">.               &#123;<span class="keyword">return</span> ERROR;&#125;</span><br><span class="line"></span><br><span class="line">%%</span><br><span class="line"><span class="function">TokenType <span class="title">getToken</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">int</span> firstTime = TRUE;</span><br><span class="line">  TokenType currentToken;</span><br><span class="line">  <span class="keyword">if</span> (firstTime)</span><br><span class="line">  &#123; firstTime = FALSE;</span><br><span class="line">    lineno++;</span><br><span class="line">    yyin = source;</span><br><span class="line">    yyout = listing;</span><br><span class="line">  &#125;</span><br><span class="line">  currentToken = yylex();</span><br><span class="line">  <span class="built_in">strncpy</span>(tokenString,yytext,MAXTOKENLEN);</span><br><span class="line">  <span class="keyword">if</span> (TraceScan) &#123;</span><br><span class="line">    <span class="built_in">fprintf</span>(listing,<span class="string">&quot;\t%d: &quot;</span>,lineno);</span><br><span class="line">    printToken(currentToken,tokenString);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> currentToken;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">yywrap</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="实验演示-1">4.2 实验演示</h2><ul><li><p>使用<code>flex cmm.l</code>命令生成<code>lex.yy.c</code></p></li><li><p>将<code>main.c lex.yy.c util.c globals.h util.hscan.h</code>放入一个项目中，编译生成<code>lexScanner.exe</code></p></li><li><p>使用<code>lexScanner.\fibonacci.cmm</code>命令进行词法分析，结果如下：</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line">in Line:  1: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  1: get ID, name = &quot;fibonacci&quot;</span><br><span class="line">in Line:  1: get (</span><br><span class="line">in Line:  1: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  1: get ID, name = &quot;n&quot;</span><br><span class="line">in Line:  1: get )</span><br><span class="line">in Line:  2: get &#123;</span><br><span class="line">in Line:  3: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  3: get ID, name = &quot;cnt&quot;</span><br><span class="line">in Line:  3: get ;</span><br><span class="line">in Line:  4: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  4: get ID, name = &quot;firstFib&quot;</span><br><span class="line">in Line:  4: get ;</span><br><span class="line">in Line:  5: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  5: get ID, name = &quot;secondFib&quot;</span><br><span class="line">in Line:  5: get ;</span><br><span class="line">in Line:  6: get reserved word &quot;int&quot;</span><br><span class="line">in Line:  6: get ID, name = &quot;fib&quot;</span><br><span class="line">in Line:  6: get ;</span><br><span class="line">in Line:  8: get ID, name = &quot;firstFib&quot;</span><br><span class="line">in Line:  8: get =</span><br><span class="line">in Line:  8: get NUM, value = 1</span><br><span class="line">in Line:  8: get ;</span><br><span class="line">in Line:  9: get ID, name = &quot;secondFib&quot;</span><br><span class="line">in Line:  9: get =</span><br><span class="line">in Line:  9: get NUM, value = 1</span><br><span class="line">in Line:  9: get ;</span><br><span class="line">in Line: 10: get ID, name = &quot;cnt&quot;</span><br><span class="line">in Line: 10: get =</span><br><span class="line">in Line: 10: get NUM, value = 2</span><br><span class="line">in Line: 10: get ;</span><br><span class="line">in Line: 12: get reserved word &quot;if&quot;</span><br><span class="line">in Line: 12: get (</span><br><span class="line">in Line: 12: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 12: get ==</span><br><span class="line">in Line: 12: get NUM, value = 1</span><br><span class="line">in Line: 12: get )</span><br><span class="line">in Line: 13: get reserved word &quot;return&quot;</span><br><span class="line">in Line: 13: get NUM, value = 1</span><br><span class="line">in Line: 13: get ;</span><br><span class="line">in Line: 14: get reserved word &quot;else&quot;</span><br><span class="line">in Line: 14: get reserved word &quot;if&quot;</span><br><span class="line">in Line: 14: get (</span><br><span class="line">in Line: 14: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 14: get ==</span><br><span class="line">in Line: 14: get NUM, value = 2</span><br><span class="line">in Line: 14: get )</span><br><span class="line">in Line: 15: get reserved word &quot;return&quot;</span><br><span class="line">in Line: 15: get NUM, value = 1</span><br><span class="line">in Line: 15: get ;</span><br><span class="line">in Line: 16: get reserved word &quot;else&quot;</span><br><span class="line">in Line: 17: get &#123;</span><br><span class="line">in Line: 18: get reserved word &quot;while&quot;</span><br><span class="line">in Line: 18: get (</span><br><span class="line">in Line: 18: get ID, name = &quot;cnt&quot;</span><br><span class="line">in Line: 18: get &lt;</span><br><span class="line">in Line: 18: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 18: get )</span><br><span class="line">in Line: 19: get &#123;</span><br><span class="line">in Line: 20: get ID, name = &quot;fib&quot;</span><br><span class="line">in Line: 20: get =</span><br><span class="line">in Line: 20: get ID, name = &quot;firstFib&quot;</span><br><span class="line">in Line: 20: get +</span><br><span class="line">in Line: 20: get ID, name = &quot;secondFib&quot;</span><br><span class="line">in Line: 20: get ;</span><br><span class="line">in Line: 21: get ID, name = &quot;firstFib&quot;</span><br><span class="line">in Line: 21: get =</span><br><span class="line">in Line: 21: get ID, name = &quot;secondFib&quot;</span><br><span class="line">in Line: 21: get ;</span><br><span class="line">in Line: 22: get ID, name = &quot;secondFib&quot;</span><br><span class="line">in Line: 22: get =</span><br><span class="line">in Line: 22: get ID, name = &quot;fib&quot;</span><br><span class="line">in Line: 22: get ;</span><br><span class="line">in Line: 23: get ID, name = &quot;cnt&quot;</span><br><span class="line">in Line: 23: get =</span><br><span class="line">in Line: 23: get ID, name = &quot;cnt&quot;</span><br><span class="line">in Line: 23: get +</span><br><span class="line">in Line: 23: get NUM, value = 1</span><br><span class="line">in Line: 23: get ;</span><br><span class="line">in Line: 24: get &#125;</span><br><span class="line">in Line: 25: get &#125;</span><br><span class="line">in Line: 26: get reserved word &quot;return&quot;</span><br><span class="line">in Line: 26: get ID, name = &quot;fib&quot;</span><br><span class="line">in Line: 26: get ;</span><br><span class="line">in Line: 27: get &#125;</span><br><span class="line">in Line: 29: get reserved word &quot;void&quot;</span><br><span class="line">in Line: 29: get ID, name = &quot;main&quot;</span><br><span class="line">in Line: 29: get (</span><br><span class="line">in Line: 29: get reserved word &quot;void&quot;</span><br><span class="line">in Line: 29: get )</span><br><span class="line">in Line: 30: get &#123;</span><br><span class="line">in Line: 31: get reserved word &quot;int&quot;</span><br><span class="line">in Line: 31: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 31: get ;</span><br><span class="line">in Line: 32: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 32: get =</span><br><span class="line">in Line: 32: get ID, name = &quot;input&quot;</span><br><span class="line">in Line: 32: get (</span><br><span class="line">in Line: 32: get )</span><br><span class="line">in Line: 32: get ;</span><br><span class="line">in Line: 33: get ID, name = &quot;output&quot;</span><br><span class="line">in Line: 33: get (</span><br><span class="line">in Line: 33: get ID, name = &quot;fibonacci&quot;</span><br><span class="line">in Line: 33: get (</span><br><span class="line">in Line: 33: get ID, name = &quot;n&quot;</span><br><span class="line">in Line: 33: get )</span><br><span class="line">in Line: 33: get )</span><br><span class="line">in Line: 33: get ;</span><br><span class="line">in Line: 34: get &#125;</span><br><span class="line">in Line: 35: get EOF</span><br></pre></td></tr></table></figure><h1 id="bnf语法描述">5. BNF语法描述</h1><figure class="highlight bnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">1 . program → declaration-list</span><br><span class="line">  </span><br><span class="line">2 . declaration-list → declaration-list declaration | declaration</span><br><span class="line">  </span><br><span class="line">3 . declaration → var-declaration | fun-declaration</span><br><span class="line">  </span><br><span class="line">4 . var-declaration → type-specifier ID;</span><br><span class="line">  </span><br><span class="line">5 . type-specifier → int | void</span><br><span class="line">  </span><br><span class="line">6 . fun-declaration → type-specifierID(params) | compound-stmt</span><br><span class="line">  </span><br><span class="line">7 . params → params-list | void</span><br><span class="line">  </span><br><span class="line">8 . param-list → param-list , param | param</span><br><span class="line">  </span><br><span class="line">9 . param → type-specifierID</span><br><span class="line"> </span><br><span class="line">10. compound-stmt → &#123;local-declarationsstatement-list&#125;</span><br><span class="line"> </span><br><span class="line">11. local-declarations → local-declarationsvar-declaration | empty</span><br><span class="line"> </span><br><span class="line">12. statement-list → statement-liststatement | empty</span><br><span class="line"> </span><br><span class="line">13. statement → expression-stmt </span><br><span class="line">                | compound-stmt </span><br><span class="line">                | selection-stmt</span><br><span class="line">                | it eration-stmt </span><br><span class="line">                | return-stmt</span><br><span class="line"> </span><br><span class="line">14. expression-stmt → expression; | ;</span><br><span class="line"> </span><br><span class="line">15. selection-stmt → if(expression)statement</span><br><span class="line">                   | if (expression)statement else statement</span><br><span class="line"> </span><br><span class="line">16. iteration-stmt → while(expression)statement</span><br><span class="line"> </span><br><span class="line">17. return-stmt → return; | return expression;</span><br><span class="line"> </span><br><span class="line">18. expression → var = expression | simple-expression</span><br><span class="line"> </span><br><span class="line">19. var → ID</span><br><span class="line"> </span><br><span class="line">20. simple-expression → additive-expression relop additive-expression </span><br><span class="line">                      | additive-expression</span><br><span class="line"> </span><br><span class="line">21. relop → <span class="attribute">&lt;= | &lt; | &gt;</span> | &gt;= | == | !=</span><br><span class="line"> </span><br><span class="line">22. additive-expression → additive-expression addop term | term</span><br><span class="line"> </span><br><span class="line">23. addop → + | -</span><br><span class="line"> </span><br><span class="line">24. term → term mulop factor | factor</span><br><span class="line"> </span><br><span class="line">25. mulop → * | /</span><br><span class="line"> </span><br><span class="line">26. factor → (expression) | var | call | NUM</span><br><span class="line"> </span><br><span class="line">27. call → ID(args)</span><br><span class="line"> </span><br><span class="line">28. args → arg-list | empty</span><br><span class="line"> </span><br><span class="line">29. arg-list → arg-list, expression | expression</span><br></pre></td></tr></table></figure><h1 id="语法分析程序">6. 语法分析程序</h1><h2 id="主要设计和实现思路-1">6.1 主要设计和实现思路</h2><ul><li><p>定义结点类型：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span> StmtK, ExpK, DecK &#125; NodeKind;</span><br><span class="line"><span class="comment">/* statement kind, expression kind, declaration kind */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span> IfK, WhileK, ReturnK, CallK, CompoundK &#125; StmtKind;</span><br><span class="line"><span class="comment">/* if kind, while kind, return kind, call kind, compound kind */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span> OpK, IdK, ConstK, AssignK &#125; ExpKind;</span><br><span class="line"><span class="comment">/* oprator kind, identifier kind, const(num) kind, assign kind */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span> ScalarDecK, FuncDecK &#125; DecKind;</span><br><span class="line"><span class="comment">/* scalar declaration kind, function declaration kind */</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> &#123;</span> Void, Integer, Function &#125; ExpType;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>定义数据结构TreeNode：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">treeNode</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">treeNode</span> * <span class="title">child</span>[<span class="title">MAXCHILDREN</span>];</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">treeNode</span> * <span class="title">sibling</span>;</span></span><br><span class="line">    <span class="keyword">int</span> lineno;</span><br><span class="line">    NodeKind nodekind; </span><br><span class="line">    <span class="class"><span class="keyword">union</span> </span></span><br><span class="line"><span class="class">    &#123;</span></span><br><span class="line">        StmtKind stmt;</span><br><span class="line">        ExpKind  <span class="built_in">exp</span>;</span><br><span class="line">        DecKind  dec;</span><br><span class="line">    &#125; kind;</span><br><span class="line"></span><br><span class="line">    TokenType op;</span><br><span class="line">    <span class="keyword">int</span> val;</span><br><span class="line">    <span class="keyword">char</span> *name;</span><br><span class="line"></span><br><span class="line">    ExpType functionReturnType;</span><br><span class="line">    ExpType variableDataType;</span><br><span class="line">    ExpType expressionType;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> isParameter;</span><br><span class="line">    </span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">treeNode</span> *<span class="title">declaration</span>;</span></span><br><span class="line">    </span><br><span class="line">&#125; TreeNode;</span><br></pre></td></tr></table></figure></li><li><p>采用递归下降进行语法分析，参照C--语言的BNF语法，每个非终结符定义为一个函数，返回类型为TreeNode</p></li><li><p>下降过程中，如果根据BNF范式，如果后一语句不为空，则将前一语句作为后一语句的树根，将他们全部连接起来，然后依次向下进行递归调用，根据相应的函数进行分析。</p></li><li><p>分析结束后，调用<code>util.c</code>中的<code>printTree()</code>函数进行语法树的输出，函数如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> INDENT   indentno += 4</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> UNINDENT indentno -= 4</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printSpaces</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;indentno; ++i)</span><br><span class="line">        <span class="built_in">fprintf</span>(listing, <span class="string">&quot; &quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">typeName</span><span class="params">(ExpType type)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">char</span> i[] = <span class="string">&quot;integer&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">char</span> v[] = <span class="string">&quot;void&quot;</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">char</span> invalid[] = <span class="string">&quot;&lt;&lt;invalid type&gt;&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (type)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> Integer: <span class="keyword">return</span> i; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> Void:    <span class="keyword">return</span> v; <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:      <span class="keyword">return</span> invalid;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printTree</span><span class="params">(TreeNode *tree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    INDENT;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        printSpaces();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (tree-&gt;nodekind == DecK)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">switch</span>(tree-&gt;kind.dec)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> ScalarDecK:</span><br><span class="line">                <span class="built_in">fprintf</span>(listing,<span class="string">&quot;[Scalar declaration \&quot;%s\&quot; of type \&quot;%s\&quot;]\n&quot;</span></span><br><span class="line">, tree-&gt;name, typeName(tree-&gt;variableDataType));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ArrayDecK:</span><br><span class="line">                <span class="built_in">fprintf</span>(listing, <span class="string">&quot;[Array declaration \&quot;%s\&quot; of size %d&quot;</span></span><br><span class="line">                        <span class="string">&quot; and type \&quot;%s\&quot;]\n&quot;</span>,</span><br><span class="line">                      tree-&gt;name, tree-&gt;val, typeName(tree-&gt;variableDataType));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> FuncDecK:</span><br><span class="line">                <span class="built_in">fprintf</span>(listing, <span class="string">&quot;[Function declaration \&quot;%s()\&quot;&quot;</span></span><br><span class="line">                        <span class="string">&quot; of return type \&quot;%s\&quot;]\n&quot;</span>, </span><br><span class="line">                        tree-&gt;name, typeName(tree-&gt;functionReturnType));</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&lt;&lt;&lt;unknown declaration type&gt;&gt;&gt;\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (tree-&gt;nodekind == ExpK)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">switch</span>(tree-&gt;kind.<span class="built_in">exp</span>)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> OpK:</span><br><span class="line">                <span class="built_in">fprintf</span>(listing, <span class="string">&quot;[Operator \&quot;&quot;</span>);</span><br><span class="line">                printToken(tree-&gt;op, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                <span class="built_in">fprintf</span>(listing, <span class="string">&quot;\&quot;]\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> IdK:</span><br><span class="line">                <span class="built_in">fprintf</span>(listing, <span class="string">&quot;[Identifier \&quot;%s&quot;</span>, tree-&gt;name);</span><br><span class="line">                <span class="keyword">if</span> (tree-&gt;val != <span class="number">0</span>) <span class="comment">/* array indexing */</span></span><br><span class="line">                    <span class="built_in">fprintf</span>(listing, <span class="string">&quot;[%d]&quot;</span>, tree-&gt;val);</span><br><span class="line">                <span class="built_in">fprintf</span>(listing, <span class="string">&quot;\&quot;]\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> ConstK:</span><br><span class="line">                <span class="built_in">fprintf</span>(listing, <span class="string">&quot;[Literal constant \&quot;%d\&quot;]\n&quot;</span>, tree-&gt;val);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> AssignK:</span><br><span class="line">                <span class="built_in">fprintf</span>(listing, <span class="string">&quot;[Assignment]\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&lt;&lt;&lt;unknown expression type&gt;&gt;&gt;\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (tree-&gt;nodekind == StmtK)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">switch</span>(tree-&gt;kind.stmt)</span><br><span class="line">            &#123;</span><br><span class="line">            <span class="keyword">case</span> CompoundK:</span><br><span class="line">                <span class="built_in">fprintf</span>(listing, <span class="string">&quot;[Compound statement]\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> IfK:</span><br><span class="line">                        <span class="built_in">fprintf</span>(listing, <span class="string">&quot;[IF statement]\n&quot;</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> WhileK:</span><br><span class="line">                        <span class="built_in">fprintf</span>(listing, <span class="string">&quot;[WHILE statement]\n&quot;</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> ReturnK:</span><br><span class="line">                        <span class="built_in">fprintf</span>(listing, <span class="string">&quot;[RETURN statement]\n&quot;</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> CallK:</span><br><span class="line">                        <span class="built_in">fprintf</span>(listing, <span class="string">&quot;[Call to function \&quot;%s()\&quot;]\n&quot;</span>,</span><br><span class="line">                                 tree-&gt;name);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&lt;&lt;&lt;unknown statement type&gt;&gt;&gt;\n&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&lt;&lt;&lt;unknown node kind&gt;&gt;&gt;\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;MAXCHILDREN; ++i)</span><br><span class="line">            printTree(tree-&gt;child[i]);</span><br><span class="line"></span><br><span class="line">        tree = tree-&gt;sibling;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    UNINDENT;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="递归下降语法分析程序代码">6.2 递归下降语法分析程序代码</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;globals.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;util.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;scan.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;parse.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> TokenType token; <span class="comment">// current token</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">declaration_list</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">declaration</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">var_declaration</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">param</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">param_list</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">compound_statement</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">local_declarations</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">statement_list</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">statement</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">expression_statement</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">if_statement</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">while_statement</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">return_statement</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">expression</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">simple_expression</span><span class="params">(TreeNode *passdown)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">additive_expression</span><span class="params">(TreeNode *passdown)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">term</span><span class="params">(TreeNode *passdown)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">factor</span><span class="params">(TreeNode *passdown)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">args</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">arg_list</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">identifier_statement</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">syntaxError</span><span class="params">(<span class="keyword">char</span> *message)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&gt;&gt;&gt; Syntax error at line %d: %s&quot;</span>, lineno, message);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">match</span><span class="params">(TokenType expected)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (token == expected)</span><br><span class="line">        token = getToken();</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        syntaxError(<span class="string">&quot;unexpected token &quot;</span>);</span><br><span class="line">        printToken(token, tokenString);</span><br><span class="line">        <span class="built_in">fprintf</span>(listing, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> ExpType <span class="title">matchType</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ExpType t_type = Void;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (token)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> INT:</span><br><span class="line">            t_type = Integer;</span><br><span class="line">            token = getToken();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> VOID:</span><br><span class="line">            t_type = Void;</span><br><span class="line">            token = getToken();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">        &#123;</span><br><span class="line">            syntaxError(<span class="string">&quot;expected a type identifier but got a &quot;</span>);</span><br><span class="line">            printToken(token, tokenString);</span><br><span class="line">            <span class="built_in">fprintf</span>(listing, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> t_type;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">isAType</span><span class="params">(TokenType tok)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ((tok == INT) || (tok == VOID))</span><br><span class="line">        <span class="keyword">return</span> TRUE;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode * <span class="title">declaration_list</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode * tree;</span><br><span class="line">    TreeNode * ptr;</span><br><span class="line"></span><br><span class="line">    tree = declaration();</span><br><span class="line">    ptr = tree;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (token != ENDOFFILE)</span><br><span class="line">    &#123;</span><br><span class="line">        TreeNode *tmp; </span><br><span class="line"></span><br><span class="line">        tmp = declaration();</span><br><span class="line">        <span class="keyword">if</span> ((tmp != <span class="literal">NULL</span>) &amp;&amp; (ptr != <span class="literal">NULL</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            ptr-&gt;sibling = tmp;</span><br><span class="line">            ptr = tmp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">declaration</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree = <span class="literal">NULL</span>;</span><br><span class="line">    ExpType declaration_type;</span><br><span class="line">    <span class="keyword">char</span> *identifier;</span><br><span class="line"></span><br><span class="line">    declaration_type = matchType(); </span><br><span class="line">    identifier = copyString(tokenString);</span><br><span class="line">    match(ID);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (token)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> SEMI: <span class="comment">/* variable declaration */</span></span><br><span class="line">            tree = newDecNode(ScalarDecK);</span><br><span class="line">            <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                tree-&gt;variableDataType = declaration_type;</span><br><span class="line">                tree-&gt;name = identifier;</span><br><span class="line">            &#125;</span><br><span class="line">            match(SEMI);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> LPAREN: <span class="comment">/* function declaration */</span></span><br><span class="line">            tree = newDecNode(FuncDecK);</span><br><span class="line">            <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                tree-&gt;functionReturnType = declaration_type;</span><br><span class="line">                tree-&gt;name = identifier;</span><br><span class="line">            &#125;</span><br><span class="line">            match(LPAREN);</span><br><span class="line">            <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">                tree-&gt;child[<span class="number">0</span>] = param_list();</span><br><span class="line">            match(RPAREN);</span><br><span class="line">            <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">                tree-&gt;child[<span class="number">1</span>] = compound_statement();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            syntaxError(<span class="string">&quot;unexpected token &quot;</span>);</span><br><span class="line">            printToken(token, tokenString);</span><br><span class="line">            <span class="built_in">fprintf</span>(listing, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            token = getToken();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">var_declaration</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree = <span class="literal">NULL</span>;</span><br><span class="line">    ExpType declaration_type;</span><br><span class="line">    <span class="keyword">char</span> *identifier;</span><br><span class="line"></span><br><span class="line">    declaration_type = matchType();</span><br><span class="line">    identifier = copyString(tokenString);</span><br><span class="line">    match(ID);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(token == SEMI)</span><br><span class="line">    &#123;   </span><br><span class="line">        tree = newDecNode(ScalarDecK); <span class="comment">/* variable declaration */</span> </span><br><span class="line">        <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tree-&gt;variableDataType = declaration_type;</span><br><span class="line">            tree-&gt;name = identifier;</span><br><span class="line">        &#125;</span><br><span class="line">        match(SEMI);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        syntaxError(<span class="string">&quot;unexpected token &quot;</span>);</span><br><span class="line">        printToken(token, tokenString);</span><br><span class="line">        <span class="built_in">fprintf</span>(listing, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        token = getToken();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">param</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree;</span><br><span class="line">    ExpType parmType;</span><br><span class="line">    <span class="keyword">char</span> *identifier;</span><br><span class="line"></span><br><span class="line">    parmType = matchType(); <span class="comment">/* get type of formal parameter */</span></span><br><span class="line">    identifier = copyString(tokenString);</span><br><span class="line">    match(ID);</span><br><span class="line"></span><br><span class="line">    tree = newDecNode(ScalarDecK);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        tree-&gt;name = identifier;</span><br><span class="line">        tree-&gt;val = <span class="number">0</span>;</span><br><span class="line">        tree-&gt;variableDataType = parmType;</span><br><span class="line">        tree-&gt;isParameter = TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">param_list</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree;</span><br><span class="line">    TreeNode *ptr;</span><br><span class="line">    TreeNode *newNode;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (token == VOID) <span class="comment">/* void param */</span></span><br><span class="line">    &#123;</span><br><span class="line">        match(VOID);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tree = param();</span><br><span class="line">    ptr = tree;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((tree != <span class="literal">NULL</span>) &amp;&amp; (token == COMMA)) <span class="comment">/* mutiple params */</span></span><br><span class="line">    &#123;</span><br><span class="line">        match(COMMA);</span><br><span class="line">        newNode = param();</span><br><span class="line">        <span class="keyword">if</span> (newNode != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ptr-&gt;sibling = newNode;</span><br><span class="line">            ptr = newNode;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">compound_statement</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    match(LBRACE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((token != RBRACE) &amp;&amp; (tree = newStmtNode(CompoundK)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isAType(token))</span><br><span class="line">            tree-&gt;child[<span class="number">0</span>] = local_declarations();</span><br><span class="line">        <span class="keyword">if</span> (token != RBRACE)</span><br><span class="line">            tree-&gt;child[<span class="number">1</span>] = statement_list();</span><br><span class="line">    &#125;</span><br><span class="line">    match(RBRACE);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">local_declarations</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree;</span><br><span class="line">    TreeNode *ptr;</span><br><span class="line">    TreeNode *newNode;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* find first variable declaration, if it exists */</span></span><br><span class="line">    <span class="keyword">if</span> (isAType(token))</span><br><span class="line">        tree = var_declaration();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* subsetmpuent variable declarations */</span></span><br><span class="line">    <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        ptr = tree;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (isAType(token))</span><br><span class="line">        &#123;</span><br><span class="line">            newNode = var_declaration();</span><br><span class="line">            <span class="keyword">if</span> (newNode != <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                ptr-&gt;sibling = newNode;</span><br><span class="line">                ptr = newNode;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">statement_list</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree = <span class="literal">NULL</span>;</span><br><span class="line">    TreeNode *ptr;</span><br><span class="line">    TreeNode *newNode;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (token != RBRACE)</span><br><span class="line">    &#123;</span><br><span class="line">        tree = statement();</span><br><span class="line">        ptr = tree;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (token != RBRACE)</span><br><span class="line">        &#123;</span><br><span class="line">            newNode = statement();</span><br><span class="line">            <span class="keyword">if</span> ((ptr != <span class="literal">NULL</span>) &amp;&amp; (newNode != <span class="literal">NULL</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                ptr-&gt;sibling = newNode;</span><br><span class="line">                ptr = newNode;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">statement</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (token)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> IF:</span><br><span class="line">            tree = if_statement();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> WHILE:</span><br><span class="line">            tree = while_statement();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> RETURN:</span><br><span class="line">            tree = return_statement();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> LBRACE:</span><br><span class="line">            tree = compound_statement();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ID:</span><br><span class="line">        <span class="keyword">case</span> SEMI:</span><br><span class="line">        <span class="keyword">case</span> LPAREN:</span><br><span class="line">        <span class="keyword">case</span> NUM:</span><br><span class="line">            tree = expression_statement();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            syntaxError(<span class="string">&quot;unexpected token &quot;</span>);</span><br><span class="line">            printToken(token, tokenString);</span><br><span class="line">            <span class="built_in">fprintf</span>(listing, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            token = getToken();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">expression_statement</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (token == SEMI)</span><br><span class="line">        match(SEMI);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (token != RBRACE)</span><br><span class="line">    &#123;</span><br><span class="line">        tree = expression();</span><br><span class="line">        match(SEMI);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">if_statement</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree;</span><br><span class="line">    TreeNode *expr;</span><br><span class="line">    TreeNode *ifStmt;</span><br><span class="line">    TreeNode *elseStmt = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    match(IF);</span><br><span class="line">    match(LPAREN);</span><br><span class="line">    expr = expression();</span><br><span class="line">    match(RPAREN);</span><br><span class="line">    ifStmt = statement();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (token == ELSE)</span><br><span class="line">    &#123;</span><br><span class="line">        match(ELSE);</span><br><span class="line">        elseStmt = statement();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    tree = newStmtNode(IfK);</span><br><span class="line">    <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        tree-&gt;child[<span class="number">0</span>] = expr;</span><br><span class="line">        tree-&gt;child[<span class="number">1</span>] = ifStmt;</span><br><span class="line">        tree-&gt;child[<span class="number">2</span>] = elseStmt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">while_statement</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree;</span><br><span class="line">    TreeNode *expr;</span><br><span class="line">    TreeNode *stmt;</span><br><span class="line"></span><br><span class="line">    match(WHILE);</span><br><span class="line">    match(LPAREN);</span><br><span class="line">    expr = expression();</span><br><span class="line">    match(RPAREN);</span><br><span class="line">    stmt = statement();</span><br><span class="line"></span><br><span class="line">    tree = newStmtNode(WhileK);</span><br><span class="line">    <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        tree-&gt;child[<span class="number">0</span>] = expr;</span><br><span class="line">        tree-&gt;child[<span class="number">1</span>] = stmt;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">return_statement</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree;</span><br><span class="line">    TreeNode *expr = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    match(RETURN);</span><br><span class="line"></span><br><span class="line">    tree = newStmtNode(ReturnK);</span><br><span class="line">    <span class="keyword">if</span> (token != SEMI)</span><br><span class="line">        expr = expression();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">        tree-&gt;child[<span class="number">0</span>] = expr;</span><br><span class="line"></span><br><span class="line">    match(SEMI);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">expression</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree = <span class="literal">NULL</span>;</span><br><span class="line">    TreeNode *lvalue = <span class="literal">NULL</span>;</span><br><span class="line">    TreeNode *rvalue = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">int</span> gotLvalue = FALSE; </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (token == ID)</span><br><span class="line">    &#123;</span><br><span class="line">        lvalue = identifier_statement();</span><br><span class="line">        gotLvalue = TRUE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* assign */</span></span><br><span class="line">    <span class="keyword">if</span> ((gotLvalue == TRUE) &amp;&amp; (token == ASSIGN))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ((lvalue != <span class="literal">NULL</span>) &amp;&amp; (lvalue-&gt;nodekind == ExpK) &amp;&amp;</span><br><span class="line">            (lvalue-&gt;kind.<span class="built_in">exp</span> == IdK))</span><br><span class="line">        &#123;</span><br><span class="line">            match(ASSIGN);</span><br><span class="line">            rvalue = expression();</span><br><span class="line">            tree = newExpNode(AssignK);</span><br><span class="line">            <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                tree-&gt;child[<span class="number">0</span>] = lvalue; <span class="comment">/* left  value */</span></span><br><span class="line">                tree-&gt;child[<span class="number">1</span>] = rvalue; <span class="comment">/* right value*/</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            syntaxError(<span class="string">&quot;attempt to assign to something not an lvalue\n&quot;</span>);</span><br><span class="line">            token = getToken();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        tree = simple_expression(lvalue);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">simple_expression</span><span class="params">(TreeNode *passdown)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree;</span><br><span class="line">    TreeNode *lExpr = <span class="literal">NULL</span>;</span><br><span class="line">    TreeNode *rExpr = <span class="literal">NULL</span>;</span><br><span class="line">    TokenType <span class="keyword">operator</span>;</span><br><span class="line"></span><br><span class="line">    lExpr = additive_expression(passdown);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((token == LTE) || (token == GTE) || (token == GT) || </span><br><span class="line">        (token == LT) || (token == EQ) || (token == NE))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">operator</span> = token;</span><br><span class="line">        match(token);</span><br><span class="line">        rExpr = additive_expression(<span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">        tree = newExpNode(OpK);</span><br><span class="line">        <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tree-&gt;child[<span class="number">0</span>] = lExpr;</span><br><span class="line">            tree-&gt;child[<span class="number">1</span>] = rExpr;</span><br><span class="line">            tree-&gt;op = <span class="keyword">operator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        tree = lExpr;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">additive_expression</span><span class="params">(TreeNode *passdown)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree;</span><br><span class="line">    TreeNode *newNode;</span><br><span class="line"></span><br><span class="line">    tree = term(passdown);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((token == PLUS) || (token == MINUS))</span><br><span class="line">    &#123;</span><br><span class="line">        newNode = newExpNode(OpK);</span><br><span class="line">        <span class="keyword">if</span> (newNode != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            newNode-&gt;child[<span class="number">0</span>] = tree;</span><br><span class="line">            newNode-&gt;op = token;</span><br><span class="line">            tree = newNode;</span><br><span class="line">            match(token);</span><br><span class="line">            tree-&gt;child[<span class="number">1</span>] = term(<span class="literal">NULL</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">term</span><span class="params">(TreeNode *passdown)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree;</span><br><span class="line">    TreeNode *newNode;</span><br><span class="line"></span><br><span class="line">    tree = factor(passdown);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((token == TIMES) || (token == DIVIDE))</span><br><span class="line">    &#123;</span><br><span class="line">        newNode = newExpNode(OpK);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (newNode != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            newNode-&gt;child[<span class="number">0</span>] = tree;</span><br><span class="line">            newNode-&gt;op = token;</span><br><span class="line">            tree = newNode;</span><br><span class="line">            match(token);</span><br><span class="line">            newNode-&gt;child[<span class="number">1</span>] = factor(<span class="literal">NULL</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">factor</span><span class="params">(TreeNode *passdown)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* If the subtree in &quot;passdown&quot; is a Factor, pass it back. */</span></span><br><span class="line">    <span class="keyword">if</span> (passdown != <span class="literal">NULL</span>) <span class="keyword">return</span> passdown;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (token == ID)</span><br><span class="line">    &#123;</span><br><span class="line">        tree = identifier_statement();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (token == LPAREN)</span><br><span class="line">    &#123;</span><br><span class="line">        match(LPAREN);</span><br><span class="line">        tree = expression();</span><br><span class="line">        match(RPAREN);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (token == NUM)</span><br><span class="line">    &#123;</span><br><span class="line">        tree = newExpNode(ConstK);</span><br><span class="line">        <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tree-&gt;val = atoi(tokenString);</span><br><span class="line">            tree-&gt;variableDataType = Integer;</span><br><span class="line">        &#125;</span><br><span class="line">        match(NUM);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        syntaxError(<span class="string">&quot;unexpected token &quot;</span>);</span><br><span class="line">        printToken(token, tokenString);</span><br><span class="line">        <span class="built_in">fprintf</span>(listing, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        token = getToken();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">identifier_statement</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree;</span><br><span class="line">    TreeNode *expr = <span class="literal">NULL</span>;</span><br><span class="line">    TreeNode *arguments = <span class="literal">NULL</span>;</span><br><span class="line">    <span class="keyword">char</span> *identifier;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (token == ID)</span><br><span class="line">        identifier = copyString(tokenString);</span><br><span class="line">    match(ID);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (token == LPAREN)</span><br><span class="line">    &#123;</span><br><span class="line">        match(LPAREN);</span><br><span class="line">        arguments = args();</span><br><span class="line">        match(RPAREN);</span><br><span class="line"></span><br><span class="line">        tree = newStmtNode(CallK);</span><br><span class="line">        <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tree-&gt;child[<span class="number">0</span>] = arguments;</span><br><span class="line">            tree-&gt;name = identifier;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        tree = newExpNode(IdK);</span><br><span class="line">        <span class="keyword">if</span> (tree != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            tree-&gt;child[<span class="number">0</span>] = expr;</span><br><span class="line">            tree-&gt;name = identifier;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">args</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (token != RPAREN)</span><br><span class="line">        tree = arg_list();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> TreeNode *<span class="title">arg_list</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *tree;</span><br><span class="line">    TreeNode *ptr;</span><br><span class="line">    TreeNode *newNode;</span><br><span class="line"></span><br><span class="line">    tree = expression();</span><br><span class="line">    ptr = tree;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (token == COMMA)</span><br><span class="line">    &#123;</span><br><span class="line">        match(COMMA);</span><br><span class="line">        newNode = expression();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ((ptr != <span class="literal">NULL</span>) &amp;&amp; (tree != <span class="literal">NULL</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            ptr-&gt;sibling = newNode;</span><br><span class="line">            ptr = newNode;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">TreeNode *<span class="title">Parse</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *t;</span><br><span class="line"></span><br><span class="line">    token = getToken();</span><br><span class="line">    t = declaration_list();</span><br><span class="line">    <span class="keyword">if</span> (token != ENDOFFILE)</span><br><span class="line">        syntaxError(<span class="string">&quot;Unexpected symbol at end of file\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* t points to the fully-constructed syntax tree */</span></span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="实验演示-2">6.3 实验演示</h2><ul><li><p>求三个整数中的最大值</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[Function declaration &quot;max()&quot; of return type &quot;integer&quot;]</span><br><span class="line">    [Scalar declaration &quot;x&quot; of type &quot;integer&quot;]</span><br><span class="line">    [Scalar declaration &quot;y&quot; of type &quot;integer&quot;]</span><br><span class="line">    [Scalar declaration &quot;z&quot; of type &quot;integer&quot;]</span><br><span class="line">    [Compound statement]</span><br><span class="line">        [Scalar declaration &quot;biggest&quot; of type &quot;integer&quot;]</span><br><span class="line">        [Assignment]</span><br><span class="line">            [Identifier &quot;biggest&quot;]</span><br><span class="line">            [Identifier &quot;x&quot;]</span><br><span class="line">        [IF statement]</span><br><span class="line">            [Operator &quot;&gt;&quot;]</span><br><span class="line">                [Identifier &quot;y&quot;]</span><br><span class="line">                [Identifier &quot;biggest&quot;]</span><br><span class="line">            [Assignment]</span><br><span class="line">                [Identifier &quot;biggest&quot;]</span><br><span class="line">                [Identifier &quot;y&quot;]</span><br><span class="line">        [IF statement]</span><br><span class="line">            [Operator &quot;&gt;&quot;]</span><br><span class="line">                [Identifier &quot;z]&quot;]</span><br><span class="line">                [Identifier &quot;biggest&quot;]</span><br><span class="line">            [Assignment]</span><br><span class="line">                [Identifier &quot;biggest&quot;]</span><br><span class="line">                [Identifier &quot;z&quot;]</span><br><span class="line">        [RETURN statement]</span><br><span class="line">            [Identifier &quot;biggest&quot;]</span><br><span class="line">[Function declaration &quot;main()&quot; of return type &quot;void&quot;]</span><br><span class="line">    [Compound statement]</span><br><span class="line">        [Scalar declaration &quot;x&quot; of type &quot;integer&quot;]</span><br><span class="line">        [Scalar declaration &quot;y&quot; of type &quot;integer&quot;]</span><br><span class="line">        [Scalar declaration &quot;z&quot; of type &quot;integer&quot;]</span><br><span class="line">        [Scalar declaration &quot;biggest&quot; of type &quot;integer&quot;]</span><br><span class="line">        [Assignment]</span><br><span class="line">            [Identifier &quot;x&quot;]</span><br><span class="line">            [Call to function &quot;input()&quot;]</span><br><span class="line">        [Assignment]</span><br><span class="line">            [Identifier &quot;y&quot;]</span><br><span class="line">            [Call to function &quot;input()&quot;]</span><br><span class="line">        [Assignment]</span><br><span class="line">            [Identifier &quot;z&quot;]</span><br><span class="line">            [Call to function &quot;input()&quot;]</span><br><span class="line">        [Assignment]</span><br><span class="line">            [Identifier &quot;biggest&quot;]</span><br><span class="line">            [Call to function &quot;max()&quot;]</span><br><span class="line">                [Identifier &quot;x&quot;]</span><br><span class="line">                [Identifier &quot;y&quot;]</span><br><span class="line">                [Identifier &quot;z&quot;]</span><br><span class="line">        [Call to function &quot;output()&quot;]</span><br><span class="line">            [Identifier &quot;biggest&quot;]</span><br></pre></td></tr></table></figure></li><li><p>给定 N，求 1 到 N 之和</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">[Function declaration &quot;sum()&quot; of return type &quot;integer&quot;]</span><br><span class="line">    [Scalar declaration &quot;n&quot; of type &quot;integer&quot;]</span><br><span class="line">    [Compound statement]</span><br><span class="line">        [Scalar declaration &quot;result&quot; of type &quot;integer&quot;]</span><br><span class="line">        [Scalar declaration &quot;i&quot; of type &quot;integer&quot;]</span><br><span class="line">        [Assignment]</span><br><span class="line">            [Identifier &quot;i&quot;]</span><br><span class="line">            [Literal constant &quot;1&quot;]</span><br><span class="line">        [Assignment]</span><br><span class="line">            [Identifier &quot;result&quot;]</span><br><span class="line">            [Literal constant &quot;0&quot;]</span><br><span class="line">        [WHILE statement]</span><br><span class="line">            [Operator &quot;&lt;=&quot;]</span><br><span class="line">                [Identifier &quot;i&quot;]</span><br><span class="line">                [Identifier &quot;n&quot;]</span><br><span class="line">            [Compound statement]</span><br><span class="line">                [Assignment]</span><br><span class="line">                    [Identifier &quot;result&quot;]</span><br><span class="line">                    [Operator &quot;+&quot;]</span><br><span class="line">                        [Identifier &quot;result&quot;]</span><br><span class="line">                        [Identifier &quot;i&quot;]</span><br><span class="line">                [Assignment]</span><br><span class="line">                    [Identifier &quot;i&quot;]</span><br><span class="line">                    [Operator &quot;+&quot;]</span><br><span class="line">                        [Identifier &quot;i&quot;]</span><br><span class="line">                        [Literal constant &quot;1&quot;]</span><br><span class="line">        [RETURN statement]</span><br><span class="line">            [Identifier &quot;result&quot;]</span><br><span class="line">[Function declaration &quot;main()&quot; of return type &quot;void&quot;]</span><br><span class="line">    [Compound statement]</span><br><span class="line">        [Scalar declaration &quot;n&quot; of type &quot;integer&quot;]</span><br><span class="line">        [Scalar declaration &quot;s&quot; of type &quot;integer&quot;]</span><br><span class="line">        [Assignment]</span><br><span class="line">            [Identifier &quot;n&quot;]</span><br><span class="line">            [Call to function &quot;intput()&quot;]</span><br><span class="line">        [Assignment]</span><br><span class="line">            [Identifier &quot;s&quot;]</span><br><span class="line">            [Call to function &quot;sum()&quot;]</span><br><span class="line">                [Identifier &quot;n&quot;]</span><br><span class="line">        [Call to function &quot;output()&quot;]</span><br><span class="line">            [Identifier &quot;s&quot;]</span><br></pre></td></tr></table></figure></li><li><p>计算第n个斐波那契数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">[Function declaration &quot;fibonacci()&quot; of return type &quot;integer&quot;]</span><br><span class="line">    [Scalar declaration &quot;n&quot; of type &quot;integer&quot;]</span><br><span class="line">    [Compound statement]</span><br><span class="line">        [Scalar declaration &quot;cnt&quot; of type &quot;integer&quot;]</span><br><span class="line">        [Scalar declaration &quot;firstFib&quot; of type &quot;integer&quot;]</span><br><span class="line">        [Scalar declaration &quot;secondFib&quot; of type &quot;integer&quot;]</span><br><span class="line">        [Scalar declaration &quot;fib&quot; of type &quot;integer&quot;]</span><br><span class="line">        [Assignment]</span><br><span class="line">            [Identifier &quot;firstFib&quot;]</span><br><span class="line">            [Literal constant &quot;1&quot;]</span><br><span class="line">        [Assignment]</span><br><span class="line">            [Identifier &quot;secondFib&quot;]</span><br><span class="line">            [Literal constant &quot;1&quot;]</span><br><span class="line">        [Assignment]</span><br><span class="line">            [Identifier &quot;cnt&quot;]</span><br><span class="line">            [Literal constant &quot;2&quot;]</span><br><span class="line">        [IF statement]</span><br><span class="line">            [Operator &quot;==&quot;]</span><br><span class="line">                [Identifier &quot;n&quot;]</span><br><span class="line">                [Literal constant &quot;1&quot;]</span><br><span class="line">            [RETURN statement]</span><br><span class="line">                [Literal constant &quot;1&quot;]</span><br><span class="line">            [IF statement]</span><br><span class="line">                [Operator &quot;==&quot;]</span><br><span class="line">                    [Identifier &quot;n&quot;]</span><br><span class="line">                    [Literal constant &quot;2&quot;]</span><br><span class="line">                [RETURN statement]</span><br><span class="line">                    [Literal constant &quot;1&quot;]</span><br><span class="line">                [Compound statement]</span><br><span class="line">                    [WHILE statement]</span><br><span class="line">                        [Operator &quot;&lt;&quot;]</span><br><span class="line">                            [Identifier &quot;cnt&quot;]</span><br><span class="line">                            [Identifier &quot;n&quot;]</span><br><span class="line">                        [Compound statement]</span><br><span class="line">                            [Assignment]</span><br><span class="line">                                [Identifier &quot;fib&quot;]</span><br><span class="line">                                [Operator &quot;+&quot;]</span><br><span class="line">                                    [Identifier &quot;firstFib&quot;]</span><br><span class="line">                                    [Identifier &quot;secondFib&quot;]</span><br><span class="line">                            [Assignment]</span><br><span class="line">                                [Identifier &quot;firstFib&quot;]</span><br><span class="line">                                [Identifier &quot;secondFib&quot;]</span><br><span class="line">                            [Assignment]</span><br><span class="line">                                [Identifier &quot;secondFib&quot;]</span><br><span class="line">                                [Identifier &quot;fib&quot;]</span><br><span class="line">                            [Assignment]</span><br><span class="line">                                [Identifier &quot;cnt&quot;]</span><br><span class="line">                                [Operator &quot;+&quot;]</span><br><span class="line">                                    [Identifier &quot;cnt&quot;]</span><br><span class="line">                                    [Literal constant &quot;1&quot;]</span><br><span class="line">        [RETURN statement]</span><br><span class="line">            [Identifier &quot;fib&quot;]</span><br><span class="line">[Function declaration &quot;main()&quot; of return type &quot;void&quot;]</span><br><span class="line">    [Compound statement]</span><br><span class="line">        [Scalar declaration &quot;n&quot; of type &quot;integer&quot;]</span><br><span class="line">        [Assignment]</span><br><span class="line">            [Identifier &quot;n&quot;]</span><br><span class="line">            [Call to function &quot;input()&quot;]</span><br><span class="line">        [Call to function &quot;output()&quot;]</span><br><span class="line">            [Call to function &quot;fibonacci()&quot;]</span><br><span class="line">                [Identifier &quot;n&quot;]</span><br></pre></td></tr></table></figure></li></ul><h1 id="语义分析程序">7. 语义分析程序</h1><h2 id="主要设计和实现思路-2">7.1 主要设计和实现思路</h2><h3 id="符号表构造">7.1.1 符号表构造</h3><p>首先通过<code>void buildSymbolTable(TreeNode*syntaxTree)</code>函数进行符号表构造</p><ul><li><code>static void drawRuler(FILE *output, char*string)</code>函数，用于确定符号表的格式,打印分割线</li><li><code>static voiddeclarePredefines(void)</code>函数，用来将C--语言内置的<code>input()</code>和<code>output()</code>函数添加进符号表</li><li><code>static void startBuildSymbolTable(TreeNode*syntaxTree)</code>函数开始构造符号表：<ul><li>该函数的参数为语法树根结点，通过遍历整个语法树，来寻找结点类型为DECK（声明结点）的结点，并将他们插入到符号表中，插入的过程中将进行检测。</li><li>声明也分为两种：变量的声明与函数的声明：变量的声明可直接插入到符号表；而函数的声明中可能有变量声明，此时，将会调用之前提到过的<code>drawruler()</code>函数，增加一张符号表，用于处理该函数内部的变量声明。</li><li>对于非声明类结点，只需进行错误检测，即在既有的符号表中查询其是否进行过声明。</li></ul></li></ul><h3 id="类型检查">7.1.2 类型检查</h3><p>首先通过<code>traverse(syntaxTree, nullProc,checkNode)</code>函数，检查相邻语法树结点的词法属性来判断是否出错。</p><ul><li><code>static void nullProc(TreeNode*syntaxTree)</code>函数直接返回（即遇到叶子结点），不进行其他操作</li><li><code>static void checkNode(TreeNode*syntaxTree)</code>函数通过遍历语法树，遍历到当前的一个结点之后，检查该结点的相邻结点是否符合语法规则，如果不符合就报错，如果符合就可以继续遍历。</li></ul><h2 id="类型检查语义分析程序代码">7.2 类型检查语义分析程序代码</h2><h3 id="symtab.c">7.2.1 symtab.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;strings.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Globals.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;SymTab.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Util.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MAXTABLESIZE 233</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> HIGHWATERMARK <span class="meta-string">&quot;__invalid__&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* The hash table itself */</span></span><br><span class="line"><span class="keyword">static</span> HashNodePtr hashtable[MAXTABLESIZE];</span><br><span class="line"></span><br><span class="line"><span class="comment">/* The &quot;temporary list&quot;, used to track scopes. */</span></span><br><span class="line"><span class="keyword">static</span> HashNodePtr tempList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">int</span> TraceAnalyse;</span><br><span class="line"><span class="keyword">int</span> scopeDepth;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> HashNodePtr <span class="title">allocateSymbolNode</span><span class="params">(<span class="keyword">char</span> *name,</span></span></span><br><span class="line"><span class="params"><span class="function">                                      TreeNode *declaration,</span></span></span><br><span class="line"><span class="params"><span class="function">                                      <span class="keyword">int</span> lineDefined)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* hashfunction(): takes a string and generates a hash value. */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">hashFunction</span><span class="params">(<span class="keyword">char</span> *key)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* error reporting */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">flagError</span><span class="params">(<span class="keyword">char</span> *message)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* used in symbol table scope dump */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">char</span> *<span class="title">formatSymbolType</span><span class="params">(TreeNode *node)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* the guts of dumpCurrentScope() */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">startDumpCurrentScope</span><span class="params">(HashNodePtr cursor)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">initSymbolTable</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(hashtable, <span class="number">0</span>, <span class="keyword">sizeof</span>(HashNodePtr) * MAXTABLESIZE);</span><br><span class="line">    tempList = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">insertSymbol</span><span class="params">(<span class="keyword">char</span> *name, TreeNode *symbolDefNode, <span class="keyword">int</span> lineDefined)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> errorString[<span class="number">80</span>]; </span><br><span class="line"></span><br><span class="line">    HashNodePtr newHashNode, temp;</span><br><span class="line">    <span class="keyword">int</span> hashBucket;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* If the symbol already exists, flag an error */</span></span><br><span class="line">    <span class="keyword">if</span> (symbolAlreadyDeclared(name))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">sprintf</span>(errorString, <span class="string">&quot;duplicate identifier \&quot;%s\&quot;\n&quot;</span>, name);</span><br><span class="line">        flagError(errorString);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* Locate bucket we&#x27;re using */</span></span><br><span class="line">        hashBucket = hashFunction(name);</span><br><span class="line">        <span class="comment">/* Allocate and insert record on front of bucket */</span></span><br><span class="line">        newHashNode = allocateSymbolNode(name, symbolDefNode, lineDefined);</span><br><span class="line">        <span class="keyword">if</span> (newHashNode != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            temp = hashtable[hashBucket];</span><br><span class="line">            hashtable[hashBucket] = newHashNode;</span><br><span class="line">            newHashNode-&gt;next = temp;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* Stick node on front of &quot;tempList&quot; */</span></span><br><span class="line">        newHashNode = allocateSymbolNode(name, symbolDefNode, lineDefined);</span><br><span class="line">        <span class="keyword">if</span> (newHashNode != <span class="literal">NULL</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            temp = tempList;</span><br><span class="line">            tempList = newHashNode;</span><br><span class="line">            tempList-&gt;next = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Check to see if the symbol given by &quot;name&quot; is already declared in thecurrent scope. */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">symbolAlreadyDeclared</span><span class="params">(<span class="keyword">char</span> *name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> symbolFound = FALSE;</span><br><span class="line">    HashNodePtr cursor;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Scan &quot;tempList&quot; within _current_ scope for duplicate definition */</span></span><br><span class="line">    cursor = tempList;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((cursor != <span class="literal">NULL</span>) &amp;&amp; (!symbolFound) &amp;&amp; ((<span class="built_in">strcmp</span>(cursor-&gt;name, HIGHWATERMARK) != <span class="number">0</span>)))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(name, cursor-&gt;name) == <span class="number">0</span>)</span><br><span class="line">            symbolFound = TRUE;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            cursor = cursor-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (symbolFound);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">HashNodePtr <span class="title">lookupSymbol</span><span class="params">(<span class="keyword">char</span> *name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HashNodePtr cursor;</span><br><span class="line">    <span class="keyword">int</span> hashBucket;    <span class="comment">/* hash bucket on which to conduct our search */</span></span><br><span class="line">    <span class="keyword">int</span> found = FALSE; </span><br><span class="line"></span><br><span class="line">    hashBucket = hashFunction(name);</span><br><span class="line">    cursor = hashtable[hashBucket];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (cursor != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(name, cursor-&gt;name) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            found = TRUE;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        cursor = cursor-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (found == TRUE)</span><br><span class="line">        <span class="keyword">return</span> cursor;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> * Use recursion to dump symbols out in &quot;reverse-reverse&quot; order.. i.e the</span></span><br><span class="line"><span class="comment"> *  right way around...</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dumpCurrentScope</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HashNodePtr cursor;</span><br><span class="line"></span><br><span class="line">    cursor = tempList;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* if the current scope isn&#x27;t empty,  dump it out */</span></span><br><span class="line">    <span class="keyword">if</span> ((cursor != <span class="literal">NULL</span>) &amp;&amp; (<span class="built_in">strcmp</span>(HIGHWATERMARK, cursor-&gt;name)))</span><br><span class="line">        startDumpCurrentScope(cursor);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> IDENT_LEN 12</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">startDumpCurrentScope</span><span class="params">(HashNodePtr cursor)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> paddedIdentifier[IDENT_LEN + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">char</span> *typeInformation; <span class="comment">/* used to catch result of formatSymbolType */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((cursor-&gt;next != <span class="literal">NULL</span>) &amp;&amp; (<span class="built_in">strcmp</span>(cursor-&gt;next-&gt;name, HIGHWATERMARK) != <span class="number">0</span>))</span><br><span class="line">        startDumpCurrentScope(cursor-&gt;next);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* pad identifier name */</span></span><br><span class="line">    <span class="built_in">memset</span>(paddedIdentifier, <span class="string">&#x27; &#x27;</span>, IDENT_LEN);</span><br><span class="line">    memmove(paddedIdentifier, cursor-&gt;name, <span class="built_in">strlen</span>(cursor-&gt;name));</span><br><span class="line">    paddedIdentifier[IDENT_LEN] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* output symbol table entry */</span></span><br><span class="line">    typeInformation = formatSymbolType(cursor-&gt;declaration);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">fprintf</span>(listing, <span class="string">&quot;%3d   %s   %7d     %c    %s\n&quot;</span>,</span><br><span class="line">            scopeDepth,</span><br><span class="line">            paddedIdentifier,</span><br><span class="line">            cursor-&gt;lineFirstReferenced,</span><br><span class="line">            cursor-&gt;declaration-&gt;isParameter ? <span class="string">&#x27;Y&#x27;</span> : <span class="string">&#x27;N&#x27;</span>,</span><br><span class="line">            typeInformation);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* Prevent a memory leak - (bjf, 11/5/2000) */</span></span><br><span class="line">    <span class="built_in">free</span>(typeInformation);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">newScope</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HashNodePtr newNode, temp;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     * This function is short and sweet: we just append a &quot;high water mark&quot;</span></span><br><span class="line"><span class="comment">     *  on &quot;tempList&quot;.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    newNode = allocateSymbolNode(HIGHWATERMARK, <span class="literal">NULL</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (newNode != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = tempList;</span><br><span class="line">        tempList = newNode;</span><br><span class="line">        tempList-&gt;next = temp;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">endScope</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">     *  endScope()&#x27;s job is to delete all symbols in the current scope.  It</span></span><br><span class="line"><span class="comment">     *  works by scanning &quot;tempList&quot; from the front and for each record</span></span><br><span class="line"><span class="comment">     *  before the high-water mark, it deletes each symbol&#x27;s occurrence in</span></span><br><span class="line"><span class="comment">     *  the hash table.  This is done until the high-water mark is consumed.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    HashNodePtr hashPtr;</span><br><span class="line">    HashNodePtr temp; <span class="comment">/* used in freeing HashNodes */</span></span><br><span class="line">    <span class="keyword">int</span> hashBucket;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((tempList != <span class="literal">NULL</span>) &amp;&amp; (<span class="built_in">strcmp</span>(HIGHWATERMARK, tempList-&gt;name)) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* locate this node in the hash table, delete it */</span></span><br><span class="line">        hashBucket = hashFunction(tempList-&gt;name);</span><br><span class="line">        hashPtr = hashtable[hashBucket];</span><br><span class="line"></span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">         *  INVARIANT: since symbols were inserted into the hash table _and_</span></span><br><span class="line"><span class="comment">         *    tempList in the same order, the name of the symbol on the</span></span><br><span class="line"><span class="comment">         *    front of the hash bucket _must_ be the same as the one under</span></span><br><span class="line"><span class="comment">         *    tempListPtr.</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line"></span><br><span class="line">        assert((tempList != <span class="literal">NULL</span>) &amp;&amp; (hashtable[hashBucket] != <span class="literal">NULL</span>));</span><br><span class="line">        assert(<span class="built_in">strcmp</span>(tempList-&gt;name, hashPtr-&gt;name) == <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* delete from hash table */</span></span><br><span class="line">        temp = hashtable[hashBucket]-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(hashtable[hashBucket]);</span><br><span class="line">        hashtable[hashBucket] = temp;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* ... and from second list */</span></span><br><span class="line">        temp = tempList-&gt;next;</span><br><span class="line">        <span class="built_in">free</span>(tempList);</span><br><span class="line">        tempList = temp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* delete high water mark */</span></span><br><span class="line">    assert(<span class="built_in">strcmp</span>(tempList-&gt;name, HIGHWATERMARK) == <span class="number">0</span>);</span><br><span class="line">    temp = tempList-&gt;next;</span><br><span class="line">    <span class="built_in">free</span>(tempList);</span><br><span class="line">    tempList = temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> HashNodePtr <span class="title">allocateSymbolNode</span><span class="params">(<span class="keyword">char</span> *name,</span></span></span><br><span class="line"><span class="params"><span class="function">                                      TreeNode *declaration,</span></span></span><br><span class="line"><span class="params"><span class="function">                                      <span class="keyword">int</span> lineDefined)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HashNode *temp;</span><br><span class="line"></span><br><span class="line">    temp = (HashNode *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(HashNode));</span><br><span class="line">    <span class="keyword">if</span> (temp == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        Error = TRUE;</span><br><span class="line">        <span class="built_in">fprintf</span>(listing,</span><br><span class="line">                <span class="string">&quot;*** Out of memory allocating memory for symbol table\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        temp-&gt;name = copyString(name);</span><br><span class="line">        temp-&gt;declaration = declaration;</span><br><span class="line">        temp-&gt;lineFirstReferenced = lineDefined;</span><br><span class="line">        temp-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Power-of-two multiplier in hash function */</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SHIFT 4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Code borrowed from Louden p.522 */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">hashFunction</span><span class="params">(<span class="keyword">char</span> *key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> temp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (key[i] != <span class="string">&#x27;\0&#x27;</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        temp = ((temp &lt;&lt; SHIFT) + key[i]) % MAXTABLESIZE;</span><br><span class="line">        ++i;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> temp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">flagError</span><span class="params">(<span class="keyword">char</span> *message)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&gt;&gt;&gt; Semantic error (symbol table): %s&quot;</span>, message);</span><br><span class="line">    Error = TRUE; <span class="comment">/* global variable to inhibit subseq. passes on error */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">char</span> *<span class="title">formatSymbolType</span><span class="params">(TreeNode *node)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> stringBuffer[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((node == <span class="literal">NULL</span>) || (node-&gt;nodekind != DecK))</span><br><span class="line">        <span class="built_in">strcpy</span>(stringBuffer, <span class="string">&quot;&lt;&lt;ERROR&gt;&gt;&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* node is a declaration */</span></span><br><span class="line">        <span class="keyword">switch</span> (node-&gt;kind.dec)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> ScalarDecK:</span><br><span class="line">            <span class="built_in">sprintf</span>(stringBuffer, <span class="string">&quot;Scalar of type %s&quot;</span>,</span><br><span class="line">                    typeName(node-&gt;variableDataType));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> ArrayDecK:</span><br><span class="line">            <span class="built_in">sprintf</span>(stringBuffer, <span class="string">&quot;Array of type %s with %d elements&quot;</span>,</span><br><span class="line">                    typeName(node-&gt;variableDataType), node-&gt;val);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> FuncDecK:</span><br><span class="line">            <span class="built_in">sprintf</span>(stringBuffer, <span class="string">&quot;Function with return type %s&quot;</span>,</span><br><span class="line">                    typeName(node-&gt;functionReturnType));</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            <span class="built_in">strcpy</span>(stringBuffer, <span class="string">&quot;&lt;&lt;UNKNOWN&gt;&gt;&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> copyString(stringBuffer);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="analyse.c">7.2.2 analyse.c</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Analyse.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Globals.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;SymTab.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;Util.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* draw a ruler on the screen */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">drawRuler</span><span class="params">(FILE *output, <span class="keyword">char</span> *<span class="built_in">string</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* the guts of buildSymbolTable() */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">startBuildSymbolTable</span><span class="params">(TreeNode *syntaxTree)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* flag an error from the type checker */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">flagSemanticError</span><span class="params">(<span class="keyword">char</span> *str)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* generic tree traversal routine */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">traverse</span><span class="params">(TreeNode *syntaxTree,</span></span></span><br><span class="line"><span class="params"><span class="function">                     <span class="keyword">void</span> (*preProc)(TreeNode *),</span></span></span><br><span class="line"><span class="params"><span class="function">                     <span class="keyword">void</span> (*postProc)(TreeNode *))</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* routine to perform the actual type check on a node */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkNode</span><span class="params">(TreeNode *syntaxTree)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* dummy do-nothing procedure used to keep traversal() happy */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">nullProc</span><span class="params">(TreeNode *syntaxTree)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* traverse the syntax tree, marking global variables as such */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">markGlobals</span><span class="params">(TreeNode *tree)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* declare the C-minus &quot;built-in&quot; input() and output() routines */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">declarePredefines</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* type-check functions&#x27; formal parameters against actual parameters */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">checkFormalAgainstActualParms</span><span class="params">(TreeNode *formal, TreeNode *actual)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">buildSymbolTable</span><span class="params">(TreeNode *syntaxTree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* Format headings */</span></span><br><span class="line">    <span class="keyword">if</span> (TraceAnalyse)</span><br><span class="line">    &#123;</span><br><span class="line">        drawRuler(listing, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="built_in">fprintf</span>(listing,</span><br><span class="line">                <span class="string">&quot;Scope Identifier        Line   Is a   Symbol type\n&quot;</span>);</span><br><span class="line">        <span class="built_in">fprintf</span>(listing,</span><br><span class="line">                <span class="string">&quot;depth                   Decl.  parm?\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    declarePredefines(); <span class="comment">/* make input() and output() visible in globals */</span></span><br><span class="line">    startBuildSymbolTable(syntaxTree);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">typeCheck</span><span class="params">(TreeNode *syntaxTree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    traverse(syntaxTree, nullProc, checkNode);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* make input() and output() visible in globals */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">declarePredefines</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *input;</span><br><span class="line">    TreeNode *output;</span><br><span class="line">    TreeNode *temp;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* define &quot;int input(void)&quot; */</span></span><br><span class="line">    input = newDecNode(FuncDecK);</span><br><span class="line">    input-&gt;name = copyString(<span class="string">&quot;input&quot;</span>);</span><br><span class="line">    input-&gt;functionReturnType = Integer;</span><br><span class="line">    input-&gt;expressionType = Function;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* define &quot;void output(int)&quot; */</span></span><br><span class="line">    temp = newDecNode(ScalarDecK);</span><br><span class="line">    temp-&gt;name = copyString(<span class="string">&quot;arg&quot;</span>);</span><br><span class="line">    temp-&gt;variableDataType = Integer;</span><br><span class="line">    temp-&gt;expressionType = Integer;</span><br><span class="line"></span><br><span class="line">    output = newDecNode(FuncDecK);</span><br><span class="line">    output-&gt;name = copyString(<span class="string">&quot;output&quot;</span>);</span><br><span class="line">    output-&gt;functionReturnType = Void;</span><br><span class="line">    output-&gt;expressionType = Function;</span><br><span class="line">    output-&gt;child[<span class="number">0</span>] = temp;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* get input() and output() added to global scope */</span></span><br><span class="line">    insertSymbol(<span class="string">&quot;input&quot;</span>, input, <span class="number">0</span>);</span><br><span class="line">    insertSymbol(<span class="string">&quot;output&quot;</span>, output, <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">startBuildSymbolTable</span><span class="params">(TreeNode *syntaxTree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;                     <span class="comment">/* iterate over node children */</span></span><br><span class="line">    HashNodePtr currentSymbol; <span class="comment">/* symbol being looked up */</span></span><br><span class="line">    <span class="keyword">char</span> errorMessage[<span class="number">80</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* used to decorate RETURN nodes with enclosing procedure */</span></span><br><span class="line">    <span class="keyword">static</span> TreeNode *enclosingFunction = <span class="literal">NULL</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (syntaxTree != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* Examine current symbol: if it&#x27;s a declaration, insert intosymbol table. */</span></span><br><span class="line">        <span class="keyword">if</span> (syntaxTree-&gt;nodekind == DecK)</span><br><span class="line">            insertSymbol(syntaxTree-&gt;name, syntaxTree, syntaxTree-&gt;lineno);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* If entering a new function, tell the symbol table */</span></span><br><span class="line">        <span class="keyword">if</span> ((syntaxTree-&gt;nodekind == DecK) &amp;&amp; (syntaxTree-&gt;kind.dec == FuncDecK))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">/* record the enclosing procedure declaration */</span></span><br><span class="line">            enclosingFunction = syntaxTree;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (TraceAnalyse)</span><br><span class="line">                drawRuler(listing, syntaxTree-&gt;name);</span><br><span class="line"></span><br><span class="line">            newScope();</span><br><span class="line">            ++scopeDepth;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* if entering a compound-statement, create a new scope as well */</span></span><br><span class="line">        <span class="keyword">if</span> ((syntaxTree-&gt;nodekind == StmtK) &amp;&amp; (syntaxTree-&gt;kind.stmt == CompoundK))</span><br><span class="line">        &#123;</span><br><span class="line">            newScope();</span><br><span class="line">            ++scopeDepth;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* if it&#x27;s an identifier, it needs to be check symbol table*/</span></span><br><span class="line">        <span class="keyword">if</span> (((syntaxTree-&gt;nodekind == ExpK) &amp;&amp; (syntaxTree-&gt;kind.<span class="built_in">exp</span> == IdK)) </span><br><span class="line">         || ((syntaxTree-&gt;nodekind == StmtK) &amp;&amp; (syntaxTree-&gt;kind.stmt == CallK)))</span><br><span class="line">        &#123;</span><br><span class="line">            currentSymbol = lookupSymbol(syntaxTree-&gt;name);</span><br><span class="line">            <span class="keyword">if</span> (currentSymbol == <span class="literal">NULL</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* operation failed; say so to user */</span></span><br><span class="line">                <span class="built_in">sprintf</span>(errorMessage,</span><br><span class="line">                        <span class="string">&quot;identifier \&quot;%s\&quot; unknown or out of scope\n&quot;</span>,</span><br><span class="line">                        syntaxTree-&gt;name);</span><br><span class="line">                flagSemanticError(errorMessage);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                syntaxTree-&gt;declaration = currentSymbol-&gt;declaration;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* mark return type */</span></span><br><span class="line">        <span class="keyword">if</span> ((syntaxTree-&gt;nodekind == StmtK) &amp;&amp;</span><br><span class="line">            (syntaxTree-&gt;kind.stmt == ReturnK))</span><br><span class="line">        &#123;</span><br><span class="line">            syntaxTree-&gt;declaration = enclosingFunction;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; MAXCHILDREN; ++i)</span><br><span class="line">            startBuildSymbolTable(syntaxTree-&gt;child[i]);</span><br><span class="line"></span><br><span class="line">        <span class="comment">/* If leaving a scope, tell the symbol table */</span></span><br><span class="line">        <span class="keyword">if</span> (((syntaxTree-&gt;nodekind == DecK) &amp;&amp; (syntaxTree-&gt;kind.dec == FuncDecK)) </span><br><span class="line">         || ((syntaxTree-&gt;nodekind == StmtK) &amp;&amp; (syntaxTree-&gt;kind.stmt == CompoundK)))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (TraceAnalyse)</span><br><span class="line">                dumpCurrentScope();</span><br><span class="line">            --scopeDepth;</span><br><span class="line">            endScope();</span><br><span class="line">        &#125;</span><br><span class="line">        syntaxTree = syntaxTree-&gt;sibling;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">drawRuler</span><span class="params">(FILE *output, <span class="keyword">char</span> *<span class="built_in">string</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> length;</span><br><span class="line">    <span class="keyword">int</span> numTrailingDashes;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* empty string */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(<span class="built_in">string</span>, <span class="string">&quot;&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">        length = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        length = <span class="built_in">strlen</span>(<span class="built_in">string</span>) + <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">fprintf</span>(output, <span class="string">&quot;---&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (length &gt; <span class="number">0</span>)</span><br><span class="line">        <span class="built_in">fprintf</span>(output, <span class="string">&quot; %s &quot;</span>, <span class="built_in">string</span>);</span><br><span class="line">    numTrailingDashes = <span class="number">45</span> - length;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; numTrailingDashes; ++i)</span><br><span class="line">        <span class="built_in">fprintf</span>(output, <span class="string">&quot;-&quot;</span>);</span><br><span class="line">    <span class="built_in">fprintf</span>(output, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">flagSemanticError</span><span class="params">(<span class="keyword">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">fprintf</span>(listing, <span class="string">&quot;&gt;&gt;&gt; Semantic error (type checker): %s&quot;</span>, str);</span><br><span class="line">    Error = TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* generic tree traversal routine */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">traverse</span><span class="params">(TreeNode *syntaxTree,</span></span></span><br><span class="line"><span class="params"><span class="function">                     <span class="keyword">void</span> (*preProc)(TreeNode *),</span></span></span><br><span class="line"><span class="params"><span class="function">                     <span class="keyword">void</span> (*postProc)(TreeNode *))</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (syntaxTree != <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        preProc(syntaxTree);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; MAXCHILDREN; ++i)</span><br><span class="line">            traverse(syntaxTree-&gt;child[i], preProc, postProc);</span><br><span class="line">        postProc(syntaxTree);</span><br><span class="line">        syntaxTree = syntaxTree-&gt;sibling;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> <span class="title">checkFormalAgainstActualParms</span><span class="params">(TreeNode *formal, TreeNode *actual)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    TreeNode *firstList;</span><br><span class="line">    TreeNode *secondList;</span><br><span class="line"></span><br><span class="line">    firstList = formal-&gt;child[<span class="number">0</span>];</span><br><span class="line">    secondList = actual-&gt;child[<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ((firstList != <span class="literal">NULL</span>) &amp;&amp; (secondList != <span class="literal">NULL</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (firstList-&gt;expressionType != secondList-&gt;expressionType)</span><br><span class="line">            <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (firstList)</span><br><span class="line">            firstList = firstList-&gt;sibling;</span><br><span class="line">        <span class="keyword">if</span> (secondList)</span><br><span class="line">            secondList = secondList-&gt;sibling;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (((firstList == <span class="literal">NULL</span>) &amp;&amp; (secondList != <span class="literal">NULL</span>)) </span><br><span class="line">     || ((firstList != <span class="literal">NULL</span>) &amp;&amp; (secondList == <span class="literal">NULL</span>)))</span><br><span class="line">        <span class="keyword">return</span> FALSE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> TRUE;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">checkNode</span><span class="params">(TreeNode *syntaxTree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> errorMessage[<span class="number">100</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">switch</span> (syntaxTree-&gt;nodekind)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> DecK:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (syntaxTree-&gt;kind.dec)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> ScalarDecK:</span><br><span class="line">            syntaxTree-&gt;expressionType = syntaxTree-&gt;variableDataType;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> ArrayDecK:</span><br><span class="line">            syntaxTree-&gt;expressionType = Array;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> FuncDecK:</span><br><span class="line">            syntaxTree-&gt;expressionType = Function;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">/* case DecK */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> StmtK:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (syntaxTree-&gt;kind.stmt)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> IfK:</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (syntaxTree-&gt;child[<span class="number">0</span>]-&gt;expressionType != Integer)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">sprintf</span>(errorMessage,</span><br><span class="line">                        <span class="string">&quot;IF-expression must be integer (line %d)\n&quot;</span>,</span><br><span class="line">                        syntaxTree-&gt;lineno);</span><br><span class="line">                flagSemanticError(errorMessage);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> WhileK:</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (syntaxTree-&gt;child[<span class="number">0</span>]-&gt;expressionType != Integer)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">sprintf</span>(errorMessage,</span><br><span class="line">                        <span class="string">&quot;WHILE-expression must be integer (line %d)\n&quot;</span>,</span><br><span class="line">                        syntaxTree-&gt;lineno);</span><br><span class="line">                flagSemanticError(errorMessage);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> CallK:</span><br><span class="line"></span><br><span class="line">            <span class="comment">/*  Check types and numbers of formal against actual parameters */</span></span><br><span class="line">            <span class="keyword">if</span> (!checkFormalAgainstActualParms(syntaxTree-&gt;declaration,</span><br><span class="line">                                               syntaxTree))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">sprintf</span>(errorMessage, <span class="string">&quot;formal and actual parameters to &quot;</span></span><br><span class="line">                                      <span class="string">&quot;function don\&#x27;t match (line %d)\n&quot;</span>,</span><br><span class="line">                        syntaxTree-&gt;lineno);</span><br><span class="line">                flagSemanticError(errorMessage);</span><br><span class="line">            &#125;</span><br><span class="line">            syntaxTree-&gt;expressionType = syntaxTree-&gt;declaration-&gt;functionReturnType;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> ReturnK:</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* match return type */</span></span><br><span class="line">            <span class="keyword">if</span> (syntaxTree-&gt;declaration-&gt;functionReturnType == Integer)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((syntaxTree-&gt;child[<span class="number">0</span>] == <span class="literal">NULL</span>) || </span><br><span class="line">                    (syntaxTree-&gt;child[<span class="number">0</span>]-&gt;expressionType != Integer))</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">sprintf</span>(errorMessage, <span class="string">&quot;RETURN-expression is either &quot;</span></span><br><span class="line">                                          <span class="string">&quot;missing or not integer (line %d)\n&quot;</span>,</span><br><span class="line">                            syntaxTree-&gt;lineno);</span><br><span class="line">                    flagSemanticError(errorMessage);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (syntaxTree-&gt;declaration-&gt;functionReturnType == Void)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">/* does a return-expression exist? complain */</span></span><br><span class="line">                <span class="keyword">if</span> (syntaxTree-&gt;child[<span class="number">0</span>] != <span class="literal">NULL</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">sprintf</span>(errorMessage, <span class="string">&quot;RETURN-expression must be&quot;</span></span><br><span class="line">                                          <span class="string">&quot;void (line %d)\n&quot;</span>,</span><br><span class="line">                            syntaxTree-&gt;lineno);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> CompoundK:</span><br><span class="line"></span><br><span class="line">            syntaxTree-&gt;expressionType = Void;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">/* case StmtK */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">case</span> ExpK:</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span> (syntaxTree-&gt;kind.<span class="built_in">exp</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="keyword">case</span> OpK:</span><br><span class="line">            <span class="comment">/* Arithmetic operators */</span></span><br><span class="line">            <span class="keyword">if</span> ((syntaxTree-&gt;op == PLUS) || (syntaxTree-&gt;op == MINUS) ||</span><br><span class="line">                (syntaxTree-&gt;op == TIMES) || (syntaxTree-&gt;op == DIVIDE))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((syntaxTree-&gt;child[<span class="number">0</span>]-&gt;expressionType == Integer) &amp;&amp;</span><br><span class="line">                    (syntaxTree-&gt;child[<span class="number">1</span>]-&gt;expressionType == Integer))</span><br><span class="line">                    syntaxTree-&gt;expressionType = Integer;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">sprintf</span>(errorMessage, <span class="string">&quot;arithmetic operators must have &quot;</span></span><br><span class="line">                                          <span class="string">&quot;integer operands (line %d)\n&quot;</span>,</span><br><span class="line">                            syntaxTree-&gt;lineno);</span><br><span class="line">                    flagSemanticError(errorMessage);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">/* Relational operators */</span></span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> ((syntaxTree-&gt;op == GT) || (syntaxTree-&gt;op == LT) ||</span><br><span class="line">                     (syntaxTree-&gt;op == LTE) || (syntaxTree-&gt;op == GTE) ||</span><br><span class="line">                     (syntaxTree-&gt;op == EQ) || (syntaxTree-&gt;op == NE))</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ((syntaxTree-&gt;child[<span class="number">0</span>]-&gt;expressionType == Integer) &amp;&amp;</span><br><span class="line">                    (syntaxTree-&gt;child[<span class="number">1</span>]-&gt;expressionType == Integer))</span><br><span class="line">                    syntaxTree-&gt;expressionType = Integer;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">sprintf</span>(errorMessage, <span class="string">&quot;relational operators must have &quot;</span></span><br><span class="line">                                          <span class="string">&quot;integer operands (line %d)\n&quot;</span>,</span><br><span class="line">                            syntaxTree-&gt;lineno);</span><br><span class="line">                    flagSemanticError(errorMessage);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">sprintf</span>(errorMessage, <span class="string">&quot;error in type checker: unknown operator&quot;</span></span><br><span class="line">                                      <span class="string">&quot; (line %d)\n&quot;</span>,</span><br><span class="line">                        syntaxTree-&gt;lineno);</span><br><span class="line">                flagSemanticError(errorMessage);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> IdK:</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (syntaxTree-&gt;declaration-&gt;expressionType == Integer)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (syntaxTree-&gt;child[<span class="number">0</span>] == <span class="literal">NULL</span>)</span><br><span class="line">                    syntaxTree-&gt;expressionType = Integer;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">sprintf</span>(errorMessage, <span class="string">&quot;identifier is an illegal type &quot;</span></span><br><span class="line">                                        <span class="string">&quot;(line %d)\n&quot;</span>,</span><br><span class="line">                            syntaxTree-&gt;lineno);</span><br><span class="line">                    flagSemanticError(errorMessage);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> ConstK:</span><br><span class="line"></span><br><span class="line">            syntaxTree-&gt;expressionType = Integer;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">case</span> AssignK:</span><br><span class="line"></span><br><span class="line">            <span class="comment">/* Variable assignment */</span></span><br><span class="line">            <span class="keyword">if</span> ((syntaxTree-&gt;child[<span class="number">0</span>]-&gt;expressionType == Integer) &amp;&amp;</span><br><span class="line">                (syntaxTree-&gt;child[<span class="number">1</span>]-&gt;expressionType == Integer))</span><br><span class="line">                syntaxTree-&gt;expressionType = Integer;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">sprintf</span>(errorMessage, <span class="string">&quot;both assigning and assigned expression&quot;</span></span><br><span class="line">                                      <span class="string">&quot; must be integer (line %d)\n&quot;</span>,</span><br><span class="line">                        syntaxTree-&gt;lineno);</span><br><span class="line">                flagSemanticError(errorMessage);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">break</span>; <span class="comment">/* case ExpK */</span></span><br><span class="line"></span><br><span class="line">    &#125; <span class="comment">/* switch (syntaxTree-&gt;nodekind) */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* dummy do-nothing procedure used to keep traverse() happy */</span></span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">nullProc</span><span class="params">(TreeNode *syntaxTree)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="实验演示-3">7.3 实验演示</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Scope Identifier        Line   Is a   Symbol type</span><br><span class="line">depth                   Decl.  parm?</span><br><span class="line">--- fibonacci ----------------------------------</span><br><span class="line">  2   cnt                  3     N    Scalar of type integer</span><br><span class="line">  2   firstFib             4     N    Scalar of type integer</span><br><span class="line">  2   secondFib            5     N    Scalar of type integer</span><br><span class="line">  2   fib                  6     N    Scalar of type integer</span><br><span class="line">  1   n                    1     Y    Scalar of type integer</span><br><span class="line">--- main ---------------------------------------</span><br><span class="line">  2   n                   31     N    Scalar of type integer</span><br><span class="line">--- GLOBALS ------------------------------------</span><br><span class="line">  0   input                0     N    Function with return type integer</span><br><span class="line">  0   output               0     N    Function with return type void</span><br><span class="line">  0   fibonacci            1     N    Function with return type integer</span><br><span class="line">  0   main                29     N    Function with return type void</span><br><span class="line">------------------------------------------------</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">用C语言实现一个C--语言的编译器</summary>
    
    
    
    <category term="report" scheme="https://dekrt.cn/categories/report/"/>
    
    
    <category term="报告 | report" scheme="https://dekrt.cn/tags/%E6%8A%A5%E5%91%8A-report/"/>
    
  </entry>
  
  <entry>
    <title>华科周边美食推荐</title>
    <link href="https://dekrt.cn/tutorial/delicious/"/>
    <id>https://dekrt.cn/tutorial/delicious/</id>
    <published>2022-08-26T09:59:56.000Z</published>
    <updated>2022-08-26T10:06:57.098Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文作者<a href="https://dekrt.cn/">dekrt</a>与<a href="https://blog.just-plain.fun/">YiNN</a>,封面配图<a href="https://weibo.com/u/2605569735">TianChunyu_</a></p></blockquote><h1 id="华科周边美食推荐">华科周边美食推荐</h1><blockquote><p>大致按照东-中-西-校外的顺序编写</p></blockquote><h2 id="韵苑茶咖">韵苑茶咖</h2><h3 id="锅盔">锅盔：</h3><p>某种意义上更像是馅饼，但是老板人很好，可以当夜宵吃</p><h3 id="茶咖内部">茶咖内部</h3><h4 id="一楼">一楼</h4><p>主推川北郎鸡公煲，确实非常好吃。</p><p>酸菜鱼蕃茄鱼黄焖鸡烤鱼饭味道都不错，价格有点小贵。</p><p><img src="/tutorial/delicious/clip_image002.jpg"></p><h4 id="二楼">二楼</h4><p>主营铁板饭和鱼粉，铁板饭个人觉得外婆菜好好吃，鱼粉都还可以</p><h4 id="三楼">三楼</h4><p>去得少，有咖啡有饭</p><h2 id="金陵汤包">金陵汤包：</h2><p>主要做外卖，在小程序久久折下单</p><p>早餐的不二选择，提前一晚预定可以在第二天上早八前送到宿舍楼下</p><p>汤包是学校里最好吃的汤包！</p><p><img src="/tutorial/delicious/clip_image004.jpg"></p><p>千里香馄饨加辣加醋巨好吃 灵魂是加辣加醋</p><p>（下图是没加辣没加醋的无灵魂版）</p><p><img src="/tutorial/delicious/clip_image006.gif"></p><h2 id="学一食堂一楼旁边">学一食堂一楼旁边：</h2><p>一品豆花（现在好像叫一豌豆花了）</p><p>双皮奶，锡纸面，花甲粉，以及豆花。军训的时候天天吃，非常爽。</p><h2 id="氧气层">氧气层：</h2><p>东边cbd二楼</p><p>环境很好，定价比较贵，味道还行</p><p>奶油焗饭有点太腻了</p><p><img src="/tutorial/delicious/clip_image008.gif"></p><h2 id="周麻婆">周麻婆：</h2><p>2r一份的麻婆豆腐好吃！</p><p>菜都不错，还挺便宜。</p><h2 id="排档江湖">排档江湖：</h2><p>离韵苑最近的烧烤店，味道不错，不过分量比较少</p><p><img src="/tutorial/delicious/clip_image010.gif"></p><h2 id="启明咖啡馆">启明咖啡馆：</h2><p>在启明学院亮胜楼十二楼，是自习的好去处</p><p><img src="/tutorial/delicious/clip_image012.gif"><img src="/tutorial/delicious/clip_image014.gif"></p><h2 id="汉堡王">汉堡王</h2><p>东边cbd</p><p>可以淘宝买兑换券在现场机子扫码下单，不到二十就能享受皇堡三件套的快乐</p><p><img src="/tutorial/delicious/clip_image016.gif"></p><h2 id="巴尔郎鸡公煲">巴尔郎鸡公煲：</h2><p>跟茶咖的不一样，这家偏麻，味道不错</p><p><img src="/tutorial/delicious/clip_image018.jpg"></p><h2 id="感觉螺蛳粉">感觉螺蛳粉：</h2><p>东小门往西拐一百五十米左右，同样可以导航</p><p>螺蛳粉爱好者的福音</p><p>喜欢加炸蛋和鸭肠。炸蛋吸饱汤汁巨香，鸭肠是卤的，也很香。</p><p><img src="/tutorial/delicious/clip_image020.gif"></p><h2 id="老兵烧烤">老兵烧烤：</h2><p>考鸡爪yyds，价格也比刘大烧烤便宜</p><p>可以当夜宵吃，有次吃到两三点回去。</p><p><img src="/tutorial/delicious/clip_image022.jpg"></p><p><img src="/tutorial/delicious/clip_image024.gif"></p><h2 id="韩味屋">韩味屋：</h2><p>出门向左走，韩味屋 部队火锅，好像还有个泡菜饭烤肉也不错</p><h2 id="绝望坡猪脚饭韩小愈">绝望坡猪脚饭（韩小愈）：</h2><p>个人感觉没有紫菘的猪脚饭好吃</p><p>好处是近，但是下课的时候人多</p><p>听说凉面不错</p><p><img src="/tutorial/delicious/clip_image026.jpg"></p><h2 id="水果捞">水果捞</h2><h3 id="夏季水果捞">夏季水果捞：</h3><p>东校区的第一家，在绝望坡上</p><p>水果切的比较大，品种用的比较好，但是比较贵，有很多人排队（特别壮观）</p><p><img src="/tutorial/delicious/clip_image028.jpg"></p><h3 id="果然有味">果然有味：</h3><p>在绝望坡上，往药店那个方向一直走，快到东迈</p><p>是水果店里面的水果捞，老板非常热情，他家的水果还可以送货上门</p><p>水果捞在店里面，位置比较偏所以没多少人排队</p><h3 id="蜜果c水果捞">蜜果c水果捞：</h3><p>在东小门门口，简舍对面的位置</p><p>水果比较新鲜，比绝望坡上的夏记便宜很之多</p><p><img src="/tutorial/delicious/clip_image030.gif"></p><h2 id="讨喜绝望坡上叫华冠蛋糕">讨喜（绝望坡上叫华冠蛋糕）</h2><p>有点小贵，八分之一蛋糕大概20r，但是用料非常好，味道真的很绝！</p><p><img src="/tutorial/delicious/clip_image032.jpg"></p><p><img src="/tutorial/delicious/clip_image034.jpg"></p><p><img src="/tutorial/delicious/clip_image036.jpg"></p><h2 id="鱼你在一起">鱼你在一起：</h2><p>集贸美食，主营酸菜鱼，配米饭好吃</p><p><img src="/tutorial/delicious/clip_image038.jpg"></p><p><img src="/tutorial/delicious/clip_image040.jpg"></p><h2 id="刘大烧烤">刘大烧烤：</h2><p>皮蛋拌豆腐，吃过的都说好！</p><p>有时候经常做些活动，肉筋1r一串之类的，校内聚餐好去处</p><p><img src="/tutorial/delicious/clip_image042.jpg"></p><p><img src="/tutorial/delicious/clip_image044.jpg"></p><h2 id="紫菘猪脚饭">紫菘猪脚饭：</h2><p>超越绝望坡韩小愈</p><p>经典猪脚饭好吃，会给你加好多汤汁</p><p><img src="/tutorial/delicious/clip_image046.jpg"></p><p>超级猪脚饭会给你加巴掌大的猪脚，巨巨巨满足</p><p>虾仁滑蛋饭也好吃，用平底锅现做的</p><p><img src="/tutorial/delicious/clip_image048.jpg"></p><h2 id="舌尖大师">舌尖大师：</h2><p>校内在西校区百惠园右边往里的位置，好处是方便，封校也能吃</p><p>校外在光体对面，锅神麻辣烫的旁边，有点是可以用美团的优惠券，可能会便宜一点</p><p>超级好吃，梦中情锅</p><p><img src="/tutorial/delicious/clip_image050.jpg"></p><h2 id="锅神麻辣烫">锅神麻辣烫：</h2><p>南二门光谷体育馆对面，可以导航过去</p><p>华科最好吃的麻辣烫了可以说是</p><p><img src="/tutorial/delicious/clip_image052.jpg"></p><p><img src="/tutorial/delicious/clip_image054.jpg"></p><h2 id="木屋烧烤">木屋烧烤：</h2><p>在南一门对面泛悦城，贵，人均大概80r，但是真的非常的好吃！</p><p>啤酒拿的大杯子装的（未成年谨慎饮酒）</p><p>烤小肥牛，烤猪蹄都好吃！</p><p><img src="/tutorial/delicious/clip_image056.jpg"></p><h2 id="海底捞火锅">海底捞火锅：</h2><p>大学生享受88折或69折优惠 支付表领券</p><p>当夜宵和聚餐的好选择</p><p><img src="/tutorial/delicious/clip_image058.jpg"></p><h2 id="虎头局">虎头局：</h2><p>在光谷那个大的扶梯下面，做糕点的，小贵</p><p>但是他家的QQ提子麻薯和老虎卷真的很绝！</p><h2 id="螺蛳粉火锅">螺蛳粉火锅：</h2><p>如果能接受的话可以试试，位置在光谷火星美食街三楼，不太好找</p><p>适合寝室四个人聚餐，粉免费续，双人套餐绝对够吃，人均25r</p><p><img src="/tutorial/delicious/clip_image060.jpg"></p><p><img src="/tutorial/delicious/clip_image062.jpg"></p><h2 id="压轴登场茶颜悦色">压轴登场——茶颜悦色！</h2><p><img src="/tutorial/delicious/clip_image064.gif"></p><p><img src="/tutorial/delicious/clip_image066.gif"></p><p>以下是点单攻略↓</p><h3 id="现场点单">现场点单：</h3><p>华科附近目前分布了四家茶颜：两家在南大门对面的泛悦城，一家在光谷世界城，还有一家在光谷德国风情街</p><p>泛悦城的两家离东校区最近，分别在负一层和地上一层。从南大门左边地铁口下去直走可以直通到负一层的茶颜，这家通常人比较少，只需等十到二十分钟，但不支持小程序点单，只能现场点，但是可以送外卖。地上一楼的茶颜现在支持小程序点单，不过人会稍微多一些。</p><h3 id="外卖点单">外卖点单：</h3><p>直接小程序下单就行，和其他外卖一样只能送到校门口。有起送门槛，建议拼单（欢迎加入软院拼单群）送达地可以填东九旁边的西北门，就能上课顺便美美喝茶颜了</p><h3 id="单品推荐">单品推荐：</h3><p>第一次喝的话推荐经典款，幽兰拿铁或者风栖绿桂。</p><p><img src="/tutorial/delicious/clip_image068.gif"></p><p>其他单品就没有什么推荐的了:D 一款比一款好喝，是可以随机盲点的程度</p><p>用余额购买的话每杯会返还1.5个积点，相当于3块钱，比较实惠。</p>]]></content>
    
    
    <summary type="html">浅浅介绍一下华科周边的美味</summary>
    
    
    
    <category term="tutorial" scheme="https://dekrt.cn/categories/tutorial/"/>
    
    
    <category term="教程 | tutorial" scheme="https://dekrt.cn/tags/%E6%95%99%E7%A8%8B-tutorial/"/>
    
  </entry>
  
  <entry>
    <title>华科食堂美食推荐</title>
    <link href="https://dekrt.cn/tutorial/dining-hall/"/>
    <id>https://dekrt.cn/tutorial/dining-hall/</id>
    <published>2022-08-16T14:36:21.000Z</published>
    <updated>2022-08-17T12:07:07.499Z</updated>
    
    <content type="html"><![CDATA[<h1 id="华科及周边美味攻略">华科及周边美味攻略</h1><blockquote><p>本文作者<a href="https://dekrt.cn/">dekrt</a>与<a href="https://blog.just-plain.fun/">YiNN</a>,封面配图<a href="https://weibo.com/u/2605569735">TianChunyu_</a></p></blockquote><h2 id="韵酒">韵酒</h2><blockquote><p>作为华科争议最大的食堂(之一)，建议是除了推荐菜品别的不要轻易尝试。</p></blockquote><p>可以先看看小猴的视频</p><iframe src="//player.bilibili.com/player.html?aid=339993232&amp;bvid=BV1JR4y1c7GL&amp;cid=555022951&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen></iframe><h3 id="一楼中间如意馄饨">一楼中间如意馄饨</h3><p>早餐馄饨4r，非常不错。麻辣抄手慎重，曾经给我跟我的室友带来了肠胃炎校医院吊水的惨痛经历，不过干拌馄饨好吃。</p><h3 id="一楼陕西面食">一楼陕西面食</h3><p>砂锅面是拿小锅现煮的，非常的好吃；推荐鸡蛋砂锅面，炸蛋吸饱汤汁后超香！</p><p><img src="/tutorial/dining-hall/98D53BBDB2C51EEC3BB3A32BE9F723A8.png"></p><p>油泼面也挺好吃</p><p><img src="/tutorial/dining-hall/clip_image004.jpg"></p><h3 id="一楼最右面麻辣烫">一楼最右面麻辣烫</h3><p>听别人说挺好吃，但是我没吃过</p><h3 id="二楼最右边窗口"><strong>二楼最右边窗口</strong></h3><p><strong>强推:烧鹅/脆皮鹅腿/黑鸭</strong>。烧鹅外皮酥脆，肉质紧实，配上汤汁拌饭非常的nice；黑鸭饭的味道跟周黑鸭有点像，甜辣的口，根本炫到停不下来。</p><p><img src="/tutorial/dining-hall/67D0BAFFAE47BB5A8E44390B980305E9.png"></p><p><img src="/tutorial/dining-hall/clip_image006.jpg"></p><p><img src="/tutorial/dining-hall/clip_image008.jpg"></p><h2 id="东篱">东篱</h2><p>左边窗口的猪扒/鸡扒铁板饭、排骨锅仔很喜欢，味道不错</p><p>该窗口除了以上三种，建议不要尝试其他，百分之九十踩雷（来自yxt的血泪教训</p><h2 id="东园">东园</h2><blockquote><p>一楼有的窗口可能会比较贵，动不动就将近20，选菜的时候要谨防刺客</p></blockquote><h3 id="一楼">一楼</h3><p>铁板饭和石锅饭特别好吃。</p><p>北面有个九块钱两荤一素的窗口，味道不错，性价比之王</p><p><img src="/tutorial/dining-hall/201FC499EFE39D2352A0D4FC964F1123.png"></p><h3 id="二楼">二楼</h3><p>热干面好吃，别的没吃过</p><h3 id="三楼自助">三楼（自助）</h3><p>个人感觉不错，荤素俱全，也挺便宜的</p><p><img src="/tutorial/dining-hall/D93291CD0146EDAAEE3FEF92B9091DDB.png"></p><h2 id="学一食堂一楼">学一食堂一楼</h2><h3 id="云南米线">云南米线</h3><p>云南米线yyds 大概是东校区唯一好吃的粉（除了校门外的螺蛳粉）</p><p>个人最爱临沧牛肉米线和傣味豆豉米线（其实是香辣肉末），好吃的秘诀是疯狂加辣加醋，巨香无比。</p><p>好吃到一周吃五次，两个月后成功吃腻（不是</p><p><img src="/tutorial/dining-hall/347FD034C7D24E5BD41E3B941672A60E.png"></p><p><img src="/tutorial/dining-hall/clip_image012.jpg"></p><h3 id="麻辣香锅">麻辣香锅</h3><p>不错，听说现在也能做麻辣烫吃了</p><h3 id="小碗菜">小碗菜</h3><p>好吃便宜</p><h2 id="学一食堂二楼">学一食堂二楼</h2><h3 id="大盘鸡">大盘鸡</h3><p>yyds！皮带面非常滴美味！这个窗口的牛肉锅仔/干锅牛肉也非常美味</p><p><img src="/tutorial/dining-hall/clip_image014.jpg"></p><p><img src="/tutorial/dining-hall/clip_image016.jpg"></p><h3 id="兰州拉面">兰州拉面</h3><p>也好吃，6r一个的大鸡腿满足肉食欲望</p><p><img src="/tutorial/dining-hall/EF7B7779E69FD10509AF90562E2791EC.png"></p><h3 id="东教工强推">东教工<strong>(强推)</strong></h3><h3 id="最左边的铁板饭和石锅">最左边的铁板饭和石锅</h3><p>好吃，还送汤</p><p>卤肉石锅是lls吃过最好吃的石锅</p><p><img src="/tutorial/dining-hall/clip_image018.jpg"></p><h3 id="靠右边的麻辣烫">靠右边的麻辣烫</h3><p>好吃，便宜(肥牛卷强推)</p><p><img src="/tutorial/dining-hall/clip_image020.jpg"></p><p><img src="/tutorial/dining-hall/clip_image022.gif"></p><h3 id="右侧面食窗口">右侧面食窗口</h3><p><strong>强烈推荐</strong>！！！</p><p>番茄鱼面yyds,酸汤肥牛，养生鱼头，白切鸡，酸萝卜老鸭，我就没吃过难吃的。</p><p>（其实有难吃的，南昌拌粉，超不正宗，一点拌粉该有的鲜香都无，建议开除粉籍）</p><p><img src="/tutorial/dining-hall/clip_image024.jpg"></p><p><img src="/tutorial/dining-hall/clip_image026.jpg"></p><h2 id="喻园">喻园</h2><h3 id="喻园铁板">喻园铁板</h3><p>yyds,个人喜欢香辣五花肉铁板饭,（个人喜欢黑椒肥牛）</p><p><img src="/tutorial/dining-hall/4BA9B64A92083AEDB46710291436D51A.png"></p><h3 id="喻园汤包">喻园汤包</h3><p>yyds(但是现在发现不如金陵汤包好吃，但是也挺好吃）</p><p><img src="/tutorial/dining-hall/clip_image028.jpg"></p><h3 id="最右边窗口卤汁拌饭">最右边窗口卤汁拌饭</h3><p>牛肚饭yyds，量大多汁</p><p><img src="/tutorial/dining-hall/clip_image030.jpg"></p><h3 id="川香小面">川香小面</h3><p>也好吃！很川香</p><p><img src="/tutorial/dining-hall/F5326008199A01BA5950DEE1CD5D1C9E.png"></p><h2 id="集锦园">集锦园</h2><blockquote><p>集锦园，它真的我哭死。</p></blockquote><h3 id="进门左转蔡明伟">进门左转蔡明伟</h3><p>蛋酒豆皮热干面，吃过的都说好！</p><p><img src="/tutorial/dining-hall/clip_image032.jpg"></p><p>### 蔡明伟隔壁的粉面窗口</p><p>湖南&amp;江西的友友肯定会喜欢这个窗口，宽粉和圆粉都有，有一点接近湖南&amp;江西米粉的味道，虽然相比之下有点不太入味，但也很好吃了。</p><p>推荐排骨粉/面，然后加各种好吃又便宜的小料（海带结/豆干/卤蛋/牛肉丸等），是想嗦粉时的不二选择。</p><p>（这个窗口的辣椒酱巨辣无比请小心，加小半勺就可以了）</p><p><img src="/tutorial/dining-hall/7EBCF8525E268FA6B0CD186CA8DA4ED2.png"></p><h3 id="干拌馄饨牛肉馄饨">干拌馄饨，牛肉馄饨</h3><p>都好吃，跟韵酒比一个是甜辣一个是咸辣，真的都挺好吃</p><p>酱饼好吃，粉条油角强推！</p><p><img src="/tutorial/dining-hall/8C9818F1C22143122970BBFD185B3656.png"></p><h2 id="菠萝炒饭">菠萝炒饭</h2><p>集锦园特色，很不错</p><p><img src="https://s1.ax1x.com/2022/08/17/vDQgzR.jpg"></p><h3 id="最里面的烧鹅饭">最里面的烧鹅饭</h3><p>烧鹅饭还有土耳其烤肉饭，超级好吃！</p><p><img src="/tutorial/dining-hall/D8288CFFCBF7FA68F9D307BFCD27A3A5.png"></p><p>右上角的小炸鸡腿只要三块五</p><h3 id="粥水窗口">粥水窗口</h3><p>可以顺便尝一下粥水窗口的桂花酒酿小丸子，只要一块五，没什么酒味，主要是桂花的香气，暖暖的很适合冬天喝。</p><h2 id="紫荆园">紫荆园</h2><p>去紫荆园主要是吃那里的特色锅仔，酸菜鱼真的强推，牛肉的我吃过，有一点点咸。不过汤挺好喝的，米饭也是无线续的。</p><p><img src="/tutorial/dining-hall/clip_image034.gif"></p><p>紫荆园的牛肉石锅饭是本人吃过最美味的石锅！——来自yinn的大力推荐</p><p><img src="/tutorial/dining-hall/CFAF4F1779128998CE2E40884056FB4E.png"></p><p>哦对，到了季节也会有油焖大虾。</p><p><img src="/tutorial/dining-hall/E73FC5229F7D6A7F10A9F9DE7C16C3D3.jpg"></p><h3 id="东三食堂">东三食堂</h3><p>黑鸭饭，拉面</p><h2 id="东四">东四</h2><p>在科教中心楼上，比起食堂更像是小吃街</p><p>有家很好吃的越南米粉，鸡肉凉面很适合夏天没啥胃口的时候吃</p><p><img src="/tutorial/dining-hall/E73E0DC65284843BD848165BBA3301F6.png"></p><h2 id="东一食堂">东一食堂</h2><blockquote><p>可以参考小猴的视频</p></blockquote><iframe src="//player.bilibili.com/player.html?aid=810064946&amp;bvid=BV1c34y147zu&amp;cid=558309093&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe><h3 id="一楼-1">一楼：</h3><p>最左边的卤菜超香。中间的小米石锅、鸡皇饭也很值得试一试。</p><p>一楼猪脚饭也不错！</p><h3 id="二楼-1">二楼：</h3><p>麻辣香锅真的好吃！（比学一好吃很多</p><p><img src="/tutorial/dining-hall/CCC12A93361A48F7CEC9C986AD0689EF.png"></p><h2 id="百景园">百景园</h2><p>刷夜好去处。特色自助，用芯片识别结账，味道不错。新生一定要去尝尝。</p><p><img src="/tutorial/dining-hall/clip_image038.jpg"></p><p>百景园的云南米线也很好吃，味道和学一差不多</p><p>鸡丝凉米线是学一没有的，很神奇的味道，可以尝一尝</p><p><img src="/tutorial/dining-hall/67EC72DC4B21CCF3CDB92D2ECE6FE33D.png"></p><p>三楼是高档餐厅，点菜的那种，还没去过</p><h2 id="小吃城强烈推荐">小吃城（强烈推荐！！！）</h2><blockquote><p>可以参考小猴的视频：</p></blockquote><iframe src="//player.bilibili.com/player.html?aid=852625047&amp;bvid=BV1YL4y177MP&amp;cid=562445092&amp;page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe><h3 id="肉夹馍">肉夹馍</h3><p>全校唯一！饼是现烤的！肉特别多！！</p><p>可以加鸡蛋千张之类的，最后还会给你加几勺卤汤，香到爆了！</p><p><img src="/tutorial/dining-hall/775E7715E149222FAE5307A64895302C.jpg"></p><h2 id="肠粉">肠粉</h2><p>好吃</p><p><img src="/tutorial/dining-hall/8236134097C0ED82404B67BE5CD4F30C-16607348665133.jpg"></p><h2 id="鸡蛋灌饼杂粮煎饼">鸡蛋灌饼，杂粮煎饼</h2><p>一家店做的，都好吃。他家的烫饭也好吃。</p><h2 id="腰花面">腰花面</h2><p>肉夹馍那家做的，非常的不错。</p><h3 id="麻辣烫">麻辣烫</h3><p>小猴说好吃，我看着也好吃</p><h3 id="黄焖鸡米饭">黄焖鸡米饭</h3><p>口感偏辣，里面加的有千叶豆腐，不过拌饭特别香！</p><h3 id="还有好多去吃不会踩雷">还有好多，去吃不会踩雷！</h3><h2 id="西华园">西华园</h2><p>在西一旁边，环境很好，价格偏贵，<del>高雅之地，适合情侣约会</del></p><p>牛肉披萨好吃</p><p><img src="/tutorial/dining-hall/C10EEEDB9265D7184CCA81B9F5EF71F1.png"></p><p><img src="/tutorial/dining-hall/9A68C5FCCC748934B6503EF355509B4E.png"></p><p><img src="/tutorial/dining-hall/819A0881DAB0B3A82D95E70B1B196561.png"></p><h2 id="东华园">东华园</h2><p>比较贵，菜品一般</p><h2 id="西一">西一</h2><p>一楼有个净荤窗口，脆皮鸡腿味道非常之赞！K记的吮指原味鸡都不得不甘拜下风的程度</p><p><img src="/tutorial/dining-hall/AA8FE19EFDF5E22F56721528E36621AB-16607348939066.png"></p><p>糖醋里脊也很yummy</p><p><img src="/tutorial/dining-hall/66FAB1F32D74F4D6B71605CB11BA6988-16607349020439.png"></p>]]></content>
    
    
    <summary type="html">浅浅介绍一下华科的美味</summary>
    
    
    
    <category term="tutorial" scheme="https://dekrt.cn/categories/tutorial/"/>
    
    
    <category term="教程 | tutorial" scheme="https://dekrt.cn/tags/%E6%95%99%E7%A8%8B-tutorial/"/>
    
  </entry>
  
  <entry>
    <title>离散数学学习笔记</title>
    <link href="https://dekrt.cn/note/discrete-math/"/>
    <id>https://dekrt.cn/note/discrete-math/</id>
    <published>2022-07-23T16:38:36.000Z</published>
    <updated>2022-07-24T13:55:22.779Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>供个人学习使用，严禁转载！</p></blockquote><h1 id="各章节思维导图">各章节思维导图</h1><h2 id="离散数学chapter-1-集合">离散数学Chapter 1： 集合</h2><p><img src="/note/discrete-math/Chapter_1.png"></p><h2 id="离散数学chapter-2-关系">离散数学Chapter 2： 关系</h2><p><img src="/note/discrete-math/Chapter_2.png"></p><h2 id="离散数学chapter-3-函数">离散数学Chapter 3： 函数</h2><p><img src="/note/discrete-math/Chapter_3.png"></p><h2 id="离散数学chapter-4-代数系统">离散数学Chapter 4： 代数系统</h2><p><img src="/note/discrete-math/Chapter_4.png"></p><h2 id="离散数学chapter-5-群环域">离散数学Chapter 5： 群，环，域</h2><p><img src="/note/discrete-math/Chapter_5.png"></p><h2 id="离散数学chapter-6-格和布尔代数">离散数学Chapter 6：格和布尔代数</h2><p><img src="/note/discrete-math/Chapter_6.png"></p><h2 id="离散数学chapter-7-图和树">离散数学Chapter 7： 图和树</h2><p><img src="/note/discrete-math/Chapter_7.png"></p><h2 id="离散数学chapter-8-集合特殊图">离散数学Chapter 8：集合特殊图</h2><p><img src="/note/discrete-math/Chapter_8.png"></p><h2 id="离散数学chapter-9-命题逻辑">离散数学Chapter 9： 命题逻辑</h2><p><img src="/note/discrete-math/Chapter_9.png"></p><h2 id="离散数学chapter-10-谓词逻辑">离散数学Chapter 10： 谓词逻辑</h2><p><img src="/note/discrete-math/Chapter_10.png"></p><h1 id="各章节知识点概要">各章节知识点概要</h1><h2 id="离散数学chapter-1-集合-1">离散数学Chapter 1： 集合</h2><div class="row">    <embed src="./Chapter_1.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="离散数学chapter-2-关系-1">离散数学Chapter 2： 关系</h2><div class="row">    <embed src="./Chapter_2.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="离散数学chapter-3-函数-1">离散数学Chapter 3： 函数</h2><div class="row">    <embed src="./Chapter_3.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="离散数学chapter-4-代数系统-1">离散数学Chapter 4： 代数系统</h2><div class="row">    <embed src="./Chapter_4.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="离散数学chapter-5-群环域-1">离散数学Chapter 5： 群，环，域</h2><div class="row">    <embed src="./Chapter_5.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="离散数学chapter-6-格和布尔代数-1">离散数学Chapter 6：格和布尔代数</h2><div class="row">    <embed src="./Chapter_6.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="离散数学chapter-7-图和树-1">离散数学Chapter 7： 图和树</h2><div class="row">    <embed src="./Chapter_7.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="离散数学chapter-8-特殊图">离散数学Chapter 8： 特殊图</h2><div class="row">    <embed src="./Chapter_8.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="离散数学chapter-9-命题逻辑-1">离散数学Chapter 9： 命题逻辑</h2><div class="row">    <embed src="./Chapter_9.pdf" width="100%" height="550" type="application/pdf"></div><h2 id="离散数学chapter-10-谓词逻辑-1">离散数学Chapter 10：谓词逻辑</h2><div class="row">    <embed src="./Chapter_10.pdf" width="100%" height="550" type="application/pdf"></div><h1 id="全书知识点概要">全书知识点概要</h1><div class="row">    <embed src="./DiscreteMath.pdf" width="100%" height="550" type="application/pdf"></div>]]></content>
    
    
    <summary type="html">买卢老爷的书，上卢老爷的课</summary>
    
    
    
    <category term="note" scheme="https://dekrt.cn/categories/note/"/>
    
    
    <category term="笔记 | note" scheme="https://dekrt.cn/tags/%E7%AC%94%E8%AE%B0-note/"/>
    
  </entry>
  
  <entry>
    <title>大学物理实验生存指南</title>
    <link href="https://dekrt.cn/tutorial/phy-exp/"/>
    <id>https://dekrt.cn/tutorial/phy-exp/</id>
    <published>2022-03-07T14:41:39.000Z</published>
    <updated>2023-02-18T14:51:00.037Z</updated>
    
    <content type="html"><![CDATA[<h1 id="物理实验数据处理系统">物理实验数据处理系统</h1><p>网址：<a href="http://xzq.hustsvo.com" class="uri">http://xzq.hustsvo.com</a></p><p>如果进不去可以看看这个：<a href="http://hustmaths.top/physics/" class="uri">http://hustmaths.top/physics/</a></p><p>物理实验（一）：<a href="http://hustmaths.top/physics/1/" class="uri">http://hustmaths.top/physics/1/</a></p><p>物理实验（二）：<a href="http://hustmaths.top/physics/2/" class="uri">http://hustmaths.top/physics/2/</a></p><p>(鸣谢HustMaths学术科创)</p><p>顾名思义，可以帮助处理实验数据，甚至还会给出公式，减少计算量。</p><p>点击左上角可以切换实验。</p><p><img src="/tutorial/phy-exp/pic-exp.png" width="60%" height="60%"></p><h1 id="实验报告示例">实验报告示例</h1><blockquote><p>点击学院副标题标题即可进入</p></blockquote><hr><h2 align="center">物理实验（一）</h2><hr><h3 id="密立根油滴"><strong>密立根油滴</strong></h3><h4 id="软件学院"><a href="https://blog.csdn.net/lee1hong/article/details/111825258?spm=1001.2014.3001.5501">软件学院</a></h4><h4 id="自动化学院"><a href="https://mp.weixin.qq.com/s?__biz=MzU4Mzg0MTMzMA==&amp;mid=100005676&amp;idx=1&amp;sn=545ea872b068b360bdca9a1329941d09&amp;scene=19#wechat_redirect">自动化学院</a></h4><h4 id="化学学院"><a href="https://mp.weixin.qq.com/s/Fu1dgxkQULMBvJsALF0PWA">化学学院</a></h4><h4 id="机械学院"><a href="https://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000067&amp;idx=3&amp;sn=bc2dd4bda2b1ed20fbadbe054c56069a&amp;scene=19#wechat_redirect">机械学院</a></h4><h4 id="网安学院"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4MTE2NzE5OA==&amp;mid=100003770&amp;idx=1&amp;sn=6a95b3476d4e8a14822b59d8b822c7bf&amp;scene=19#wechat_redirect">网安学院</a></h4><h4 id="电信学院"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4Nzc0NjY2OA==&amp;mid=2247506999&amp;idx=3&amp;sn=e96fe7a49bf8ab62d4c83d331f25c67c&amp;scene=19#wechat_redirect">电信学院</a></h4><hr><h3 id="伏安特性"><strong>伏安特性</strong></h3><h4 id="软件学院-1"><a href="https://blog.csdn.net/lee1hong/article/details/111824882?spm=1001.2014.3001.5501">软件学院</a></h4><h4 id="自动化学院-1"><a href="http://mp.weixin.qq.com/s?__biz=MzU4Mzg0MTMzMA==&amp;mid=100005630&amp;idx=1&amp;sn=8f2a9841248ce8006109bffe572e4c19&amp;scene=19#wechat_redirect">自动化学院</a></h4><h4 id="化学学院-1"><a href="http://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000067&amp;idx=8&amp;sn=c561b79e288801cceaf37ce033633f6c&amp;scene=19#wechat_redirect">化学学院</a></h4><h4 id="机械学院-1"><a href="http://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000067&amp;idx=8&amp;sn=c561b79e288801cceaf37ce033633f6c&amp;scene=19#wechat_redirect">机械学院</a></h4><h4 id="网安学院-1"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4MTE2NzE5OA==&amp;mid=100003812&amp;idx=1&amp;sn=6e6b5570adb89bc3f17e794c13b70cd0&amp;scene=19#wechat_redirect">网安学院</a></h4><h4 id="电信学院-1"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4Nzc0NjY2OA==&amp;mid=2247506999&amp;idx=5&amp;sn=fa2e2e324d219064eaba0bd4ec6b59be&amp;scene=19#wechat_redirect">电信学院</a></h4><hr><h3 id="多功能摆"><strong>多功能摆</strong>：</h3><h4 id="自动化学院-2"><a href="http://mp.weixin.qq.com/s?__biz=MzU4Mzg0MTMzMA==&amp;mid=100005698&amp;idx=1&amp;sn=a871e583bc1969496050adf361754308&amp;scene=19#wechat_redirect">自动化学院</a></h4><h4 id="机械学院-2"><a href="http://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000067&amp;idx=5&amp;sn=18079d69ab2e5cf36726f653f4faade9&amp;scene=19#wechat_redirect">机械学院</a></h4><h4 id="电信学院-2"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4Nzc0NjY2OA==&amp;mid=2247506999&amp;idx=2&amp;sn=4e9736271b168bdcdb6633fb06ed3246&amp;scene=19#wechat_redirect">电信学院</a></h4><hr><h3 id="组合光学"><strong>组合光学</strong></h3><h4 id="自动化学院-3"><a href="http://mp.weixin.qq.com/s?__biz=MzU4Mzg0MTMzMA==&amp;mid=100005829&amp;idx=1&amp;sn=d7aceac199527379bcf78d7f4140f7b2&amp;scene=19#wechat_redirect">自动化学院</a></h4><h4 id="机械学院-3"><a href="http://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000103&amp;idx=7&amp;sn=c2d07cbf5404e59b9c2d831bca2c0860&amp;scene=19#wechat_redirect">机械学院</a></h4><h4 id="网安学院-2"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4MTE2NzE5OA==&amp;mid=2247491880&amp;idx=1&amp;sn=30eecc6cf3a53b647c81b64f3b9c056b&amp;scene=19#wechat_redirect">网安学院</a></h4><h4 id="电信学院-3"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4Nzc0NjY2OA==&amp;mid=2247506999&amp;idx=6&amp;sn=ca3dff12c156b4c618205b22f55a8b36&amp;scene=19#wechat_redirect">电信学院</a></h4><hr><h3 id="声速测量"><strong>声速测量</strong></h3><h4 id="自动化学院-4"><a href="http://mp.weixin.qq.com/s?__biz=MzU4Mzg0MTMzMA==&amp;mid=100005640&amp;idx=1&amp;sn=7fddefcd59432a8d59597e008220446a&amp;scene=19#wechat_redirect">自动化学院</a></h4><h4 id="机械学院-4"><a href="http://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000067&amp;idx=1&amp;sn=4bb60defd241b12eaf2f2593e2d386d6&amp;scene=19#wechat_redirect">机械学院</a></h4><h4 id="网安学院-3"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4MTE2NzE5OA==&amp;mid=100003761&amp;idx=1&amp;sn=47e27bd07adf657dcc76787e8807acde&amp;scene=19#wechat_redirect">网安学院</a></h4><h4 id="电信学院-4"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4Nzc0NjY2OA==&amp;mid=2247506999&amp;idx=4&amp;sn=be56c0fd62b4bfa02978155335bdc5fa&amp;scene=19#wechat_redirect">电信学院</a></h4><hr><h3 id="音叉振动"><strong>音叉振动</strong></h3><h4 id="自动化学院-5"><a href="http://mp.weixin.qq.com/s?__biz=MzU4Mzg0MTMzMA==&amp;mid=100005715&amp;idx=1&amp;sn=1e22de4fabd373e90f6f98f5de9e9d40&amp;scene=19#wechat_redirect">自动化学院</a></h4><h4 id="机械学院-5"><a href="http://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000103&amp;idx=6&amp;sn=91948e9d0607235219273f649dba55a7&amp;scene=19#wechat_redirect">机械学院</a></h4><h4 id="网安学院-4"><a href="https://mp.weixin.qq.com/s?__biz=Mzg4MTE2NzE5OA==&amp;mid=2247491882&amp;idx=1&amp;sn=f26d652a8393622a051f47c60cc69b59&amp;scene=19#wechat_redirect">网安学院</a></h4><h4 id="电信学院-5"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4Nzc0NjY2OA==&amp;mid=2247506999&amp;idx=7&amp;sn=ded9d0eba201ae4780081113439557e8&amp;scene=19#wechat_redirect">电信学院</a></h4><hr><h3 id="示波器的使用"><strong>示波器的使用</strong></h3><h4 id="软件学院-2"><a href="https://blog.csdn.net/lee1hong/article/details/111825347?spm=1001.2014.3001.5501">软件学院</a></h4><h4 id="自动化学院-6"><a href="http://mp.weixin.qq.com/s?__biz=MzU4Mzg0MTMzMA==&amp;mid=100005654&amp;idx=1&amp;sn=0f9142932968c54ec49457fa6f4006b6&amp;scene=19#wechat_redirect">自动化学院</a></h4><h4 id="机械学院-6"><a href="http://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000067&amp;idx=6&amp;sn=5fd5255e7c8ee1493f221966863f8717&amp;scene=19#wechat_redirect">机械学院</a></h4><h4 id="网安学院-5"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4MTE2NzE5OA==&amp;mid=100003742&amp;idx=1&amp;sn=835a024c9ed6b9890e252c4ce8a937db&amp;scene=19#wechat_redirect">网安学院</a></h4><h4 id="电信学院-6"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4Nzc0NjY2OA==&amp;mid=2247506999&amp;idx=1&amp;sn=1e9302e58f2c30cc9f73ee8af76b504d&amp;scene=19#wechat_redirect">电信学院</a></h4><hr><h3 id="分光计"><strong>分光计</strong></h3><h4 id="机械学院-7"><a href="https://mp.weixin.qq.com/s/Lg-fbee41rn-4SyuQjIccQ">机械学院</a></h4><h4 id="自动化学院-7"><a href="https://mp.weixin.qq.com/s/r9OlqEAMAFfUumh8AlwCUQ">自动化学院</a></h4><h4 id="网安学院-6"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4MTE2NzE5OA==&amp;mid=100003516&amp;idx=1&amp;sn=a6bfb816092887bf48a4b885e7f3a69b&amp;scene=19#wechat_redirect">网安学院</a></h4><table style="width:6%;"><colgroup><col style="width: 5%"></colgroup><tbody><tr class="odd"><td></td></tr></tbody></table><h3 id="rlc电路的暂态过程"><strong>RLC电路的暂态过程</strong></h3><h4 id="自动化学院-8"><a href="http://mp.weixin.qq.com/s?__biz=MzU4Mzg0MTMzMA==&amp;mid=100005768&amp;idx=1&amp;sn=9eef4a993181fcba4837c98b0a6adf31&amp;scene=19#wechat_redirect">自动化学院</a></h4><h4 id="电信学院-7"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4Nzc0NjY2OA==&amp;mid=2247506998&amp;idx=4&amp;sn=525285d85a30d532b28ec7aa995506b7&amp;scene=19#wechat_redirect">电信学院</a></h4><h4 id="机械学院-8"><a href="http://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000103&amp;idx=1&amp;sn=ce4104c0f67d6e1ec4ebf973ccfe252a&amp;scene=19#wechat_redirect">机械学院</a></h4><h4 id="网安学院-7"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4MTE2NzE5OA==&amp;mid=2247491887&amp;idx=1&amp;sn=2d81f5cc3b755dce71f591dbace8489d&amp;scene=19#wechat_redirect">网安学院</a></h4><hr><h3 id="霍尔效应"><strong>霍尔效应</strong></h3><h4 id="软件学院-3"><a href="https://blog.csdn.net/lee1hong/article/details/111825385?spm=1001.2014.3001.5502">软件学院</a></h4><h4 id="自动化学院-9"><a href="http://mp.weixin.qq.com/s?__biz=MzU4Mzg0MTMzMA==&amp;mid=100005619&amp;idx=1&amp;sn=eba9bcd3bb3adcb0ef82bb1c6943c865&amp;scene=19#wechat_redirect">自动化学院</a></h4><h4 id="电信学院-8"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4Nzc0NjY2OA==&amp;mid=2247506998&amp;idx=7&amp;sn=f5af8cd0726140baf7926fac19a0f641&amp;scene=19#wechat_redirect">电信学院</a></h4><h4 id="机械学院-9"><a href="http://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000067&amp;idx=2&amp;sn=e249116da77d01f2df2a23d92731c926&amp;scene=19#wechat_redirect">机械学院</a></h4><h4 id="网安学院-8"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4MTE2NzE5OA==&amp;mid=100003750&amp;idx=1&amp;sn=49660cedbee59013925b1d40b63cbd44&amp;scene=19#wechat_redirect">网安学院</a></h4><h4 id="化学学院-2"><a href="https://mp.weixin.qq.com/s?__biz=MzU5Mjg2ODkxNg==&amp;mid=100001375&amp;idx=4&amp;sn=50a59e9fcb80be1aa419dacc44713071&amp;chksm=7e186504496fec128e8b73266e003bcf8b204df61a92fc8721f51688200e50ff73674cdd7dde&amp;mpshare=1&amp;scene=23&amp;srcid=0724krFS4nircvo6xkjgXfeR&amp;sharer_sharetime=1658592115438&amp;sharer_shareid=555b3bc50bfb7b5c8fe4ad35fe242d68#rd">化学学院</a></h4><hr><h3 id="偏振光"><strong>偏振光</strong></h3><h4 id="自动化学院-10"><a href="http://mp.weixin.qq.com/s?__biz=MzU4Mzg0MTMzMA==&amp;mid=100005752&amp;idx=1&amp;sn=128dc87b4cc827cc8bb633333d179aca&amp;scene=19#wechat_redirect">自动化学院</a></h4><h4 id="电信学院-9"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4Nzc0NjY2OA==&amp;mid=2247506998&amp;idx=3&amp;sn=304597f6f9ff308cec10efdcfcde978f&amp;scene=19#wechat_redirect">电信学院</a></h4><h4 id="机械学院-10"><a href="http://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000103&amp;idx=4&amp;sn=66e36556b4380930c08f70116c8ff2cb&amp;scene=19#wechat_redirect">机械学院</a></h4><h4 id="网安学院-9"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4MTE2NzE5OA==&amp;mid=2247491886&amp;idx=1&amp;sn=6929d031e9e5f3618d835f8e276992c2&amp;scene=19#wechat_redirect">网安学院</a></h4><hr><h3 id="液体的表面张力"><strong>液体的表面张力</strong></h3><h4 id="自动化学院-11"><a href="http://mp.weixin.qq.com/s?__biz=MzU4Mzg0MTMzMA==&amp;mid=100005730&amp;idx=1&amp;sn=10268528250d29cf488c57bac99d51ac&amp;scene=19#wechat_redirect">自动化学院</a></h4><h4 id="电信学院-10"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4Nzc0NjY2OA==&amp;mid=2247506998&amp;idx=2&amp;sn=360a805eac4b01ecd95a32726457e4d3&amp;scene=19#wechat_redirect">电信学院</a></h4><h4 id="机械学院-11"><a href="http://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000103&amp;idx=5&amp;sn=89d4d2dacc48c0735489170b30d97db9&amp;scene=19#wechat_redirect">机械学院</a></h4><h4 id="网安学院-10"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4MTE2NzE5OA==&amp;mid=2247491884&amp;idx=1&amp;sn=fab7018bcc86ce69e95d93cc51fddd93&amp;scene=19#wechat_redirect">网安学院</a></h4><hr><h3 id="导热系数的测量"><strong>导热系数的测量</strong></h3><h4 id="自动化学院-12"><a href="http://mp.weixin.qq.com/s?__biz=MzU4Mzg0MTMzMA==&amp;mid=100005800&amp;idx=1&amp;sn=d2394a0fce4b12c566712a74ec1439c5&amp;scene=19#wechat_redirect">自动化学院</a></h4><h4 id="电信学院-11"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4Nzc0NjY2OA==&amp;mid=2247506998&amp;idx=6&amp;sn=5643cd5fe27d628248965fdef88eb349&amp;scene=19#wechat_redirect">电信学院</a></h4><h4 id="机械学院-12"><a href="http://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000103&amp;idx=8&amp;sn=89d53a2952023c038d9030b1c6ebf44e&amp;scene=19#wechat_redirect">机械学院</a></h4><h4 id="网安学院-11"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4MTE2NzE5OA==&amp;mid=2247491885&amp;idx=1&amp;sn=1364d5e180abeae4b19170c67270b340&amp;scene=19#wechat_redirect">网安学院</a></h4><hr><h3 id="转动惯量"><strong>转动惯量</strong></h3><h4 id="自动化学院-13"><a href="http://mp.weixin.qq.com/s?__biz=MzU4Mzg0MTMzMA==&amp;mid=100005780&amp;idx=1&amp;sn=d80bcf536c1c31bf4f6427f043d97d0a&amp;scene=19#wechat_redirect">自动化学院</a></h4><h4 id="电信学院-12"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4Nzc0NjY2OA==&amp;mid=2247506998&amp;idx=5&amp;sn=bce6a22196321cb92a211479590f5087&amp;scene=19#wechat_redirect">电信学院</a></h4><h4 id="机械学院-13"><a href="http://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000103&amp;idx=3&amp;sn=4baabc7c2884ed61837b0fc091fa4f86&amp;scene=19#wechat_redirect">机械学院</a></h4><h4 id="网安学院-12"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4MTE2NzE5OA==&amp;mid=2247491881&amp;idx=1&amp;sn=990626ba7cca6e6d56dd247ed5c4a1e1&amp;scene=19#wechat_redirect">网安学院</a></h4><hr><h3 id="电桥实验"><strong>电桥实验</strong></h3><h4 id="软件学院-4"><a href="https://blog.csdn.net/lee1hong/article/details/111825303?spm=1001.2014.3001.5502">软件学院</a></h4><h4 id="自动化学院-14"><a href="http://mp.weixin.qq.com/s?__biz=MzU4Mzg0MTMzMA==&amp;mid=100005600&amp;idx=1&amp;sn=bef88c38bb74bf146a0c01320ad9ad07&amp;scene=19#wechat_redirect">自动化学院</a></h4><h4 id="电信学院-13"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4Nzc0NjY2OA==&amp;mid=2247506998&amp;idx=8&amp;sn=bee3cb29d942a65b2ce51a9ffc355072&amp;scene=19#wechat_redirect">电信学院</a></h4><h4 id="机械学院-14"><a href="http://mp.weixin.qq.com/s?__biz=MzU4OTYzNzIxMA==&amp;mid=100000067&amp;idx=4&amp;sn=752a43444bbb3d65eede6a0418cf6fd4&amp;scene=19#wechat_redirect">机械学院</a></h4><h4 id="网安学院-13"><a href="http://mp.weixin.qq.com/s?__biz=Mzg4MTE2NzE5OA==&amp;mid=100003731&amp;idx=1&amp;sn=f1dbb6fff21d7ce1d3e4ca66cab682b4&amp;scene=19#wechat_redirect">网安学院</a></h4><h4 id="化学学院-3"><a href="http://mp.weixin.qq.com/s?__biz=MzU5Mjg2ODkxNg==&amp;mid=100001375&amp;idx=2&amp;sn=5865d3172dcf8a9f641f1f9d35308408&amp;chksm=7e186504496fec12be06e466035cae87d1ee26fbf2f6653aa8fa28ccce5e837c67d3e677c34b&amp;mpshare=1&amp;scene=23&amp;srcid=0925d8QZCUiOoxNIcekLcjRm&amp;sharer_sharetime=1664096883957&amp;sharer_shareid=555b3bc50bfb7b5c8fe4ad35fe242d68#rd">化学学院</a></h4><hr><h3 id="迈克尔逊干涉"><strong>迈克尔逊干涉</strong></h3><h4 id="自动化学院-15"><a href="https://mp.weixin.qq.com/s/zGx8Diy7krWtVkmjAN5Xgg">自动化学院</a></h4><hr>]]></content>
    
    
    <summary type="html">隆重介绍：大学物理实验生存指南。</summary>
    
    
    
    <category term="tutorial" scheme="https://dekrt.cn/categories/tutorial/"/>
    
    
    <category term="教程 | tutorial" scheme="https://dekrt.cn/tags/%E6%95%99%E7%A8%8B-tutorial/"/>
    
  </entry>
  
  <entry>
    <title>6 识别语言</title>
    <link href="https://dekrt.cn/note/ai1-6/"/>
    <id>https://dekrt.cn/note/ai1-6/</id>
    <published>2022-02-17T09:47:26.000Z</published>
    <updated>2022-03-10T07:51:30.391Z</updated>
    
    <content type="html"><![CDATA[<p>现在，我们是时候再让机器做点真东西了。</p><p>比如：<strong>识别语言</strong></p><p><img src="/note/ai1-6/pic1-6-1.png"></p><span id="more"></span><p>什么是语言？这就要从语言学的一个子领域<strong>语义学(semantics)</strong>开始说起。</p><p><img src="/note/ai1-6/pic1-6-2.png"></p><p>其中一个观点就是：<strong>词语的意义来自于它的用法</strong>。换句话说，如果想要了解一个词的意思，只要看它怎么用就好了。</p><p>比如说我们想了解<strong>赛博朋克</strong>这个词，那么只需要去百科里搜索，然后看看它周围有什么词。<strong>黑客、科幻、未来</strong>这些词的出现频率都很高，这已经和<strong>自然语言处理(NLP,NaturalLanguage Processing)</strong> 的研究方法很像了。</p><p><img src="/note/ai1-6/pic1-6-3.png"></p><p>现在，机器理解语言的一种常见方式就是建立<strong>遮蔽语言模型(MLM,MaskedLanguage Model)</strong>,机器会先随意遮掉一个句子中的词，然后看上下文反推出这个被遮掉的词是什么。这样，每一个词的意思都和他周围的词相关。换句话说，如果机器能做完形填空，它在某种程度上就理解了字词的意思。</p><p><img src="/note/ai1-6/pic1-6-4.png"></p><p>如何让机器做完型填空呢？还是要靠神经网络。先看输出的部分。在机器的眼中完形填空还是一种多分类问题。机器做的就是选出正确的选项，但其实并没有人给它设计选项，它的选项就是所有可能的字，这个选项非常多，以常用3500汉字为例，如果以词为单位，那么机器就是要分类几百万种代表词汇的点。</p><p><img src="/note/ai1-6/pic1-6-5.png"></p><p>了解了输出之后，我们还要考虑输入，我们之前的网络结构都是遇到一个输入，突出一个输出，这个输出只和当前的输入有关，次序不重要。然而，语言是存在次序的，因此我们需要一个神经网络来处理有顺序的数据。隆重介绍:<strong>循环神经网络(CNN,RecurrentNeturalNetwork)</strong>同样的输入数据顺序不同，经过循环网络之后的结果也不同。</p><p><img src="/note/ai1-6/pic1-6-6.png"></p><p>让我们直接算一算，看看他是如何做到的。</p><p>这是一个简单的循环神经网络，三维输入，三维输出。特别之处是，这一层神经元有记忆，每次运算这层神经元的值都会被存一份，然后以这种连接方式参与下次计算。我们把权重为零的线隐藏。为了计算方便，我们把其他权重设成这样。我们也可以把权重为零的线隐藏，且暂时都没有激活函数。</p><p><img src="/note/ai1-6/pic1-6-7.png"></p><p>现在我们把(0,0,1)(0,1,0)(1,0,0)按顺序输入，当输入第二个数据时，需要同时考虑输入数据和上一次的输入数据。</p><p><img src="/note/ai1-6/pic1-6-8.png"></p><p>输入第三个数据时同理，最终网络的输出值就是(0.75,0.75,0.75)。但是如果我们把三个数据反向输入网络，所得到的结果也会不同，可以得到(-0.75,-0.75,-0.75)</p><p><img src="/note/ai1-6/pic1-6-9.png"></p><p>现在回到完形填空。因为每一次运算都会用到前一个输入的隐藏信息,你可以把它抽象的理解为代表上文语境的向量。这个网络还可以反着学，如果我们要预测的是第一个字，就可以把句子倒着输入网络，让他获取下文信息。</p><p><img src="/note/ai1-6/pic1-6-10.png"></p><p>如果抠掉中间的字，这时候我们就需要<strong>双向循环神经网络(BRNN,BidirectionalRecurrent Netural Network)</strong>，让正向和反向的神经网络输出合起来，获得这个y，它就包含了前后所有的信息。接下来实际我们要做的就是在后面接一个全链接层，完成多分类任务。</p><p><img src="/note/ai1-6/pic1-6-11.png"></p><p>这是我们熟悉的任务，根据预测结果和真实值的误差，我们可以用<strong>梯度下降和反向传播</strong>调整神经元的权重。只要有足够多的语料，理论上机器就能自动完成完形填空，形成对每一个字的理解了。</p><p>注意，上面描述的循环神经网络是一个极端的简化版本，现在这种简单的单元已经不会在实战中使用了，其中一个原因是它很容易忘掉最开始的输入，比如在第五步时，第一步的输入不是当前输出的1/5，随着句子的加长，影响指数级下降。</p><p>因此出现了许多RNN的强化版，比如<strong>长短期记忆网络(LSTM,Long ShortTerm)</strong>，它在RNN的基础上加了三个门，从而让记忆留的更久。</p><p><img src="/note/ai1-6/pic1-6-12.png"></p><p>这个网络还可以加深，如果正向、反向的网络同时叠上两层，这就预训练模型<strong>ELMo</strong>的结构。</p><p>除此以外，还有<strong>BERT,GPT-2</strong>等其他运行的模型，其中有一些甚至已经抛弃了循环神经网络。</p><p>这个会做完形填空的神经网络就是现在计算机语言的第一步，现在经过预训练模型之后的这个向量就包含了上下文信息，我们也可以抽象的理解为他在提取词语的特征，这个特征是通用的，不管是探测句子，情感，翻译出去文章简介，还是生成文章，我们都会首先揭露这个模型。</p><p><img src="/note/ai1-6/pic1-6-13.png"></p><p>这时机器算是理解语言了吗？</p><p>其实，它做的，还只是分类。</p>]]></content>
    
    
    <summary type="html">现在，我们是时候再让机器做点真东西了。&lt;br&gt;比如：&lt;B&gt;识别语言&lt;/B&gt;。</summary>
    
    
    
    <category term="note" scheme="https://dekrt.cn/categories/note/"/>
    
    
    <category term="人工智能 | ai" scheme="https://dekrt.cn/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD-ai/"/>
    
    <category term="笔记 | note" scheme="https://dekrt.cn/tags/%E7%AC%94%E8%AE%B0-note/"/>
    
  </entry>
  
  <entry>
    <title>5 识别图像</title>
    <link href="https://dekrt.cn/note/ai1-5/"/>
    <id>https://dekrt.cn/note/ai1-5/</id>
    <published>2022-02-14T06:20:03.000Z</published>
    <updated>2022-05-28T04:38:56.109Z</updated>
    
    <content type="html"><![CDATA[<p>现在，我们的神经网络已经可以区分出图像上不同的点了，是时候让它做点真东西了。</p><p>比如：<strong>破解图片验证码</strong>。</p><p><img src="/note/ai1-5/pic1-5-5.png"></p><span id="more"></span><p>验证码的英文是<strong>CAPTCHA</strong>，即：<strong>CompletelyAutomated Public Turing test to tell Computers and HumansApart,全自动区分计算机和人类的公开图灵测试。</strong></p><p>验证码，这一对于人类来说可以简单完成的任务，对于机器来说却十分复杂。机器擅长的是有明确规则的事物，但是我们却无法总结出几条确定的规则告诉机器验证码该怎么填。</p><p>但是，其实最开始借助于MNIST数据库，机器就已经可以识别简单的数字了。它分为三步：输入图片-&gt;转化为数字-&gt;用神经网络分类。</p><p><img src="/note/ai1-5/pic1-5-6.png"></p><p>但如果继续用这个单层感知器，它的效率就有点低了。比如说处理一张<span class="math inline">\(300\times300\)</span>的图片，输入向量就相当于有90000(<span class="math inline">\(9\times10^4\)</span>)维，要和<span class="math inline">\(9\times10^4\)</span>个权重相乘并且分类，而且我们很难线性分开，一般中间还要加隐藏层，假设隐藏层神经元个数和输入层一样多，每一个隐藏层神经元都会连<span class="math inline">\(9\times10^4\)</span>个参数，那么光是中间层就有<span class="math inline">\((9\times10^4)\times (9\times10^4)=8.1\times10^9\)</span>个权重，需要通过反向传播来调整。</p><p><img src="/note/ai1-5/pic1-5-7.png"></p><p>但如果我们可以事先提取图片的特征，把它从几万个像素数据简化成数百个数字，然后再用之前的神经网络分类，这样分类时的运算量就会小很多，而提取特征就由<strong>卷积神经网络(ConvolutionalNeural Network)</strong>来实现。</p><p><img src="/note/ai1-5/pic1-5-8.png"></p><p>这就是一个典型的卷积神经网络结构，它可以粗略的分为两部分：<strong>提取特征(FeatureLearning)</strong> 和 <strong>分类(Classification)</strong>。</p><p><img src="/note/ai1-5/pic1-5-9.png"></p><p>特别之处在于前半部分：多出了<strong>卷积层(ConvolutionalLayer)</strong> 和 <strong>采样层(PoolingLayer)</strong>。多个卷积层和采样层叠加，就能实现数据的特征提取。</p><p>隆重介绍：卷积。它是一种特殊的乘法。首先以一维卷积为例：第一个元素是原始数据，第二个元素则是<strong>卷积核(ConvolutionKernel)</strong>。它的运算方法很简单：让前三个数据与卷积核对应位置的数据相乘，然后相加，再把结果填回中间的格子。</p><p><img src="/note/ai1-5/pic1-5-10.png"></p><p>算完一个以后，我们让卷积核向右滑动，以同样的方法填下一个数据。</p><p><img src="/note/ai1-5/pic1-5-11.png"></p><p>卷积运算的输入也可以是二维的，比如输入是一个<span class="math inline">\(53\times 53\)</span>的矩阵，卷积核是一个<span class="math inline">\(3\times3\)</span>的矩阵，那么运算规则就是对应位置的数据相乘再相加。</p><p><img src="/note/ai1-5/pic1-5-12-1.png"></p><p>这样，我们就能获得二维数据。</p><p><img src="/note/ai1-5/pic1-5-12.png"></p><p>而采样数据更好计算，最大采样就是取原始数据的最大值，和刚刚一样，让采样核划过整个屏幕我们就得到了精简之后的数据。除此以外还有平均采样，就是取每九格中的平均值，计算方法类似。</p><p><img src="/note/ai1-5/pic1-5-13.png"></p><p>算法很简单，但是为什么卷积和采样是在提取特征呢？</p><p>比如这个核，就是在提取上边缘特征：</p><p><span class="math display">\[\left[ \begin{matrix}-1.00&amp;-1.00&amp;-1.00\\ 0.00 &amp; 0.00&amp; 0.00 \\ 1.00 &amp; 1.00&amp; 1.00 \end{matrix} \right]\]</span></p><figure><img src="/note/ai1-5/pic1-5-14.png" alt="提取前"><figcaption aria-hidden="true">提取前</figcaption></figure><figure><img src="/note/ai1-5/pic1-5-15.png" alt="提取后"><figcaption aria-hidden="true">提取后</figcaption></figure><p>在扫过上边缘区域是，黄色区域对应的图像灰度大于蓝色区域的图像灰度，输出为正数，提取出白色。</p><p><img src="/note/ai1-5/pic1-5-16.png"></p><p>在纯色区域，卷积结果正负相抵，提取出黑色。</p><p><img src="/note/ai1-5/pic1-5-17.png"></p><p>所以我们就提取出了图片的上边缘特征：</p><p><img src="/note/ai1-5/pic1-5-18.png"></p><p>同理，如果我们使用<span class="math inline">\(\left[ \begin{matrix}1.00&amp;1.00&amp;1.00\\ 0.00 &amp; 0.00&amp; 0.00 \\ -1.00 &amp; -1.00&amp; -1.00 \end{matrix}\right]\)</span>作为卷积核，就可以提取图片的下边缘特征：</p><p><img src="/note/ai1-5/pic1-5-19.png"></p><p>同理，这里给出提取图像左边缘与右边缘的卷积核：</p><p>左边缘： <span class="math display">\[\left[ \begin{matrix}-1.00&amp;0&amp;1.00\\ -1.00&amp;0&amp;1.00\\-1.00&amp;0&amp;1.00\end{matrix} \right]\]</span></p><p>右边缘： <span class="math display">\[\left[ \begin{matrix}-1.00&amp;0&amp;1.00\\ -1.00&amp;0&amp;1.00\\-1.00&amp;0&amp;1.00\end{matrix} \right]\]</span></p><p>这就是一次卷积和采样。它做的就是寻找图像上卷积核所对应的特征，并把它精简成特征图。我们还可以在一个图上用上多个卷积核，得到多个特征图，在多个简单特征图上做卷积，再相加，相当于在简单特征中提取复杂特征。</p><p><img src="/note/ai1-5/pic1-5-20.png"></p><p>在卷积神经网络中，我们可以加入任意多的卷积层和采样层，以识别更复杂的特征。</p><p><img src="/note/ai1-5/pic1-5-21.png"></p><p>其实，动物大脑识别图像的过程与之类似：</p><p><img src="/note/ai1-5/pic1-5-22.png"></p><p>这给了三十年后的日本科学家<strong>福岛邦彦(KunihikoFukushima)</strong>极大的启发。他模仿这个分层级的结构造出了人工大脑。他能在前层识别A的尖、角、连接处等特征，在后层进行组合，最后识别字母A。</p><p><img src="/note/ai1-5/pic1-5-23.png"></p><p>这里用到的算法就是卷积和采样，我们还学会了在每一次卷积后加一层ReLU激活函数来适应复杂的非线性问题。</p><p><img src="/note/ai1-5/pic1-5-24.png"></p><p>这就是机器识别图像的过程，它本质上仍然是我们熟悉的多分类问题。</p>]]></content>
    
    
    <summary type="html">现在，是时候让神经网络做点真东西了。&lt;br&gt;比如：&lt;B&gt;破解图片验证码&lt;/B&gt;。</summary>
    
    
    
    <category term="note" scheme="https://dekrt.cn/categories/note/"/>
    
    
    <category term="人工智能 | ai" scheme="https://dekrt.cn/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD-ai/"/>
    
    <category term="笔记 | note" scheme="https://dekrt.cn/tags/%E7%AC%94%E8%AE%B0-note/"/>
    
  </entry>
  
  <entry>
    <title>4 梯度下降</title>
    <link href="https://dekrt.cn/note/ai1-4/"/>
    <id>https://dekrt.cn/note/ai1-4/</id>
    <published>2022-02-11T10:09:45.000Z</published>
    <updated>2022-03-10T08:35:37.852Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文内含大量数学公式，全部采用mathjax渲染。</p></blockquote><p>从理论上来说，我们现在的模型已经可以处理任何分类问题了，接下来我们要解决的是让机器自动调整，达到我们的目的。</p><p>这就要请到我们的老朋友Y与y了：</p><p><img src="/note/ai1-4/pic1-4-1.png"></p><span id="more"></span><p>容易想到，输出值y和目标值Y越接近，机器就越准确。</p><p>比如说在如下的神经网络中，将所有权重与阈值设置为0，再使用阶跃函数，是所有的输出都为1，通过设定目标值，我们可以得到如下的误差表：</p><figure><img src="/note/ai1-4/pic1-4-2.png" alt="神经网络"><figcaption aria-hidden="true">神经网络</figcaption></figure><figure><img src="/note/ai1-4/pic1-4-3.png" alt="误差表"><figcaption aria-hidden="true">误差表</figcaption></figure><p>我们定义<strong>模型误差</strong>,由如下公式计算：</p><p><span class="math display">\[cost=\frac{1}{N}\sum|Y-y|\]</span></p><p>误差越低，机器就越准确。在本例中，<span class="math display">\[cost=\frac{1}{4}\times(0+0+1+1)=0.5\]</span></p><p>而这个结果受到模型中每一个权重和阈值的影响，这样我们就得到了一个函数，这就是损失函数：</p><p>在常见的机器学习模型里，这个结果会平方一下便于计算。</p><p><span class="math display">\[Cost =\frac{1}{2N}\sum|Y-y|^2=f(W_1,W_2,W_3,W_4,W_5,W_6,b_1,b_2,b_3)\]</span></p><p>有了损失函数，我们才能给机器一个明确的目标，让损失函数越低越好，再抽象一点就是下山，下一座十维的山。机器需要在这十个方向上爬山，找到最低点。</p><p><img src="/note/ai1-4/pic1-4-4.png"></p><p>而我们需要找到一个算法，给机器找到下山的路，隆重介绍：<strong>梯度下降(GradientDescent)</strong></p><p>顾名思义，梯度下降 = 梯度 +下降，或者说是下楼梯。我们会先在一个变量的函数中下楼梯，然后逐渐增加到九个变量。</p><p>让我们从最简单的函数开始，<span class="math inline">\(y=x^2\)</span>:</p><p>我们的目的很简单，对于任意的点都能让它自动寻路，通过调整x走到最低点，也就是y最小的地方。</p><p><img src="/note/ai1-4/pic1-4-5.png"></p><p>要做到这一点，我们需要掌握两件事：<strong>每一步的移动方向和移动距离</strong>。即x应该变大还是变小，变大或变小多少。</p><p>容易想到，如果该点的切线斜率为负，我们应该让x变大，向右走；如果该点的切线斜率为正，我们应该让x变小，向左走。</p><p>然后便是距离，过大会错过最低点，过小会造成较大的时间开销。我们应该做的，是让斜率和移动的距离成正比，在陡峭的地方走多点，在平缓的地方走少一点。</p><p><img src="/note/ai1-4/pic1-4-6.png"></p><p>而乘上的这个比例，我们称作<strong>步长</strong>，也就是我们之前提到过的<strong>学习率</strong>。</p><p>现在我们增加一个变量，令：</p><p><span class="math display">\[z=x^2+y^2\]</span></p><p>我们可以得到一个抛物面。现在，我们想让一个小球自由调整x和y，让它走到最低点。</p><p><img src="/note/ai1-4/pic1-4-7.png"></p><p>沿用刚才的方法，我们需要找到让z下降最快的大小和方向。我们可以拆解一下这个问题：先让小球分别在x方向和y方向上进行下降：</p><p><img src="/note/ai1-4/pic1-4-8.png"></p><p>然后将两个方向进行合成。</p><p><img src="/note/ai1-4/pic1-4-9.png"></p><p>就可以让小球下降到最低点。</p><p><img src="/note/ai1-4/pic1-4-10.png"></p><p>在这个过程中，<strong>求导</strong>始终是十分关键的一步，因为导数意为着斜率，即我们的移动方向。</p><p>回到我们最开始的问题：我们需要做的，就是求出损失值C对这九个变量的偏导数，让误差值越来越低。</p><p><img src="/note/ai1-4/pic1-4-11.png"></p><p>现在，我们只差最后一步了。</p><p>如果要求损失函数对九个变量的偏导数，我们首先需要做一些准备工作：</p><p>我们可以先给权重和阈值随便设置一下初始值，再来考虑激活函数：</p><p><img src="/note/ai1-4/pic1-5-2.png"></p><p>注意：这里不能采用阶跃函数：因为阶跃函数除了原点不可导，其他点的导数为0，无法做梯度下降。我们暂时采用逻辑函数：</p><p><span class="math display">\[\sigma (x)=\frac{1}{1+e^{-x}}\]</span></p><p>给定一组输入(1,0)我们就可以填出图中所有的空，并且可以算出他的损失值：</p><p><img src="/note/ai1-4/pic1-5-3.png"></p><p>这个过程，我们称之为<strong>前向传播(ForwardPropagation)</strong>,即从左往右将训练送入网络以获得激励响应。</p><p>与之类似，我们有<strong>反向传播(BackwardPropagation)</strong>，即“误差反向传播”的简称，该方法对网络中所有函数计算损失函数的梯度，这个梯度会反馈给最优化方法，用来更新权值以最小化损失函数。</p><p>从图上来看，就是从损失值C出发来推算W和b要改变的量。具体的做法就是在九个变量上做梯度下降，即求C对九个变量的<strong>偏导数</strong>。</p><p><img src="/note/ai1-4/pic1-5-4.png"></p><p>这就需要用到<strong>链式法则</strong>来求复合函数的导数。</p><p><span class="math display">\[\dfrac{\partial C}{\partialb_3}=\dfrac{dc}{dy}\dfrac{dy}{dz_3}\dfrac{\partial z_3}{\partialb_3}\]</span></p><p>注意到：</p><p><span class="math display">\[c=\frac{1}{2N}\sum|Y-y|^2=\frac{1}{2}(Y-y)^2\]</span></p><p>有：</p><p><span class="math display">\[\dfrac{dc}{dy}=\frac{1}{2}\times(-2)\times (Y-y) =0.84-1=-0.16\]</span></p><p><span class="math display">\[\frac{dy}{dz_3}=\frac{d(sigmoid(z_3))}{d(z_3)}=y(1-y)=0.84\times(1-0.84) = 0.13\]</span></p><p>而：</p><p><span class="math display">\[z_3 = h_1 \times w_5 + h_2 \times w_6 +b_3\]</span></p><p>求偏导数得：</p><p><span class="math display">\[\dfrac{\partial z_3}{\partialb_3}=1\]</span></p><p>综合得:</p><p><span class="math display">\[\dfrac{\partial C}{\partialb_3}=\dfrac{dc}{dy}\dfrac{dy}{dz_3}\dfrac{\partial z_3}{\partialb_3}=-0.16\times 0.13 \times 1 = -0.020\]</span></p><p>同理：我们可以计算出其他得偏导数。</p><p>举个例子：</p><p><span class="math display">\[\begin{aligned}\dfrac{\partial C}{\partialw_1}&amp;=\dfrac{dc}{dy}\dfrac{dy}{dz_3}\dfrac{\partial z_3}{\partialh_1}\dfrac{\partial h_1}{\partial z_1}\dfrac{\partial z_1}{\partialw_1}\\&amp;=-0.16\times0.13\times0.50\times0.21\times1\\&amp;=-0.002    \end{aligned}\]</span></p><p>而求完这九个偏导数，注意到我们只完成了一个数据点。</p><p>处理完四个点之后，我们需要给每个变量得偏导数<strong>求平均</strong>，再<strong>乘上步长</strong>，这就是一次迭代中这个变量应该改变的量，也可以让四个例子的结果更为准确。</p>]]></content>
    
    
    <summary type="html">接下来我们要解决的是让机器自动调整，达到我们的目的。&lt;br&gt;这就要请到我们的老朋友Y与y了：</summary>
    
    
    
    <category term="note" scheme="https://dekrt.cn/categories/note/"/>
    
    
    <category term="人工智能 | ai" scheme="https://dekrt.cn/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD-ai/"/>
    
    <category term="笔记 | note" scheme="https://dekrt.cn/tags/%E7%AC%94%E8%AE%B0-note/"/>
    
  </entry>
  
  <entry>
    <title>3 加一层</title>
    <link href="https://dekrt.cn/note/ai1-3/"/>
    <id>https://dekrt.cn/note/ai1-3/</id>
    <published>2022-02-10T14:30:40.000Z</published>
    <updated>2022-03-10T08:01:08.269Z</updated>
    
    <content type="html"><![CDATA[<p>先考虑一个问题：如何用<strong>一条线</strong>把(0,0),(0,1),(1,0),(1,1)这四个点分成两类？</p><p><img src="/note/ai1-3/pic1-3-1.png"></p><p>单纯的改变线肯定是不行的，我们要使点小花招：<strong>改变空间</strong></p><span id="more"></span><p><img src="/note/ai1-3/pic1-3-2.png"></p><blockquote><p><strong>机器学习的序幕已经被拉开</strong></p></blockquote><p>前面所讲过的二元分类器，有一个缺点：它太直了，处理不了数据有交叉的情况。</p><p>直到人们意识到，我们可以弯曲整个坐标系：</p><p>我们加入一层中间层，它的作用就是<strong>改变坐标系</strong></p><p><img src="/note/ai1-3/pic1-3-3.png"></p><p><img src="/note/ai1-3/pic1-3-4.png"></p><p>在这个新结构中，容易发现： <span class="math display">\[Z_1=W_1\timesX_1 +W_2 \times X_2 + b_1\]</span> <span class="math display">\[Z_2=W_3\times X_1 +W_4 \times X_2 +b_2\]</span></p><p>不看阈值b,可以将他写成下列的矩阵形式： <span class="math display">\[\left[ \begin{matrix} W_1&amp;W_2 \\ W_3&amp;W_4\end{matrix} \right ]\left[ \begin{matrix} X_1\\ X_2\end{matrix} \right]=\left[ \begin{matrix} Z_1\\ Z_2\end{matrix} \right ]\]</span> 即<span class="math inline">\(Z=Wx\)</span></p><p>但是，无论我们怎么改变W矩阵，还是无法将这四个点分开，因为它始终属于<strong>线性变换</strong>！</p><p>解决方案很简单：再加一层<strong>非线性变换</strong>！</p><p><img src="/note/ai1-3/pic1-3-5.png"></p><p>隆重介绍：<strong>激活函数(Activation Functions)</strong></p><p>它是以一种特定的规则，让输入数据以一种特定的方式进行输出。比如<strong>阶跃函数(stepfunction)</strong>，在关于鳄鱼和蛇的问题中，输出0或1其实就是阶跃函数运作的结果。</p><p><img src="/note/ai1-3/pic1-3-6.png"></p><p>除此以外，在机器学习中还有三种常见的激活函数：</p><p><strong>逻辑函数(sigmoid function)：<span class="math inline">\(\sigma(x)=\frac{1}{1+e^{-x}}\)</span></strong></p><p><strong>线性整流函数(ReLU function)：<span class="math inline">\(h(x)=\begin{cases}  0&amp;x&lt;0 \\ x &amp; x\geq0\end{cases}\)</span></strong></p><p><strong>双曲正切函数(tanh function):<span class="math inline">\(tanh(x)=\frac{e^x-e^{-x}}{e^x+e^{-x}}\)</span></strong></p><p>让我们回到开始的问题：现在，我们可以再加一层：</p><p><img src="/note/ai1-3/pic1-3-7.png"></p><p>首先我们可以通过线性变换对原来的四个点进行平移：</p><p><img src="/note/ai1-3/pic1-3-8.png"></p><p>再通过阶跃函数，让原本在第三象限的两个点变为(0,0),另外两个变为(0,1)和(1,0)，这样我们就能很自然的将两类点分开。</p><p><img src="/note/ai1-3/pic1-3-9.png"></p><p>由此，我们便搞定了分类异或问题。</p><p>但是如果我们试图在二维平面内分类一个圆环呢？</p><p><img src="/note/ai1-3/pic1-3-10.png"></p><p>这个问题就有点难，但是我们可以试图对问题进行<strong>升维</strong>处理,把二维平面变成三维空间:</p><p><img src="/note/ai1-3/pic1-3-11.png"></p><p>再使用二维平面进行分割，我们就能得到不错的区分度：</p><p><img src="/note/ai1-3/pic1-3-13.png"></p><p>所谓升维，就是将低维的密集数据在高维空间中变得稀疏，从而更好的分开。</p><p>将三维空间的分割面再次投影二维平面，就是一个圆。</p><p><img src="/note/ai1-3/pic1-3-14.png"></p><p>原本扭曲的异或分类还原之后，坐标系会变直，分割线会变弯。但我们都知道，他的本质还是一条直线。</p>]]></content>
    
    
    <summary type="html">先考虑一个问题：如何用&lt;B&gt;一条线&lt;/B&gt;把(0,0),(0,1),(1,0),(1,1)这四个点分成两类？</summary>
    
    
    
    <category term="note" scheme="https://dekrt.cn/categories/note/"/>
    
    
    <category term="人工智能 | ai" scheme="https://dekrt.cn/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD-ai/"/>
    
    <category term="笔记 | note" scheme="https://dekrt.cn/tags/%E7%AC%94%E8%AE%B0-note/"/>
    
  </entry>
  
  <entry>
    <title>2.5 一点点矩阵</title>
    <link href="https://dekrt.cn/note/ai1-2.5/"/>
    <id>https://dekrt.cn/note/ai1-2.5/</id>
    <published>2022-02-10T14:20:41.000Z</published>
    <updated>2022-03-10T08:00:06.623Z</updated>
    
    <content type="html"><![CDATA[<p>想要了解一点点矩阵，我们需要从色彩的显示说起,也就是我们常见的<strong>RGB(RedGreen Blue)色彩模式</strong>：</p><p><img src="/note/ai1-2.5/pic1-2.5-1.png"></p><p>通过调整三种颜色的比例，我们可以得到不同的颜色</p><blockquote><p>本文采用mathjax对数学公式进行渲染</p></blockquote><span id="more"></span><p><img src="/note/ai1-2.5/pic1-2.5-2.png"></p><p>这个调色器，其实就是一个<strong>矩阵(matrix)</strong>。</p><p><strong>矩阵是操作向量的工具</strong>。想要理解矩阵，就要先理解<strong>向量(vector)</strong></p><p>对于计算机来说，向量是一组有序的数；而对于中学数学老师来说，向量是一个有向线段。</p><p><img src="/note/ai1-2.5/pic1-2.5-3.png" width="30%" height="30%"></p><p>刚刚的RGB色值，也可以堪称一个向量：</p><p><img src="/note/ai1-2.5/pic1-2.5-4.png" width="30%" height="30%"></p><p>可以表示为下列形式：</p><p><span class="math display">\[\left[ \begin{matrix} 66\\197\\181\end{matrix} \right]\]</span></p><p>但如果我们定义一个坐标系，也可以在坐标系中把它标出来：</p><p>如果我们以R为x轴，G为y轴，B为z轴，建立空间直角坐标系：</p><p><img src="/note/ai1-2.5/pic1-2.5-5.png" width="60%" height="60%"></p><p>它就在空间中的这个点</p><p><img src="/note/ai1-2.5/pic1-2.5-6.png" width="60%" height="60%"></p><p>相应的，照片中每一个像素的色值，都可以在空间中找到对应的点。</p><p><img src="/note/ai1-2.5/pic1-2.5-7.png"></p><p>接下来我们来认识一下矩阵：</p><p>先从一个我们小学二年级学过的二元一次方程组开始：</p><p><span class="math display">\[\begin{cases}2x-y=0\\-x+2y=3\end{cases}\]</span></p><p>我们需要弄清楚Row和Column，即行和列的关系：</p><p>按照Row展开，它可以表现为如下的矩阵： <span class="math display">\[\left[ \begin{matrix} 2&amp;-1 \\ -1&amp;2\end{matrix} \right ]\left[ \begin{matrix} x\\ y\end{matrix} \right]=\left[ \begin{matrix} 0\\ 3\end{matrix} \right ]\]</span></p><p><strong>可以简化为Ax=b</strong></p><p><strong>注意它的系数是一一对应的！！！</strong></p><p>容易看出，<span class="math inline">\(x=1,y=2\)</span>是它的解</p><p>他也等价于下列图像：</p><p><img src="/note/ai1-2.5/pic1-2.5-8.png" width="30%" height="30%"></p><p>而如果我们按Column展开，可以表现为如下的矩阵： <span class="math display">\[x\left[ \begin{matrix} 2\\-1\end{matrix} \right]+y\left[ \begin{matrix} -1\\ 2\end{matrix} \right ]=\left[\begin{matrix} 0\\ 3\end{matrix} \right ]\]</span></p><p>从列图像的角度去理解线性组合，也即 <span class="math inline">\(Ax\)</span> 就是对 <span class="math inline">\(A\)</span> 的列向量进行 <span class="math inline">\(x\)</span>对应的组合（这种组合显然是线性的）。于是 求解 <span class="math inline">\(Ax=b\)</span> 也即对于给定 <span class="math inline">\(b\)</span> 是否能找到一种组合方式 <span class="math inline">\(x\)</span> 使得能够将 <span class="math inline">\(A\)</span> 的各列向量组合形成 <span class="math inline">\(b\)</span>。</p><p><img src="/note/ai1-2.5/pic1-2.5.9.png" width="30%" height="30%"></p><p>如果说原来x轴的基向量<span class="math inline">\(\vecx=(1,0)\)</span>,则在上例中他的基向量变成了<span class="math inline">\(\vec x&#39;= (2,-1)\)</span> ,同理, <span class="math inline">\(\vecy&#39;=(-1,2)\)</span>,我们需要寻找对应的x，y对两个基向量进行线性组合，让它的结果为向量(0,3)</p><p><strong>也可以看成是在一个新的坐标系中，以x'和y'为基向量，寻找对应的x,y得到目标向量(0,3)</strong></p><p>此时，我们就变换了坐标系。</p><p>回到我们<strong>熟悉</strong>的神经网络方程组(不熟悉的话马上就熟悉了)：</p><p><span class="math display">\[Z_1=W_1\times X_1 +W_2 \times X_2 +b_1\]</span> <span class="math display">\[Z_2=W_3\times X_1 +W_4 \timesX_2 + b_2 \]</span></p><p>不看阈值b,可以将他写成下列的矩阵形式： <span class="math display">\[\left[ \begin{matrix} W_1&amp;W_2 \\ W_3&amp;W_4\end{matrix} \right ]\left[ \begin{matrix} X_1\\ X_2\end{matrix} \right]=\left[ \begin{matrix} Z_1\\ Z_2\end{matrix} \right ]\]</span> 即<span class="math inline">\(Z=WX\)</span></p><p>同样的道理，新的坐标系的基向量就变成了(W1,W3)和(W2,W4)。这就是矩阵的作用，通过改变基向量来改变坐标系。</p><p>同时，矩阵还能将二维平面的点映射到三维空间中去。比如下面的例子：</p><p><span class="math display">\[\left[ \begin{matrix} 1 &amp; 0 \\ 0&amp; 1 \\ 0 &amp; 1 \end{matrix} \right ] \left[ \begin{matrix} -5 \\ 1\end{matrix} \right ] = \left[ \begin{matrix} -5\\1\\1 \end{matrix}\right ]\]</span></p><p>可以在三维坐标系中这么表示：</p><p><img src="/note/ai1-2.5/pic1-2.5-10.png"></p><p>所以再回到开始的那个问题：我们可以为RGB图案加上一个色彩矩阵，如这个例子中，可以让R'与B'都为0，为图片加上绿色的滤镜。</p><p><img src="/note/ai1-2.5/pic1-2.5-11.png"></p><p>对于神经网络来说，写成矩阵、向量相乘的原因主要是快。回想开头784维向量的例子：由于计算机的<strong>并行优化</strong>，可以同时对多个输入数据进行处理，我们可以非常快速的完成784维向量的计算。</p><p>这就是简单的矩阵，它其实没那么可怕。</p>]]></content>
    
    
    <summary type="html">想要了解一点点矩阵，我们需要从色彩的显示说起,也就是我们常见的&lt;B&gt;RGB(Red Green Blue)色彩模式&lt;/B&gt;：</summary>
    
    
    
    <category term="note" scheme="https://dekrt.cn/categories/note/"/>
    
    
    <category term="人工智能 | ai" scheme="https://dekrt.cn/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD-ai/"/>
    
    <category term="笔记 | note" scheme="https://dekrt.cn/tags/%E7%AC%94%E8%AE%B0-note/"/>
    
  </entry>
  
  <entry>
    <title>2 鳄鱼与蛇</title>
    <link href="https://dekrt.cn/note/ai1-2/"/>
    <id>https://dekrt.cn/note/ai1-2/</id>
    <published>2022-02-10T10:03:38.000Z</published>
    <updated>2022-03-10T08:36:15.491Z</updated>
    
    <content type="html"><![CDATA[<p>用横坐标代表身长，纵坐标代表体重，在坐标系中标出鳄鱼和蛇。 <img src="/note/ai1-2/pic1-2-1.png" alt="鳄鱼和蛇">我们要做的，就是画一条线把他们两个分开。 <span id="more"></span> <img src="/note/ai1-2/pic1-2-2.png"> 非常的简单，对不对？</p><p>很容易知道，W改变的是斜率，而b改变的是位置。</p><p>这个问题的本质是分类，<strong>而分类就是智能的源头</strong>。</p><p>神经元，阈值，权重，正好跟生物知识一一对应。我们也可以把他抽象成数学知识。</p><p><img src="/note/ai1-2/pic1-2-3.png"></p><p>如果<span class="math inline">\(f(x)&gt;b\)</span>,即输入信号大于阈值，输出为1，反之为0。</p><p>之后涉及到的所有复杂神经网络，都是由这样的神经元所组成的。我们只要让它开始学习就好了。</p><p>流程很简单：<strong>输入，识别，输出，判断</strong></p><p><img src="/note/ai1-2/pic1-2-4.png"></p><p>让我们回到鳄鱼和蛇的问题：输入特征就是输入动物的身长和体重，识别特征就是将数据乘以对应的权重并相加，输出结果就是将f(x)与阈值b进行比较，大于阈值输出1，小于阈值输出0，再与已知的数据进行比较，判断对错：<strong>而判断对错，正是机器学习的核心环节</strong>。</p><p>现在，我们把输出结果命名为y，目标值为Y，只有y和Y都是0或者1，结果才正确，不一样就是错误。</p><p>而机器学习，就是通过不断调整权重W和阈值b，来让结果尽可能的正确。</p><p><img src="/note/ai1-2/pic1-2-5.png"></p><p>用数学语言描述刚刚的过程，可概括为如下公式：</p><p><span class="math display">\[W_{i(t+1)}=W_{i(t)}+\DeltaW_i\]</span></p><p>很容易想到，让机器自动调整的关键就是让机器知道<span class="math inline">\(W_i\)</span>是大了还是小了。而Y是真实值，y是输出值，如果Y与y一样，则<span class="math inline">\(Y-y=0\)</span>，使得<span class="math inline">\(\Delta W_i = 0\)</span>，<span class="math inline">\(W_i\)</span>不调整;如果<span class="math inline">\(Y-y=1\)</span>，则真实值比输出值偏大，要提高<span class="math inline">\(W_i\)</span>让<span class="math inline">\(f(x)&gt;b\)</span>才能达成目的，反之亦然。同时，还需要乘以<span class="math inline">\(X_i\)</span>，这个点的X越大，对整个函数的影响也要越明显，所以我们列出以下式子：</p><p>(r是机器的学习率，可参见梯度下降的有关知识) <span class="math display">\[\Delta W_i = (Y-y)\times X_i \times r\]</span><span class="math display">\[W_{i(t+1)}=W_{i(t)}+(Y-y)\times X_i \timesr\]</span> 同时，b也要进行相应调整： <span class="math display">\[\Deltab = (Y-y)\times 1 \times r\]</span></p><p>早在1957年，FrankRosenblatt就发明了这种感知器，但他存在一个致命的缺陷：很多数据无法用一条直线，一个平面甚至一个超平面分开，而这就涉及到<strong>变换坐标系</strong>的有关知识，而它与<strong>线性代数| Linear Algebra</strong>又紧密相联。</p>]]></content>
    
    
    <summary type="html">用横坐标和纵坐标代表身长和体重，标出鳄鱼和蛇。&lt;br&gt;我们要做的，就是画一条线把他们两个分开。</summary>
    
    
    
    <category term="note" scheme="https://dekrt.cn/categories/note/"/>
    
    
    <category term="人工智能 | ai" scheme="https://dekrt.cn/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD-ai/"/>
    
    <category term="笔记 | note" scheme="https://dekrt.cn/tags/%E7%AC%94%E8%AE%B0-note/"/>
    
  </entry>
  
  <entry>
    <title>1 一点点人工智能</title>
    <link href="https://dekrt.cn/note/ai1-1/"/>
    <id>https://dekrt.cn/note/ai1-1/</id>
    <published>2022-02-10T09:10:04.000Z</published>
    <updated>2022-03-10T08:36:23.277Z</updated>
    
    <content type="html"><![CDATA[<figure><img src="/note/ai1-1/cover.jpg" alt="见证一个人工智能的诞生"><figcaption aria-hidden="true">见证一个人工智能的诞生</figcaption></figure><blockquote><p>当代生活，谁还不会来两句人工智能，深度学习呢？</p></blockquote><p>机器学习正给世界带来重大影响。小区门口的人脸识别开锁、手机里的信息流推荐、路上的自动驾驶，这一切技术的背后都是机器学习。</p><p>这个系列打开了人工智能的黑盒。从现在开始，借助于让人连连称赞的建模，理解人工智能。</p><span id="more"></span><h1 id="识别数字">识别数字</h1><h2 id="part-1-输入数据库-input-database">Part 1 ：输入数据库 | inputdatabase</h2><p>顾名思义，从<strong>识别数字</strong>来引入机器学习。 <img src="/note/ai1-1/pic1-1.png" alt="识别数字">为了做到这一点，我们做的第一件事就是将图片转化为数字，这就需要用到<strong>MNIST数据库</strong>。<img src="/note/ai1-1/pic1-2.png">数据库经过了特殊的处理，每一个图片都是28*28像素(pixel)，每一个pixel存储着这个像素点的灰度，即明暗信息，通常用1byte(8bit)来存储，范围为0-255。<strong>灰度为0为纯黑，灰度为255为纯白</strong>。<img src="/note/ai1-1/pic1-3.png" alt="MNIST数据库"> 如此，我们就把这<span class="math inline">\(28\times28=784\)</span>个灰度信息组成一个<strong>向量(vector)</strong>,n维的向量可以理解为定义在一个n维坐标系中的点。<img src="/note/ai1-1/pic1-4.png" alt="三维向量"> <img src="/note/ai1-1/pic1-5.png" alt="784维向量">每个数字的特征灰度不同，将这个784维的向量放置到784维的坐标系中就会形成不同的集合(set)，用以区分不同的数字。</p><p>接下来要做的就很简单：我们只需要让机器画一条线，让这两个集合分开，在二维坐标系中这十分容易，三维空间就需要二维平面分成两块，而784维空间就需要783维的<strong>超平面</strong>进行分割，用<strong>感知器公式</strong>可以进行如下表示：<span class="math display">\[\sum_{i=1}^{784}W_i\times X_i+b=0\]</span>即 <span class="math display">\[W_1\times X_1+W_2\timesX_2+\dots+W_{784}\times X_{784}+b=0\]</span> 这里的<span class="math inline">\(X_i\)</span>代表着对应像素的灰度信息，每个像素点有自己对应的权重<span class="math inline">\(W_i\)</span>,b代表阈值，对W和b进行调整，就能改变超平面的位置。<img src="/note/ai1-1/pic1-6.png" alt="二维平面分割"> 我们通过比较<span class="math inline">\(\sum_{i=1}^{784}W_i\timesX_i\)</span>与阈值b的大小，就可以让机器完成分类。</p><h2 id="part-2-训练感知器-training-perceptron">Part 2 : 训练感知器 |training perceptron</h2><p><img src="/note/ai1-1/pic1-7.png" alt="784维示意">通过<strong>以后会了解到的算法</strong>我们可以让机器通过不断地学习，自动的调整权重和阈值，达到识别数字的目的。</p><p><img src="/note/ai1-1/pic1-9.png"></p><p>更高清的图片所处的维度更高，所用的方法也类似</p>]]></content>
    
    
    <summary type="html">当代生活，谁还不会来两句人工智能，深度学习呢？</summary>
    
    
    
    <category term="note" scheme="https://dekrt.cn/categories/note/"/>
    
    
    <category term="人工智能 | ai" scheme="https://dekrt.cn/tags/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD-ai/"/>
    
    <category term="笔记 | note" scheme="https://dekrt.cn/tags/%E7%AC%94%E8%AE%B0-note/"/>
    
  </entry>
  
  <entry>
    <title>慕课 &amp; U校园自动答题脚本使用教程</title>
    <link href="https://dekrt.cn/tutorial/mooc/"/>
    <id>https://dekrt.cn/tutorial/mooc/</id>
    <published>2022-01-26T13:12:05.000Z</published>
    <updated>2022-06-02T13:39:05.628Z</updated>
    
    <content type="html"><![CDATA[<p>使用本文所述的脚本，可以自动完成慕课、U校园的答题，亦可用于刷课时等操作，大大提升<u><strong>学习效率</strong></u>!</p><h1 id="下载软件">下载软件</h1><del>进入domooc下载网站，下载解压直用版<a href="http://cdn.lolzyx.xyz/domoocinstall" class="uri">http://cdn.lolzyx.xyz/domoocinstall</a></del><p><strong>更新：domooc原版已经失效，需要重新下载最新版本：<a href="https://domooc.top/domoocinstall" class="uri">https://domooc.top/domoocinstall</a></strong></p><figure><img src="/tutorial/mooc/pic1.png" alt="选择箭头所指即可"><figcaption aria-hidden="true">选择箭头所指即可</figcaption></figure><span id="more"></span><p>下载完后解压，选择双击只用，打开浏览器，登录自己的mooc账号，即可正常使用domooc。<img src="/tutorial/mooc/pic2.png" alt="domooc窗口示意"></p><h1 id="安装u校园脚本">安装U校园脚本</h1><p>在浏览器右上角点击油猴图标，再点击添加新脚本 <img src="/tutorial/mooc/pic3.png">然后复制粘贴以下的U校园脚本(<u>点击代码块右上角一键复制</u>)：<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// ==UserScript==</span></span><br><span class="line"><span class="comment">// @name         U校园unipus英语网课作业答案显示(不支持单元测试)</span></span><br><span class="line"><span class="comment">// @namespace    https://greasyfork.org</span></span><br><span class="line"><span class="comment">// @version      1.8</span></span><br><span class="line"><span class="comment">// @description  小窗口显示U校园板块测试答案</span></span><br><span class="line"><span class="comment">// @icon         https://ucontent.unipus.cn/favicon.ico</span></span><br><span class="line"><span class="comment">// @match        *://ucontent.unipus.cn/_pc_default/pc.html?*</span></span><br><span class="line"><span class="comment">// @match        *://u.unipus.cn/*</span></span><br><span class="line"><span class="comment">// @connect      unipus.cn</span></span><br><span class="line"><span class="comment">// @connect      fanyi.youdao.com</span></span><br><span class="line"><span class="comment">// @connect      translate.google.cn</span></span><br><span class="line"><span class="comment">// @connect      translate.google.com</span></span><br><span class="line"><span class="comment">// @connect      api.microsofttranslator.com</span></span><br><span class="line"><span class="comment">// @connect      api.fanyi.baidu.com</span></span><br><span class="line"><span class="comment">// @grant        GM_xmlhttpRequest</span></span><br><span class="line"><span class="comment">// @grant        GM_setClipboard</span></span><br><span class="line"><span class="comment">// @grant        GM_setValue</span></span><br><span class="line"><span class="comment">// @grant        GM_getValue</span></span><br><span class="line"><span class="comment">// @run-at       document-end</span></span><br><span class="line"><span class="comment">// @require      https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.min.js</span></span><br><span class="line"><span class="comment">// @require      https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.0.0/crypto-js.min.js</span></span><br><span class="line"><span class="comment">// @license      MIT</span></span><br><span class="line"><span class="comment">// ==/UserScript==</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Generate a random string</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>length Length of this random string</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123;string&#125;</span> </span>The random string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomString</span>(<span class="params">length</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> abc = <span class="string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> ret = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        ret += abc.charAt(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * abc.length));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Generate a random num string</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>length Length of this random num string</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123;string&#125;</span> </span>The random num string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">randomNumString</span>(<span class="params">length</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> nums = <span class="string">&quot;0123456789&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> ret = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        ret += nums.charAt(<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * nums.length));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Async wait, default to 10 ms</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;number&#125;</span> </span>ms How long to wait (in millisecond)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123;Promise&lt;null&gt;&#125;</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">ms = <span class="number">10</span></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 异步等待，只阻塞当前脚本调用处函数，不阻塞整个浏览器</span></span><br><span class="line">    <span class="comment">// 调用方法：await sleep() 或 await sleep (1000)</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">setTimeout</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            resolve();</span><br><span class="line">        &#125;, ms);</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getRequest</span>(<span class="params">url, headers = &#123;&#125;, timeout = <span class="number">5000</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span> (<span class="params">resolve, reject</span>) </span>&#123;</span><br><span class="line">        GM_xmlhttpRequest(&#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;GET&#x27;</span>,</span><br><span class="line">            <span class="attr">url</span>: url,</span><br><span class="line">            <span class="attr">headers</span>: headers,</span><br><span class="line">            <span class="attr">timeout</span>: timeout,</span><br><span class="line">            <span class="attr">onload</span>: <span class="function">(<span class="params">xhr</span>) =&gt;</span> &#123;</span><br><span class="line">                resolve(xhr);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">onerror</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">                reject(err);</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">ontimeout</span>: <span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">                reject(err);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Decrypt and parse &quot;content&quot; of XHR, thanks to SSmJaE for providing this function!</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;String&#125;</span></span>&#125; json Encrypted json or raw json string</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123;Object&#125;</span> </span>Object from raw json string</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">parseJson</span>(<span class="params">json</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (json) &#123;</span><br><span class="line">        <span class="keyword">let</span> r = json.content.slice(<span class="number">7</span>)</span><br><span class="line">            , o = CryptoJS.enc.Utf8.parse(<span class="string">&quot;1a2b3c4d&quot;</span> + json.k)</span><br><span class="line">            , i = CryptoJS.enc.Hex.parse(r)</span><br><span class="line">            , a = CryptoJS.enc.Base64.stringify(i)</span><br><span class="line">            , contentJson = <span class="built_in">JSON</span>.parse(CryptoJS.AES.decrypt(a, o, &#123;</span><br><span class="line">                <span class="attr">mode</span>: CryptoJS.mode.ECB,</span><br><span class="line">                <span class="attr">padding</span>: CryptoJS.pad.ZeroPadding</span><br><span class="line">            &#125;).toString(CryptoJS.enc.Utf8));</span><br><span class="line">        json = contentJson;</span><br><span class="line">        <span class="built_in">console</span>.log(json);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> json;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Copy a string to clipboard</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="type">&#123;string&#125;</span> </span>str String to be copy</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">copyMe</span>(<span class="params">str</span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">_legacyCopy</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;正在使用传统方法复制&quot;</span>);</span><br><span class="line">        <span class="keyword">let</span> tmpInput = <span class="built_in">document</span>.createElement(<span class="string">&#x27;input&#x27;</span>);</span><br><span class="line">        elem.insertAdjacentHTML(<span class="string">&quot;afterend&quot;</span>, tmpInput)</span><br><span class="line">        tmpInput.value = str;</span><br><span class="line">        tmpInput.focus();</span><br><span class="line">        tmpInput.select();</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">document</span>.execCommand(<span class="string">&#x27;copy&#x27;</span>)) &#123;</span><br><span class="line">            <span class="built_in">document</span>.execCommand(<span class="string">&#x27;copy&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        tmpInput.blur();</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;复制成功&#x27;</span>);</span><br><span class="line">        tmpInput.remove();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (GM_setClipboard) &#123;</span><br><span class="line">        GM_setClipboard(str);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (navigator.clipboard &amp;&amp; <span class="built_in">window</span>.isSecureContext) &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;正在使用 navigator clipboard api 进行复制操作&quot;</span>);</span><br><span class="line">        navigator.clipboard.writeText(str)</span><br><span class="line">            .catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">&quot;navigator clipboard api 复制时出错，将使用传统方法进行复制&quot;</span>)</span><br><span class="line">                _legacyCopy();</span><br><span class="line">            &#125;)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        _legacyCopy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Get token</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns <span class="type">&#123;string&#125;</span> </span>token or fallbackToken when error.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">getToken</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> fallbackToken = <span class="string">&quot;eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcGVuX2lkIjoidHV4NkNCQVc4aGRrcnFZdzc5SEpEWDF2aTR5Z2ptcDUiLCJuYW1lIjoiIiwiZW1haWwiOiIiLCJhZG1pbmlzdHJhdG9yIjoiZmFsc2UiLCJleHAiOjE5MDI5NzAxNTcwMDAsImlzcyI6IlI0aG03RmxQOFdvS0xaMUNmTkllIiwiYXVkIjoiZWR4LnVuaXB1cy5jbiJ9.CwuQmnSmIuts3hHAMf9lT954rKHXUNkps-PfRJp0KnU&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> oldToken = GM_getValue(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (oldToken &amp;&amp; <span class="keyword">new</span> <span class="built_in">Date</span>(oldToken.expireWhen).getTime() &gt; <span class="keyword">new</span> <span class="built_in">Date</span>().getTime()) &#123;</span><br><span class="line">        <span class="keyword">return</span> oldToken.token;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> url = <span class="string">&quot;https://u.unipus.cn/user/data/getToken&quot;</span>;</span><br><span class="line">    <span class="keyword">let</span> xhr = <span class="keyword">await</span> getRequest(url).catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.error(err);</span><br><span class="line">        layui.use(<span class="string">&quot;layer&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            layer.alert(<span class="string">`获取 Token 失败，请刷新重试\n错误信息：<span class="subst">$&#123;err&#125;</span>`</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> fallbackToken;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="keyword">if</span> (xhr.status != <span class="number">200</span>) &#123;</span><br><span class="line">        layui.use(<span class="string">&quot;layer&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            layer.alert(<span class="string">`获取 Token 失败，请刷新重试`</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">return</span> fallbackToken;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> obj = <span class="built_in">JSON</span>.parse(xhr.responseText);</span><br><span class="line">    <span class="keyword">if</span> (!obj || !obj.token)</span><br><span class="line">        <span class="keyword">return</span> fallbackToken;</span><br><span class="line">    <span class="keyword">let</span> token = obj.token;</span><br><span class="line">    <span class="keyword">let</span> expireWhen = <span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">    expireWhen.setDate(expireWhen.getDate() + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">let</span> tokenObj = &#123;</span><br><span class="line">        <span class="attr">token</span>: token,</span><br><span class="line">        <span class="attr">expireWhen</span>: expireWhen,</span><br><span class="line">    &#125;</span><br><span class="line">    GM_setValue(<span class="string">&quot;token&quot;</span>, tokenObj);</span><br><span class="line">    <span class="keyword">return</span> token;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.location.href.includes(<span class="string">&quot;u.unipus.cn&quot;</span>)) &#123;</span><br><span class="line">        <span class="built_in">window</span>.setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;layui-layer-shade&quot;</span>).length &gt; <span class="number">0</span> &amp;&amp; <span class="built_in">document</span>.querySelectorAll(<span class="string">&quot;.layui-layer-dialog&quot;</span>).length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="comment">// 去除环境检测弹窗</span></span><br><span class="line">                <span class="built_in">document</span>.querySelector(<span class="string">&quot;.layui-layer-shade&quot;</span>).remove();</span><br><span class="line">                <span class="built_in">document</span>.querySelector(<span class="string">&quot;.layui-layer-dialog&quot;</span>).remove();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">100</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">window</span>.location.href.includes(<span class="string">&quot;ucontent.unipus.cn&quot;</span>)) &#123;</span><br><span class="line">        $.getScript(<span class="string">&quot;https://cdn.staticaly.com/gh/placemarker/jQuery-MD5/master/jquery.md5.js&quot;</span>);</span><br><span class="line">        $(<span class="string">&#x27;head&#x27;</span>).append(<span class="string">&#x27;&lt;link href=&quot;https://lib.baomitu.com/layui/2.6.8/css/layui.css&quot; rel=&quot;stylesheet&quot; type=&quot;text/css&quot; /&gt;&#x27;</span>);</span><br><span class="line">        $.getScript(<span class="string">&quot;https://lib.baomitu.com/layui/2.6.8/layui.js&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data, status, jqxhr</span>) </span>&#123;</span><br><span class="line">            layui.use(<span class="string">&#x27;element&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                <span class="keyword">let</span> element = layui.element;</span><br><span class="line">            &#125;);</span><br><span class="line">            layer.closeAll();</span><br><span class="line">            show();</span><br><span class="line">            showanswer();</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">let</span> autoClickPlay = <span class="built_in">window</span>.setInterval(<span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">document</span>.querySelector(<span class="string">&quot;.audio--aplayer-mute-2VMS7&quot;</span>)) &#123;</span><br><span class="line">                <span class="built_in">window</span>.clearInterval(autoClickPlay);</span><br><span class="line">                <span class="keyword">await</span> sleep(<span class="number">500</span>);</span><br><span class="line">                <span class="built_in">document</span>.querySelector(<span class="string">&quot;.audio--aplayer-rate-ms-ZWyM6.audio--aplayer-rate-m-aH2Eu&quot;</span>).querySelectorAll(<span class="string">&quot;span&quot;</span>)[<span class="number">2</span>].click();</span><br><span class="line">                <span class="keyword">await</span> sleep(<span class="number">300</span>);</span><br><span class="line">                <span class="built_in">document</span>.querySelector(<span class="string">&quot;.audio--aplayer-mute-2VMS7&quot;</span>).click();</span><br><span class="line">                <span class="keyword">await</span> sleep(<span class="number">300</span>);</span><br><span class="line">                <span class="built_in">document</span>.querySelector(<span class="string">&quot;.audio--aplayer-play-3oL9n&quot;</span>).click();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">100</span>);</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            layer.open(&#123;</span><br><span class="line">                <span class="attr">type</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">area</span>: [<span class="string">&#x27;310px&#x27;</span>, <span class="string">&#x27;400px&#x27;</span>],</span><br><span class="line">                <span class="attr">offset</span>: <span class="string">&#x27;r&#x27;</span>,</span><br><span class="line">                <span class="attr">id</span>: <span class="string">&#x27;msgt&#x27;</span>,</span><br><span class="line">                <span class="attr">closeBtn</span>: <span class="number">1</span>,</span><br><span class="line">                <span class="attr">title</span>: <span class="string">&quot; &quot;</span>,</span><br><span class="line">                <span class="attr">shade</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">maxmin</span>: <span class="literal">true</span>,</span><br><span class="line">                <span class="attr">anim</span>: <span class="number">2</span>,</span><br><span class="line">                <span class="attr">content</span>: <span class="string">`&lt;div class=&quot;layui-collapse&quot;&gt;&lt;div class=&quot;layui-colla-item&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span></span><br><span class="line"><span class="string">                &lt;div id=&quot;content&quot;&gt;</span></span><br><span class="line"><span class="string">                    &lt;table class=&quot;layui-table&quot;&gt;</span></span><br><span class="line"><span class="string">                        &lt;colgroup&gt;</span></span><br><span class="line"><span class="string">                            &lt;col width=&quot;100&quot;&gt;</span></span><br><span class="line"><span class="string">                            &lt;col&gt;</span></span><br><span class="line"><span class="string">                            &lt;col&gt;</span></span><br><span class="line"><span class="string">                        &lt;/colgroup&gt;</span></span><br><span class="line"><span class="string">                        &lt;thead&gt;&lt;tr&gt;&lt;/tr&gt;&lt;/thead&gt;</span></span><br><span class="line"><span class="string">                        &lt;tbody&gt;&lt;/tbody&gt;</span></span><br><span class="line"><span class="string">                    &lt;/table&gt;</span></span><br><span class="line"><span class="string">                &lt;/div&gt;`</span></span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">showanswer</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">let</span> url = location.href</span><br><span class="line">            <span class="keyword">let</span> arr = url.split(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">            <span class="keyword">let</span> unit = arr[arr.length - <span class="number">2</span>]</span><br><span class="line">            <span class="keyword">let</span> course = <span class="regexp">/course-v1:.*?\//g</span>.exec(url);</span><br><span class="line">            course = course[<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">let</span> token = <span class="keyword">await</span> getToken();</span><br><span class="line">            <span class="keyword">let</span> xhr = <span class="keyword">await</span> getRequest(</span><br><span class="line">                <span class="string">`https://ucontent.unipus.cn/course/api/content/<span class="subst">$&#123;course&#125;</span><span class="subst">$&#123;unit&#125;</span>/default/`</span>,</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="string">&#x27;X-ANNOTATOR-AUTH-TOKEN&#x27;</span>: token</span><br><span class="line">                &#125;,</span><br><span class="line">                <span class="number">5000</span></span><br><span class="line">            ).catch(<span class="function">(<span class="params">err</span>) =&gt;</span> &#123;</span><br><span class="line">                <span class="built_in">console</span>.error(err);</span><br><span class="line">                <span class="keyword">let</span> el = <span class="string">`&lt;tr class=&quot;layui-bg&quot;&gt;&lt;td&gt;答案加载失败，请刷新重试。&lt;/td&gt;&lt;/tr&gt;`</span>;</span><br><span class="line">                $(<span class="string">&quot;#content&gt;table&gt;tbody&quot;</span>).append($(el));</span><br><span class="line">            &#125;);</span><br><span class="line">            <span class="keyword">if</span> (xhr.status != <span class="number">200</span>) &#123;</span><br><span class="line">                <span class="keyword">let</span> el = <span class="string">`&lt;tr class=&quot;layui-bg&quot;&gt;&lt;td&gt;答案加载失败，请刷新重试。&lt;/td&gt;&lt;/tr&gt;`</span>;</span><br><span class="line">                $(<span class="string">&quot;#content&gt;table&gt;tbody&quot;</span>).append($(el));</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> obj = <span class="built_in">JSON</span>.parse(xhr.responseText) || &#123;&#125;;</span><br><span class="line">            <span class="keyword">if</span> (!obj.content) &#123;</span><br><span class="line">                <span class="keyword">throw</span> <span class="built_in">Error</span>(<span class="string">&quot;U校园返回的内容中不包含&#x27;content&#x27;字段，请检查api是否改变！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">let</span> rawContent = parseJson(obj) || &#123;&#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> pages = &#123;&#125;;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">let</span> key <span class="keyword">in</span> rawContent) &#123;</span><br><span class="line">                <span class="keyword">let</span> pageNo = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (key.includes(<span class="string">&quot;content_&quot;</span>)) &#123;</span><br><span class="line">                    <span class="keyword">let</span> re = <span class="regexp">/content_(\d+):/g</span>.exec(key);</span><br><span class="line">                    pageNo = <span class="built_in">parseInt</span>(re[<span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">                pages[pageNo] = &#123;</span><br><span class="line">                    <span class="attr">key</span>: key,</span><br><span class="line">                    <span class="attr">content</span>: rawContent[key]</span><br><span class="line">                &#125;;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">let</span> quesNo = <span class="regexp">/p_(\d+)/g</span>.exec(url);</span><br><span class="line">            quesNo = quesNo[<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">let</span> key = pages[quesNo].key;</span><br><span class="line">            <span class="keyword">let</span> content = pages[quesNo].content;</span><br><span class="line">            <span class="keyword">if</span> (key.includes(<span class="string">&quot;:questions&quot;</span>)) &#123;</span><br><span class="line">                <span class="comment">// 选择题</span></span><br><span class="line">                <span class="keyword">let</span> questionList = content.questions;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> num = <span class="number">0</span>; num &lt; questionList.length; num++) &#123;</span><br><span class="line">                    <span class="keyword">let</span> question = questionList[num];</span><br><span class="line">                    <span class="keyword">let</span> answerId = randomString(<span class="number">5</span>);</span><br><span class="line">                    <span class="keyword">let</span> btnId = randomString(<span class="number">5</span>);</span><br><span class="line">                    <span class="keyword">let</span> el = <span class="string">`&lt;tr class=&quot;layui-bg&quot;&gt;&lt;td&gt;&lt;b&gt;<span class="subst">$&#123;num + <span class="number">1</span>&#125;</span>. &lt;/b&gt;&lt;code id=&quot;<span class="subst">$&#123;answerId&#125;</span>&quot;&gt;<span class="subst">$&#123;question.answers.join(<span class="string">&quot;、&quot;</span>)&#125;</span>&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;`</span>;</span><br><span class="line">                    $(<span class="string">&quot;#content&gt;table&gt;tbody&quot;</span>).append($(el));</span><br><span class="line">                    $(<span class="string">`#<span class="subst">$&#123;btnId&#125;</span>`</span>).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">let</span> _answer = $(<span class="string">`#<span class="subst">$&#123;answerId&#125;</span>`</span>).text();</span><br><span class="line">                        copyMe(_answer);</span><br><span class="line">                    &#125;)</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">let</span> interval = <span class="built_in">window</span>.setInterval(<span class="keyword">async</span> <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">document</span>.querySelector(<span class="string">&quot;.questions--questionDefault-2XLzl.undefined&quot;</span>)) &#123;</span><br><span class="line">                        <span class="built_in">window</span>.clearInterval(interval);</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">let</span> num = <span class="number">0</span>; num &lt; questionList.length; num++) &#123;</span><br><span class="line">                            <span class="keyword">let</span> question = questionList[num];</span><br><span class="line">                            <span class="keyword">let</span> questionElem = <span class="built_in">document</span>.querySelectorAll(<span class="string">&quot;.questions--questionDefault-2XLzl.undefined&quot;</span>)[num]</span><br><span class="line">                            <span class="keyword">let</span> options = questionElem.querySelectorAll(<span class="string">&quot;.clearfix&quot;</span>);</span><br><span class="line">                            <span class="keyword">if</span> (options.length == <span class="number">0</span>) &#123;</span><br><span class="line">                                options = questionElem.querySelectorAll(<span class="string">&quot;.MultipleChoice--checkbox-2_VGC&quot;</span>);</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">for</span> (<span class="keyword">let</span> answer <span class="keyword">of</span> question.answers) &#123;</span><br><span class="line">                                <span class="keyword">let</span> sel = answer.toUpperCase().charCodeAt(<span class="number">0</span>) - <span class="string">&quot;A&quot;</span>.charCodeAt(<span class="number">0</span>);</span><br><span class="line">                                options[sel].click();</span><br><span class="line">                            &#125;</span><br><span class="line">                            <span class="keyword">await</span> sleep(<span class="number">200</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, <span class="number">1000</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key.includes(<span class="string">&quot;:scoopquestions&quot;</span>)) &#123;</span><br><span class="line">                <span class="comment">// 填空题</span></span><br><span class="line">                <span class="keyword">let</span> questionList = content.questions;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> num = <span class="number">0</span>; num &lt; questionList.length; num++) &#123;</span><br><span class="line">                    <span class="keyword">let</span> question = questionList[num];</span><br><span class="line">                    <span class="keyword">let</span> answerId = randomString(<span class="number">5</span>);</span><br><span class="line">                    <span class="keyword">let</span> btnId = randomString(<span class="number">5</span>);</span><br><span class="line">                    <span class="keyword">let</span> el = <span class="string">`&lt;tr class=&quot;layui-bg&quot;&gt;&lt;td&gt;&lt;b&gt;<span class="subst">$&#123;num + <span class="number">1</span>&#125;</span>. &lt;/b&gt;&lt;code id=&quot;<span class="subst">$&#123;answerId&#125;</span>&quot;&gt;<span class="subst">$&#123;question.answers[<span class="number">0</span>]&#125;</span>&lt;/code&gt;&lt;button style=&quot;float:right;&quot; id=&quot;<span class="subst">$&#123;btnId&#125;</span>&quot;&gt;复制&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;`</span>;</span><br><span class="line">                    $(<span class="string">&quot;#content&gt;table&gt;tbody&quot;</span>).append($(el));</span><br><span class="line">                    $(<span class="string">`#<span class="subst">$&#123;btnId&#125;</span>`</span>).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">let</span> _answer = $(<span class="string">`#<span class="subst">$&#123;answerId&#125;</span>`</span>).text();</span><br><span class="line">                        copyMe(_answer);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">let</span> interval = <span class="built_in">window</span>.setInterval(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">document</span>.querySelector(<span class="string">&quot;.htmlViewBlank--holder_style-2dnxi&quot;</span>)) &#123;</span><br><span class="line">                        <span class="built_in">window</span>.clearInterval(interval);</span><br><span class="line">                        $(<span class="string">&quot;#content&gt;table&gt;tbody&quot;</span>).prepend($(</span><br><span class="line">                            <span class="string">`&lt;tr class=&quot;layui-bg&quot;&gt;&lt;td&gt;&lt;b&gt;无需在此面板中复制，点击题目中的空，直接粘贴即可。&lt;/b&gt;&lt;/td&gt;&lt;/tr&gt;`</span></span><br><span class="line">                        ))</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">let</span> num = <span class="number">0</span>; num &lt; questionList.length; num++) &#123;</span><br><span class="line">                            <span class="keyword">let</span> answer = questionList[num].answers[<span class="number">0</span>];</span><br><span class="line">                            $(<span class="built_in">document</span>.querySelectorAll(<span class="string">&quot;.htmlViewBlank--holder_style-2dnxi&quot;</span>)[num]).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                copyMe(answer);</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;, <span class="number">500</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key.includes(<span class="string">&#x27;:shortanswer&#x27;</span>) &amp;&amp; content.category === <span class="string">&quot;shortanswer:shortAnswer&quot;</span>) &#123;</span><br><span class="line">                <span class="comment">// 翻译题</span></span><br><span class="line">                <span class="keyword">let</span> question = content.content[<span class="number">0</span>].html.html;</span><br><span class="line">                question = question.replace(<span class="regexp">/&lt;.*?&gt;|\(.*?\)|（.*?）/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                <span class="keyword">let</span> direction = <span class="string">&#x27;zh2en&#x27;</span>;</span><br><span class="line">                <span class="keyword">if</span> (<span class="regexp">/^[a-zA-Z\.,\s]+$/g</span>.test(question.substring(<span class="number">0</span>, <span class="number">5</span>))) direction = <span class="string">&#x27;en2zh&#x27;</span>;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 谷歌翻译</span></span><br><span class="line">                    <span class="keyword">let</span> googleTranslateXhr = <span class="keyword">await</span> getRequest(</span><br><span class="line">                        <span class="string">`http://translate.google.cn/translate_a/single?client=gtx&amp;dt=t&amp;dj=1&amp;ie=UTF-8&amp;sl=<span class="subst">$&#123;direction.split(<span class="string">&quot;2&quot;</span>)[<span class="number">0</span>]&#125;</span>&amp;tl=<span class="subst">$&#123;direction.split(<span class="string">&quot;2&quot;</span>)[<span class="number">1</span>]&#125;</span>&amp;q=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(question)&#125;</span>`</span></span><br><span class="line">                    );</span><br><span class="line">                    <span class="keyword">let</span> googleTranslatedObj = <span class="built_in">JSON</span>.parse(googleTranslateXhr.responseText);</span><br><span class="line">                    <span class="keyword">let</span> googleTranslateResult = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">let</span> sentence <span class="keyword">of</span> googleTranslatedObj.sentences) &#123;</span><br><span class="line">                        googleTranslateResult += sentence.trans;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">let</span> answerId = randomString(<span class="number">5</span>);</span><br><span class="line">                    <span class="keyword">let</span> btnId = randomString(<span class="number">5</span>);</span><br><span class="line">                    $(<span class="string">&quot;#content&gt;table&gt;tbody&quot;</span>).append($(<span class="string">`&lt;tr class=&quot;layui-bg&quot;&gt;&lt;td&gt;&lt;b&gt;谷歌翻译：&lt;/b&gt;&lt;code id=&quot;<span class="subst">$&#123;answerId&#125;</span>&quot;&gt;<span class="subst">$&#123;googleTranslateResult&#125;</span>&lt;/code&gt;&lt;button style=&quot;float:right;&quot; id=&quot;<span class="subst">$&#123;btnId&#125;</span>&quot;&gt;复制&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;`</span>));</span><br><span class="line">                    $(<span class="string">`#<span class="subst">$&#123;btnId&#125;</span>`</span>).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">let</span> _answer = $(<span class="string">`#<span class="subst">$&#123;answerId&#125;</span>`</span>).text();</span><br><span class="line">                        copyMe(_answer);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                    <span class="built_in">console</span>.error(e);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 百度翻译</span></span><br><span class="line">                    <span class="keyword">let</span> appid = <span class="string">&quot;20211128001012194&quot;</span>;</span><br><span class="line">                    <span class="keyword">let</span> salt = randomString(<span class="number">10</span>);</span><br><span class="line">                    <span class="keyword">let</span> sec = <span class="string">&quot;LmBTDmGsvh2Ww2ws2F2S&quot;</span>;</span><br><span class="line">                    <span class="keyword">let</span> sign = md5(appid + question + salt + sec);</span><br><span class="line">                    <span class="keyword">let</span> baiduTranslateXhr = <span class="keyword">await</span> getRequest(</span><br><span class="line">                        <span class="string">`http://api.fanyi.baidu.com/api/trans/vip/translate?q=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(question)&#125;</span>&amp;from=<span class="subst">$&#123;direction.split(<span class="string">&quot;2&quot;</span>)[<span class="number">0</span>]&#125;</span>&amp;to=<span class="subst">$&#123;direction.split(<span class="string">&quot;2&quot;</span>)[<span class="number">1</span>]&#125;</span>&amp;appid=<span class="subst">$&#123;appid&#125;</span>&amp;salt=<span class="subst">$&#123;salt&#125;</span>&amp;sign=<span class="subst">$&#123;sign&#125;</span>`</span></span><br><span class="line">                    );</span><br><span class="line">                    <span class="keyword">let</span> baiduTranslateObj = <span class="built_in">JSON</span>.parse(baiduTranslateXhr.responseText);</span><br><span class="line">                    <span class="keyword">let</span> baiduTranslateResult = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">let</span> item <span class="keyword">of</span> baiduTranslateObj.trans_result) &#123;</span><br><span class="line">                        baiduTranslateResult += item.dst;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">let</span> answerId = randomString(<span class="number">5</span>);</span><br><span class="line">                    <span class="keyword">let</span> btnId = randomString(<span class="number">5</span>);</span><br><span class="line">                    $(<span class="string">&quot;#content&gt;table&gt;tbody&quot;</span>).append($(<span class="string">`&lt;tr class=&quot;layui-bg&quot;&gt;&lt;td&gt;&lt;b&gt;百度翻译：&lt;/b&gt;&lt;code id=&quot;<span class="subst">$&#123;answerId&#125;</span>&quot;&gt;<span class="subst">$&#123;baiduTranslateResult&#125;</span>&lt;/code&gt;&lt;button style=&quot;float:right;&quot; id=&quot;<span class="subst">$&#123;btnId&#125;</span>&quot;&gt;复制&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;`</span>));</span><br><span class="line">                    $(<span class="string">`#<span class="subst">$&#123;btnId&#125;</span>`</span>).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">let</span> _answer = $(<span class="string">`#<span class="subst">$&#123;answerId&#125;</span>`</span>).text();</span><br><span class="line">                        copyMe(_answer);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                    <span class="built_in">console</span>.error(e);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="comment">// 必应翻译</span></span><br><span class="line">                    <span class="keyword">let</span> bingTranslateXhr = <span class="keyword">await</span> getRequest(</span><br><span class="line">                        <span class="string">`http://api.microsofttranslator.com/v2/Http.svc/Translate?appId=AFC76A66CF4F434ED080D245C30CF1E71C22959C&amp;from=<span class="subst">$&#123;direction.split(<span class="string">&quot;2&quot;</span>)[<span class="number">0</span>]&#125;</span>&amp;to=<span class="subst">$&#123;direction.split(<span class="string">&quot;2&quot;</span>)[<span class="number">1</span>]&#125;</span>&amp;text=<span class="subst">$&#123;<span class="built_in">encodeURIComponent</span>(question)&#125;</span>`</span></span><br><span class="line">                    );</span><br><span class="line">                    <span class="keyword">let</span> bingTranslateResult = bingTranslateXhr.responseText.replace(<span class="regexp">/&lt;.*?&gt;/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                    <span class="keyword">if</span> (!bingTranslateResult.includes(<span class="string">&quot;TranslateApiExceptionMethod&quot;</span>)) &#123;</span><br><span class="line">                        <span class="keyword">let</span> answerId = randomString(<span class="number">5</span>);</span><br><span class="line">                        <span class="keyword">let</span> btnId = randomString(<span class="number">5</span>);</span><br><span class="line">                        $(<span class="string">&quot;#content&gt;table&gt;tbody&quot;</span>).append($(<span class="string">`&lt;tr class=&quot;layui-bg&quot;&gt;&lt;td&gt;&lt;b&gt;必应翻译：&lt;/b&gt;&lt;code id=&quot;<span class="subst">$&#123;answerId&#125;</span>&quot;&gt;<span class="subst">$&#123;bingTranslateResult&#125;</span>&lt;/code&gt;&lt;button style=&quot;float:right;&quot; id=&quot;<span class="subst">$&#123;btnId&#125;</span>&quot;&gt;复制&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;`</span>));</span><br><span class="line">                        $(<span class="string">`#<span class="subst">$&#123;btnId&#125;</span>`</span>).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">let</span> _answer = $(<span class="string">`#<span class="subst">$&#123;answerId&#125;</span>`</span>).text();</span><br><span class="line">                            copyMe(_answer);</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                    <span class="built_in">console</span>.error(e);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    <span class="keyword">let</span> answer = content.analysis.html;</span><br><span class="line">                    answer = answer.replace(<span class="regexp">/&lt;.*?&gt;/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                    <span class="keyword">let</span> el = <span class="string">`&lt;tr class=&quot;layui-bg&quot;&gt;&lt;td&gt;&lt;b&gt;标准答案（仅供参考）：&lt;/b&gt;<span class="subst">$&#123;answer&#125;</span>&lt;/td&gt;&lt;/tr&gt;`</span>;</span><br><span class="line">                    $(<span class="string">&quot;#content&gt;table&gt;tbody&quot;</span>).append($(el));</span><br><span class="line">                &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                    <span class="built_in">console</span>.error(e);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key.includes(<span class="string">&#x27;:shortanswer&#x27;</span>) &amp;&amp; content.category === <span class="string">&quot;shortanswerScoop&quot;</span>) &#123;</span><br><span class="line">                <span class="comment">// 简答题</span></span><br><span class="line">                <span class="keyword">if</span> (content.analysis.html.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">let</span> answer = content.analysis.html;</span><br><span class="line">                        answer = answer.replace(<span class="regexp">/&lt;.*?&gt;/g</span>, <span class="string">&quot;&quot;</span>).replace(<span class="regexp">/\d\.\s?(&amp;nbsp;)?/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                        <span class="keyword">let</span> answerId = randomString(<span class="number">5</span>);</span><br><span class="line">                        <span class="keyword">let</span> btnId = randomString(<span class="number">5</span>);</span><br><span class="line">                        <span class="keyword">let</span> el = <span class="string">`&lt;tr class=&quot;layui-bg&quot;&gt;&lt;td&gt;&lt;b&gt;标准答案（仅供参考）：&lt;/b&gt;&lt;code id=&quot;<span class="subst">$&#123;answerId&#125;</span>&quot;&gt;<span class="subst">$&#123;answer&#125;</span>&lt;/code&gt;&lt;button style=&quot;float:right;&quot; id=&quot;<span class="subst">$&#123;btnId&#125;</span>&quot;&gt;复制&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;`</span>;</span><br><span class="line">                        $(<span class="string">&quot;#content&gt;table&gt;tbody&quot;</span>).append($(el));</span><br><span class="line">                        $(<span class="string">`#<span class="subst">$&#123;btnId&#125;</span>`</span>).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">let</span> _answer = $(<span class="string">`#<span class="subst">$&#123;answerId&#125;</span>`</span>).text();</span><br><span class="line">                            copyMe(_answer);</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                        <span class="built_in">console</span>.error(e);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">let</span> questionList = content.questions;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; questionList.length; i++) &#123;</span><br><span class="line">                        <span class="keyword">let</span> question = questionList[i];</span><br><span class="line">                        <span class="keyword">let</span> answerId = randomString(<span class="number">5</span>);</span><br><span class="line">                        <span class="keyword">let</span> btnId = randomString(<span class="number">5</span>);</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            <span class="keyword">let</span> answer = question.analysis.html.replace(<span class="regexp">/&lt;.*?&gt;/g</span>, <span class="string">&quot;&quot;</span>).replace(<span class="regexp">/\d\.\s?(&amp;nbsp;)?/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                            <span class="keyword">let</span> el = <span class="string">`&lt;tr class=&quot;layui-bg&quot;&gt;&lt;td&gt;&lt;b&gt;<span class="subst">$&#123;i + <span class="number">1</span>&#125;</span>.（仅供参考）&lt;/b&gt;&lt;code id=&quot;<span class="subst">$&#123;answerId&#125;</span>&quot;&gt;<span class="subst">$&#123;answer&#125;</span>&lt;/code&gt;&lt;button style=&quot;float:right;&quot; id=&quot;<span class="subst">$&#123;btnId&#125;</span>&quot;&gt;复制&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;`</span>;</span><br><span class="line">                            $(<span class="string">&quot;#content&gt;table&gt;tbody&quot;</span>).append($(el));</span><br><span class="line">                            $(<span class="string">`#<span class="subst">$&#123;btnId&#125;</span>`</span>).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                                <span class="keyword">let</span> _answer = $(<span class="string">`#<span class="subst">$&#123;answerId&#125;</span>`</span>).text();</span><br><span class="line">                                copyMe(_answer);</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                            <span class="built_in">console</span>.error(e);</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key.includes(<span class="string">&quot;:shortanswer&quot;</span>) || key.includes(<span class="string">&quot;:scoopshortanswer&quot;</span>)) &#123;</span><br><span class="line">                <span class="comment">// 简答题</span></span><br><span class="line">                <span class="keyword">let</span> questionList = content.questions;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; questionList.length; i++) &#123;</span><br><span class="line">                    <span class="keyword">let</span> question = questionList[i];</span><br><span class="line">                    <span class="keyword">let</span> answerId = randomString(<span class="number">5</span>);</span><br><span class="line">                    <span class="keyword">let</span> btnId = randomString(<span class="number">5</span>);</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="keyword">let</span> answer = question.analysis.html.replace(<span class="regexp">/&lt;.*?&gt;/g</span>, <span class="string">&quot;&quot;</span>).replace(<span class="regexp">/\d\.\s?(&amp;nbsp;)?/g</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">                        <span class="keyword">let</span> el = <span class="string">`&lt;tr class=&quot;layui-bg&quot;&gt;&lt;td&gt;&lt;b&gt;<span class="subst">$&#123;i + <span class="number">1</span>&#125;</span>.（仅供参考）&lt;/b&gt;&lt;code id=&quot;<span class="subst">$&#123;answerId&#125;</span>&quot;&gt;<span class="subst">$&#123;answer&#125;</span>&lt;/code&gt;&lt;button style=&quot;float:right;&quot; id=&quot;<span class="subst">$&#123;btnId&#125;</span>&quot;&gt;复制&lt;/button&gt;&lt;/td&gt;&lt;/tr&gt;`</span>;</span><br><span class="line">                        $(<span class="string">&quot;#content&gt;table&gt;tbody&quot;</span>).append($(el));</span><br><span class="line">                        $(<span class="string">`#<span class="subst">$&#123;btnId&#125;</span>`</span>).on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                            <span class="keyword">let</span> _answer = $(<span class="string">`#<span class="subst">$&#123;answerId&#125;</span>`</span>).text();</span><br><span class="line">                            copyMe(_answer);</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                        <span class="built_in">console</span>.error(e);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (key.includes(<span class="string">&quot;:sequence&quot;</span>)) &#123;</span><br><span class="line">                <span class="comment">// 排序题</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">let</span> question <span class="keyword">of</span> content.questions) &#123;</span><br><span class="line">                    <span class="keyword">let</span> answer = question.answer;</span><br><span class="line">                    <span class="keyword">let</span> el = <span class="string">`&lt;tr class=&quot;layui-bg&quot;&gt;&lt;td&gt;&lt;code&gt;<span class="subst">$&#123;answer&#125;</span>&lt;/code&gt;&lt;/td&gt;&lt;/tr&gt;`</span>;</span><br><span class="line">                    $(<span class="string">&quot;#content&gt;table&gt;tbody&quot;</span>).append($(el));</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">window</span>.onhashchange = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">            $(<span class="string">&quot;#content&gt;table&gt;tbody&quot;</span>).empty();</span><br><span class="line">            main();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="meta">    &#x27;use strict&#x27;</span>;</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;pjax:success&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 将 main 函数绑定到 pjax 监听器上</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;pjax success&quot;</span>);</span><br><span class="line">        main();</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;pushState&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;change pushState&#x27;</span>);</span><br><span class="line">        main();</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;replaceState&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&#x27;change replaceState&#x27;</span>);</span><br><span class="line">        main();</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">window</span>.addEventListener(<span class="string">&#x27;hashchange&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(event, <span class="string">&#x27;hashchange&#x27;</span>);</span><br><span class="line">        <span class="comment">//main();</span></span><br><span class="line">    &#125;)</span><br><span class="line">    main();</span><br><span class="line">&#125;)();</span><br></pre></td></tr></table></figure> 再点击左上角 文件-&gt;保存 ，即可正常使用U校园脚本。 <img src="/tutorial/mooc/pic4.png"> 进入U校园官网<a href="https://u.unipus.cn" class="uri">https://u.unipus.cn</a>,登录,根据浮窗的提示即可答题。<strong>选择题自动答题，填空题用鼠标点击答题框，然后直接ctrl+V粘贴即可!</strong></p>]]></content>
    
    
    <summary type="html">使用本文所述的脚本，可以自动完成慕课、U校园的答题，大大提升&lt;B&gt;学习效率&lt;/B&gt;!</summary>
    
    
    
    <category term="tutorial" scheme="https://dekrt.cn/categories/tutorial/"/>
    
    
    <category term="教程 | tutorial" scheme="https://dekrt.cn/tags/%E6%95%99%E7%A8%8B-tutorial/"/>
    
    <category term="脚本 | script" scheme="https://dekrt.cn/tags/%E8%84%9A%E6%9C%AC-script/"/>
    
  </entry>
  
  <entry>
    <title>git总结</title>
    <link href="https://dekrt.cn/note/git/"/>
    <id>https://dekrt.cn/note/git/</id>
    <published>2022-01-26T07:09:00.000Z</published>
    <updated>2022-03-10T08:15:27.396Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在前面">写在前面</h1><p>git是一种<strong>非常好用</strong>的分布式版本控制系统，操作简洁，功能强大，依托于<a href="www.github.com">github</a>等平台实现了非常强大且完善的代码管理，大大提高了工作效率。</p><p>关于学习git，网上有很多的视频与教程。但需要注意的是，git说到底是一种工具，在使用中不断学习与摸索还是我比较推崇的一种做法，<strong>亲自动手比单纯的学习要更加重要</strong>。</p><p>本文只会浅谈git和相关知识，大部分会一笔带过，<del>其实主要是给自己看的</del>。想要深入了解，还请移步<a href="https://www.liaoxuefeng.com/">廖雪峰的博客</a>或者自行查找相关资料</p><span id="more"></span><h1 id="基础命令">基础命令</h1><ul><li><strong>git中复制是<kbd>Ctrl</kbd>+<kbd>insert</kbd>，粘贴是<kbd>shift</kbd>+<kbd>insert</kbd></strong></li></ul><h2 id="绑定github">绑定Github：</h2><ol type="1"><li>生成SSH密钥：<code>$ ssh-keygen -t rsa</code></li><li>前往GitHub添加SSH密钥</li><li>利用<code>$ ssh -T git@github.com</code>检验是否成功</li><li>使用下列命令配置环境 <figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="keyword">config</span> --<span class="keyword">global</span> user<span class="variable">.name</span> <span class="string">&quot;dekrt&quot;</span></span><br><span class="line">$ git <span class="keyword">config</span> --<span class="keyword">global</span> user<span class="variable">.email</span> <span class="string">&quot;dekrt@qq.com&quot;</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="提交文件">提交文件：</h2><h3 id="通用命令">通用命令：</h3><ul><li>使用<code>$ git add &lt;file&gt;</code>命令 添加文件到暂存区<ul><li>使用<code>$ git add *</code>命令 添加全部文件</li></ul></li><li>使用<code>$ git commit -m &lt;message&gt;</code>命令提交本地修改到本地仓库<ul><li>commit：承诺、保证做某事</li><li>其中<code>&lt;message&gt;</code>代表对更新的描述</li></ul></li><li>使用<code>$ git status</code>命令 查看仓库的状态</li><li>使用<code>$ git diff</code>命令 查看修改内容<ul><li>diff -&gt; diffrence 差异 &gt;Github已经将默认的master修改为main，使用有关命令时应注意对应。</li></ul></li></ul><h3 id="从github上clone">从github上clone：</h3><ul><li>使用<code>$ git clone &lt;repo&gt;</code>命令 克隆仓库到本地</li><li>使用<code>$ git push originmaster</code>命令，将本地仓库提交到远程仓库</li></ul><h3 id="从本地新建">从本地新建：</h3><ul><li>使用<code>$ git init</code> 命令 初始化repository</li><li>使用<code>$ git remote add origin &lt;url&gt;</code>命令关联远程仓库</li><li>使用<code>$ git pull origin master</code>命令同步远程仓库和本地仓库，</li></ul><p>……未完待续</p>]]></content>
    
    
    <summary type="html">git是一种非常好用的分布式版本控制系统，操作简洁，功能强大。</summary>
    
    
    
    <category term="note" scheme="https://dekrt.cn/categories/note/"/>
    
    
    <category term="笔记 | note" scheme="https://dekrt.cn/tags/%E7%AC%94%E8%AE%B0-note/"/>
    
    <category term="git" scheme="https://dekrt.cn/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>华科军事理论线上作业答案</title>
    <link href="https://dekrt.cn/answer/military/"/>
    <id>https://dekrt.cn/answer/military/</id>
    <published>2022-01-22T03:22:17.000Z</published>
    <updated>2022-12-06T04:07:10.898Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文由dekrt整理发布，仅供参考！</p></blockquote><h1 id="第一章中国国防答案">第一章：中国国防答案</h1><p>1.西汉初期，实行征兵制，规定凡年满20岁的男丁都要登记，从23岁起，服兵役（）。</p><p>A .一年 B .两年 C .三年 D .四年</p><p>正确答案：B</p><p>2.“天下虽安，忘战必危”出自于( )。</p><p>A .《孙子兵法》 B .《孙膑兵法》 C .《战争论》 D .《司马法·仁本》</p><p>正确答案：D</p><p>3.下列哪个朝代对长城陆续加工增修并逐渐改建成最接近今天的面貌。( )</p><p>A .元朝 B .清朝 C .唐朝 D .明朝</p><p>正确答案：D</p><p>4.国防是随着( )的出现而产生的。</p><p>A .阶级 B .军队 C .国家 D .社会</p><p>正确答案：C</p><p>5.下列哪个国家的国防类型是典型的中立型国防（ ）</p><p>A .瑞士 B .韩国 C .朝鲜 D .中国</p><p>正确答案：A</p><span id="more"></span><p>6.“兵者，国之大事”是出自哪本兵书（ ）</p><p>A .《孙子兵法》 B .《汉书》 C .《兵制》 D .《孙膑兵法》</p><p>正确答案：A</p><p>7.“足食，足兵，民信”是由谁提出（ ）</p><p>A .老子 B .孔子 C .孙武 D .岳飞</p><p>正确答案：B</p><p>8.在中国东部沿海设置的卫、所等海防工程是在哪个朝代建立（ ）</p><p>A .宋朝 B .明朝 C .清朝 D .元朝</p><p>正确答案：B</p><p>9.长城修筑的历史最早可上溯到（ ）时期</p><p>A .秦朝 B .明朝 C .春秋战国 D .西周</p><p>正确答案：C</p><p>10.第二次鸦片战争爆发于（ ）</p><p>A .1840年 B .1841年 C .1856年 D .1860年</p><p>正确答案：C</p><p>11.国防建设是我国社会主义建设事业的重要组成部分，必须适应国家利益的需要，必须与经济建设协调发展，必须坚持以()为中心，必须遵循独立自主方针，必须由全国军民共同建设，必须进行全面深入改革。</p><p>A .四项基本原则 B .现代化建设 C .富国强军 D .装备化建设</p><p>正确答案：B</p><p>12.2013年，中国共产党()决定对深化国防和军队改革，构建中国特色现代军事力量体系作出了明确部署。</p><p>A .十八届一中全会 B .十八届二中全会 C .十八届三中全会 D.十八届四中全会</p><p>正确答案：C</p><p>13.我国坚持走和平发展的道路，坚定不移地奉行( )的国防政策。</p><p>A .防御性 B .攻击性 C .半攻击半防御 D .中立性</p><p>正确答案：A</p><p>14.根据宪法制定并于1997年通过的《中华人民共和国国防法》进一步明确规定：中华人民共和国的武装力量受( )领导。</p><p>A .全国人民 B .中国共产党 C .工人阶级 D .中国共产党和其他民主党派</p><p>正确答案：B</p><p>15.()，作为军委主管国防动员和后备力量建设的职能部门——军委国防动员部成立。</p><p>A .2016年1月11日 B .2016年8月1日 C .2015年1月11日 D .2015年8月1日</p><p>正确答案：A</p><p>16.国防动员的内容十分丰富，其中()是核心。</p><p>A .武装力量动员 B .国民经济动员 C .人民防空动员 D .交通运输动员</p><p>正确答案：A</p><p>17.()，是为了应对战争、突发事件和紧急状态的需要，国家有计划、有组织地将交通运输设施、设备、工具和交通运输专业技术保障力量及其相应的体制，由平时状态转入战时(急时)状态所进行的一系列活动。</p><p>A .武装力量动员 B .国民经济动员 C .人民防空动员 D .交通运输动员</p><p>正确答案：D</p><p>18.()，是国家有计划地组织各政党、各人民团体，以及工、农、商、学等社会各界，结成广泛的爱国统一战线，鼓励国内社会政治力量参与应对战争、突发事件和紧急状态所进行的一系列活动。</p><p>A .政治宣传和精神灌注 B .国内社会政治力量动员 C .外交动员 D.国民经济动员</p><p>正确答案：B</p><p>19.健全战时(急时)国防动员体制，是军队和政府的共同职责。我国《国防法》明确规定：()动员准备和动员实施工作。</p><p>A .国务院 B .中央军委 C .国防部 D .国务院和中央军委共同领导</p><p>正确答案：D</p><p>20.国防动员令是国家为了应对战争、突发事件和紧急状态的需要，由国家最高权力机关决定并依法下达的国防动员决定和国防动员实施命令，实际上是国家宣布进入战时(急时)状态的命令。我国《宪法》明确规定：()决定战争和和平的问题；()会决定战争状态的宣布，决定全国总动员或者局部动员；国家主席根据全国人民代表大会及常务委员会的决定，宣布战争状态，宣布进入紧急状态，发布动员令。</p><p>A .全国人民代表大会，全国人民代表大会</p><p>B .全国人民代表大会，全国人民代表大会常务委员</p><p>C .全国人民代表大会常务委员，全国人民代表大会常务委员</p><p>D .全国人民代表大会常务委员，全国人民代表大会</p><p>正确答案：B</p><p>21.全民国防教育日是（ ）。</p><p>A .每年9月的第三个星期五</p><p>B .每年10月的第三个星期五</p><p>C .每年9月的第三个星期六</p><p>D .每年10月的第三个星期六</p><p>正确答案：C</p><p>22.按照《兵役法》规定我国公民的合法服兵役的最高年龄限制是( )岁。</p><p>A.18 B.20 C.22 D.24</p><p>正确答案：C</p><p>23.中国人民解放军的“三化”是指（ ）、现代化和 正规化。</p><p>A .革命化 B .制度化 C .规范化 D .程序化</p><p>正确答案：A</p><p>24.第一次鸦片战争是在（ ）年爆发。</p><p>A .1840 B .1841 C .1842 D .1843</p><p>正确答案：A</p><p>25.联盟型国防可分为两种：一是一元体系联盟，一是（ ）联盟。</p><p>A .多元体系 B .二元体系 C .三元体系 D .四元体系</p><p>正确答案：A</p><p>26.《兵役法》规定，平时应征公民拒绝、逃避征集拒不改正的，在（）年内不得被录取为国家公务员、国有企业职员，不得出国或者升学。</p><p>A .1 B .2 C .3 D .4</p><p>正确答案：B<br>27.《孙子兵法》的作者是（ ）。</p><p>A .孙武 B .孙膑 C .孔子 D .孟子</p><p>正确答案：A</p><p>28.秦朝的主要武装力量体制包括京师兵、郡县兵和（ ）。</p><p>A .骑兵 B .边兵 C .单兵 D .步兵</p><p>正确答案：B</p><p>29.长城的有著名的“九镇”、“三关”，其中三关包括嘉峪关、山海关和（）。</p><p>A .玉门关 B .居庸关 C .井陉关 D .雁门关</p><p>正确答案：B</p><p>30.中国人民解放军的现役部队包括陆军、空军、海军和（ ）。</p><p>A .民兵 B .火箭军 C .通信兵 D .特种兵</p><p>正确答案：B</p><p>31.国防的基本特征包括（ ）</p><p>A .国防安全的整体性</p><p>B .国防实力的综合性</p><p>C .国防手段的多元性</p><p>D .国防建设的系统协调性.国防事业的社会性</p><p>正确答案：A,B,C,D,E</p><p>32.中国古代的国防工程包括（ ）</p><p>A .城池B .京杭大运河C .长城D .海防工程</p><p>正确答案： A,B,C,D</p><p>33.以下属于国防的地位和作用的是（ ）</p><p>A .国家安全的重要保障</p><p>B .国家经济发展的重要基础</p><p>C .国家独立自主的前提</p><p>D .国家繁荣发展的重要条件</p><p>正确答案： A,C,D</p><p>34.国防的类型有扩张型、中立型和( )</p><p>A .同盟型B .联盟型C .侵略型D .自卫型</p><p>正确答案：B,D</p><p>35.国家作为一个政治概念，应包括哪几个基本要素（ ）</p><p>A .领土B .政府C .主权D .人民 E.国防</p><p>正确答案： A,B,C,D</p><p>36.国家利益按利益的内容可分为（ ）</p><p>A .政治利益 B .文化利益 C .安全利益 D.军事利益 E.经济利益</p><p>正确答案： A,B,C,E</p><p>37.下列哪些属于非传统安全领域（ ）</p><p>A .能源危机B .环境问题C .人权问题D .军事冲突E.网络安全</p><p>正确答案： A,B,C,E<br>38.以下属于联盟型国防类型的国家是（ ）</p><p>A .日本B .瑞典C .中国D .美国E.瑞士</p><p>正确答案： A,D<br>39.下列属于国防要素内容的是( )</p><p>A .政治要素B .经济要素C .文化要素D .历史要素</p><p>正确答案： A,B,C<br>40.中国古代国防思想的局限性主要表现在（ ）</p><p>A .重防非攻B .寓兵于农C .重陆轻海D .以仁为本</p><p>正确答案： A,C<br>41.1958年7月，中央军委扩大会议通过的决议规定，中央军委是全军统帅，下设()；国防部是军委对外的名义。军委决定的事项，凡须经国务院批准，或须用行政名义下达的，由国防部签署对外发布。</p><p>A .总参谋部B .总政治部C .总后勤部D .总装备部</p><p>正确答案： A,B,C<br>42.我国维护国家安全的基本目标和任务是( )。</p><p>A.制止分裂，促进统一，防备和抵抗侵略，捍卫国家主权、领土完整和海洋权益B.维护国家发展利益，促进经济社会全面、协调、可持续发展C.保障人民群众的政治、经济、文化权益D .保持 正常社会秩序和社会稳定</p><p>正确答案： A,B,C,D<br>43.2015年12月31日，成立了()。这是党中央和中央军委着眼实现中国梦、强军梦作出的重大决策，是构建中国特色现代军事力量体系的战略举措，必将成为我军现代化建设的一个重要里程碑，载入人民军队史册。</p><p>A .陆军领导机构B .海军领导机构C .火箭军D .战略支援部队</p><p>正确答案： A,C,D<br>44.目前我国海军共有三大舰队分别是( )</p><p>A .北海舰队B .东海舰队C .渤海舰队D .南海舰队</p><p>正确答案： A,B,D<br>45.中央军委勤保障部队于2016年9月13日成立，部队组成主要包括( )。</p><p>A .武汉联勤保障基地B .郑州联勤保障基地C.无锡、桂林、西宁、沈阳、武汉五个联勤保障重心D.无锡、桂林、西宁、沈阳、郑州五个联勤保障重心</p><p>正确答案： A,D<br>46.人民防空动员，是国家为了保障人民群众的生命和财产安全而组织进行的防备敌人空袭、消除空袭后果的一系列活动。人民防空动员，在部分国家也称为民防动员。在我国，人民防空与()一起构成三位一体的国土防空体系。</p><p>A .工农业防空B .要地防空C .野战防空D .海陆防空</p><p>正确答案：B,C<br>47.交通运输动员的目的，主要是为动员输送、军队机动、物资供应、居民疏散、工厂和机关的转移搬迁等提供交通运输保障。交通运输动员的内容，主要包括()。</p><p>A .交通运输工具动员B .交通运输设施、设备和物资动员C .交通运输铁路D.交通运输人员动员</p><p>正确答案： A,B,D<br>48.国防动员令是国家发布的关于动员实施的命令，具有很强的( )。</p><p>A .政治性B .权威性C .严肃性D .时效性</p><p>正确答案： A,B,C,D<br>49.搞好人民防空动员，对于普及和加强人民防空知识，推进防空基础设施建设，组织人员和物资疏散隐蔽，加强重要军事、政治和经济目标防护，消除空袭后果，减少国家及人民群众生命财产的损失，保存战争潜力，增强国家的防御能力，具有重要意义。人民防空动员的内容，主要包括()等几个方面。</p><p>A .群众防护动员B .人防专业队伍动员C .人防工程物资技术保障动员D.人防预警保障动员</p><p>正确答案： A,B,C,D<br>50.武装力量是国家或政治集团所拥有的各种武装组织的总称。我国的武装力量主要包括()。</p><p>A .中国人民解放军B .中国人民武装警察部队C .中国民兵D .中国自卫军</p><p>正确答案： A,B,C<br>51.2016年2月，成立中国人民解放军5大战区，撤销原来的7大军区。五大战区分别是：东部战区、西部战区、南部战区，北部战区和中部战区，真正形成( )的格局。</p><p>A .军委管总B .战区主战C .军种主建D .多兵种配合</p><p>正确答案： A,B,C<br>52.中国人民解放军是中国共产党缔造和领导的人民军队，是中国武装力量的主体。人民解放军由()和( )组成。</p><p>A .现役部队B .预备役部队C .民兵D .工程兵</p><p>正确答案： A,B<br>53.国防领导体制，是国家（）国防建设和军事斗争的组织体系及相应制度，包括国防领导机构的设置、职权划分和相互关系等，是国家体制和军事组织体制的重要组成部分。</p><p>A .谋划B .决策C .指挥D .协调</p><p>正确答案： A,B,C,D<br>54.中国人民共和国武装力量，由（ ）组成。</p><p>A .中国人民解放军现役部队B .预备役部队C .中国人民武装警察部队D.民兵</p><p>正确答案： A,B,C,D<br>55.军民融合是指把国防和军队现代化建设深深融入经济社会发展体系之中，全面推进军民在（）等各个领域的融合。</p><p>A .经济B .科技C .教育D .人才</p><p>正确答案： A,B,C,D<br>56.国防法规包含（ ）等法律。</p><p>A .《国防法》B .《兵役法》C .《国防教育法》D .《国防动员法》</p><p>正确答案： A,B,C,D<br>57.公民履行兵役义务的主要形式有（ ）</p><p>A .服现役B .服预备役C .参加学生军事训练D .学习军事理论知识</p><p>正确答案： A,B,C<br>58.公民的国防权利包括（ ）</p><p>A .提出建议权B .制止和检举权C .获得补偿权D .服兵役权</p><p>正确答案： A,B,C<br>59.国防动员体制包括（ ）</p><p>A .决策体制B .协调体制C .执行体制D .激励体制</p><p>正确答案： A,B,C<br>60.国防动员的内容十分丰富，通常包括（ ）以及政治动员等几个主要方面。</p><p>A .武装力量动员B .国民经济动员C .人民防空动员D .交通运输动员</p><p>正确答案： A,B,C,D</p><h1 id="第二章-第12节答案">第二章 第12节答案</h1><p>1.增强忧患意识，做到居安思危，是我们治党治国必须始终坚持的一个重大原则。我们党要巩固执政地位，要团结带领人民坚持和发展中国特色社会主义，保证（）是头等大事。</p><p>A .改革开放 B .军事强大C .国家安全 D .经济发展</p><p>正确答案：C<br>2.国家安全工作应当坚持（ ）。</p><p>A .总体安全观 B .总体国家安全观 C .国家安全观 D .传统安全观</p><p>正确答案：B<br>3.国家安全工作应当坚持以（ ）为宗旨。</p><p>A .政治安全 B .经济安全 C .人民安全 D .社会安全</p><p>正确答案：C<br>4.国家安全工作应当坚持以( )为根本。</p><p>A .政治安全 B .经济安全 C .人民安全 D .社会安全</p><p>正确答案： A<br>5.国家安全工作应当坚持以( )为基础。</p><p>A .政治安全 B .经济安全 C .人民安全 D .社会安全</p><p>正确答案：B<br>6.坚持（）对国家安全工作的领导，建立集中统一、高效权威的国家安全领导体制。</p><p>A .人民代表大会 B .国家安全局 C .公安机关 D .中国共产党</p><p>正确答案：D<br>7.维护国家安全，应当遵守宪法和法律，坚持社会主义法治原则，尊重和保障人权，依法保护公民的（）。</p><p>A .权利和自由 B .权利和义务 C .自由和平等 D .义务和权益</p><p>正确答案： A<br>8.维护国家安全，应当与（ ）相协调。</p><p>A .经济发展 B .社会发展 C .社会文化发展 D .经济社会发展</p><p>正确答案：D<br>9.维护国家安全，应当坚持（），专门工作与群众路线相结合，充分发挥专门机关和其他有关机关维护国家安全的职能作用，广泛动员公民和组织，防范、制止和依法惩治危害国家安全的行为。</p><p>A .惩治为主、预防为辅 B .标本兼治、惩治为主 C .预防为主、标本兼治 D.预防为主、处罚结合</p><p>正确答案：C<br>10.根据《中华人民共和国国家安全法》规定，每年（）为全民国家安全教育日。</p><p>A .4月15日 B .7 月7日 C .9月18日 D .10月25日</p><p>正确答案： A<br>11.根据《中华人民共和国国家安全法》规定，公民和组织因支持、协助国家安全工作导致财产损失的，按照国家有关规定给予（）。</p><p>A .奖励 B .补偿 C .补助 D .赔偿</p><p>正确答案：B<br>12.（）是指人类社会与自然地理环境的相互关系，是长期影响国家安全的基本因素。</p><p>A .周缘 B .政缘 C .地缘 D .人缘</p><p>正确答案：C<br>13.中国有（）个邻国，是世界上邻国最多的国家，这些邻国在政治、经济、文化等方面都表现出差异很大的多样性，使中国成为世界上周边环境最复杂的国家。</p><p>A .8 B .14 C .18 D .20</p><p>正确答案：D<br>14.中美贸易摩擦不断升级，美国对中国商品额外征收高额关税，集中在（）中主要发展的高科技产业。</p><p>A .中国制造2020 B .中国制造2025 C .中国制造2030 D .中国制造2035</p><p>正确答案：B<br>15.（ ）实现香港回归祖国、（）实现澳门回归祖国，现在继续为解决台湾问题、实现祖国完全统一而奋斗。</p><p>A .1997年1月1日、1999年7月1日 B .1997年7月1日、1999年7月1日 C.1997年7月1日、1999年12月20日 D .1997年1月1日、1999年12月20日</p><p>正确答案：C 16.根据宪法，制定《中华人民共和国国家安全法》的意义（）。</p><p>A .维护国家安全B .保卫人民民主专政的政权和中国特色社会主义制度C.保护人民的根本利益D.保障改革开放和社会主义现代化建设的顺利进行.实现中华民族伟大复兴</p><p>正确答案： A,B,C,D,E<br>17.国家安全是指（）和国家其他重大利益相对处于没有危险和不受内外威胁的状态，以及保障持续安全状态的能力。</p><p>A .国家政权、主权、统一B .领土完整C .人民福祉D.经济社会可持续发展.个人</p><p>正确答案： A,B,C,D<br>18.国家安全工作应当统筹（ ）。</p><p>A .生命安全和财产安全B .内部安全和外部安全C .国土安全和国民安全D.传统安全和非传统安全.自身安全和共同安全</p><p>正确答案：B,C,D,E<br>19.维护国家安全，应当坚持（），积极同外国政府和国际组织开展安全交流合作，履行国际安全义务，促进共同安全，维护世界和平。</p><p>A .互信B .互利C .互惠D .平等.协作</p><p>正确答案： A,B,D,E<br>20.根据《中华人民共和国国家安全法》规定，中国的主权和领土完整不容侵犯和分割。维护（）是包括港澳同胞和台湾同胞在内的全中国人民的共同义务。</p><p>A .国家主权B .国家利益C .统一D .领土完整.个人权益</p><p>正确答案： A,C,D<br>21.国家防范、制止和依法惩治（ ）行为。</p><p>A .叛国B .分裂国家、煽动叛乱C .颠覆或者煽动颠覆人民民主专政政权D.窃取、泄露国家秘密.境外势力的渗透、破坏、颠覆、分裂活动</p><p>正确答案： A,B,C,D,E<br>22.国家加强边防、海防和空防建设，采取一切必要的防卫和管控措施，保卫（）安全，维护国家领土主权和海洋权益。</p><p>A .领陆B .内水C .领水D .领海.领空</p><p>正确答案： A,B,D,E<br>23.国家加强武装力量（）建设，建设与保卫国家安全和发展利益需要相适应的武装力量；</p><p>A .革命化B .军事化C .现代化D . 正规化.战略化</p><p>正确答案： A,C,D<br>24.国家在维护能源安全方面的措施（ ）。</p><p>A .合理利用和保护资源能源B .有效管控战略资源能源的开发C.加强战略资源能源储备，完善资源能源运输战略通道建设和安全保护措施D.加强国际资源能源合作.全面提升应急保障能力，保障经济社会发展所需的资源能源持续、可靠和有效供给</p><p>正确答案： A,B,C,D,E<br>25.国家在维护文化安全方面的措施（ ）。</p><p>A .坚持社会主义先进文化前进方向B .继承和弘扬中华民族优秀传统文化C.培育和践行社会主义核心价值观D.防范和抵制不良文化的影响.掌握意识形态领域主导权</p><p>正确答案： A,B,C,D,E<br>26.总体国家安全观的核心要义的关系包括（ ）。</p><p>A .既重视发展问题，又重视安全问题B .既重视外部安全，又重视内部安全C.既重视国土安全，又重视国民安全D.既重视传统安全，又重视非传统安全.既重视自身安全，又重视共同安全</p><p>正确答案： A,B,C,D,E<br>27.我国地缘环境的基本特征（ ）。</p><p>A .国土面积大B .人口众多C .地理环境差异大D.自然资源禀赋充足.自然资源禀赋不足</p><p>正确答案： A,B,C,E<br>28.当前我国所面临的政治安全风险十分复杂，“三股势力”（）活动带来巨大危害。</p><p>A .暴力恐怖势力B .民族分裂势力C .港独台独势力D.宗教分裂势力.宗教极端势力</p><p>正确答案： A,B,E<br>29.中国是世界上第一个提出"核安全观"概念的国家，中国核安全观是（ ）。</p><p>A .发展和安全并重B .权利和义务并重C .改革和开放并重D.自主和协作并重.治标和治本并重</p><p>正确答案： A,B,D,E<br>30.新兴领域的国家安全是指（ ）。</p><p>A .维护海洋安全B .维护陆地安全C .维护太空安全D.维护网络安全.维护科技安全</p><p>正确答案： A,C,D</p><h1 id="第二章-第3节答案">第二章 第3节答案</h1><p>1.国际战略形势是判断国家安全所处的国际战略环境，分析国家安全形势，（）与进行国家安全战略指导的重要依据。</p><p>A .制定国家安全战略 B .寻求国家安全措施 C .确定国际战略格局 D.分析国际战略趋势</p><p>正确答案： A<br>2.以下关于国际战略格局和国际战略形势的关系描述错误的是（ ）：</p><p>A.国际战略格局是国际战略环境的框架结构,国际战略形势是国际战略环境的动态表现B.国际战略格局制约国际战略形势变化，而国际战略形势变化又推动国际战略格局的发展C .国际战略格局是国际战略环境的基础,国际战略形势是国际战略环境的静态表现D .国际战略形势与国际战略格局之间是一种互动发展的关系</p><p>正确答案：C<br>3.当今世界 正面临百年未有之大变局。2018年以来的世界异常复杂,偶然与必然、苗头与趋势、乱局与变局交织。几大全局性、系统性、结构性矛盾集中显现, 其影响几乎无处不在并贯穿始终,给“当今世界 正在发生数百年未有大变局”之说下了注脚,也给世界未来发展走向带来很大的不确定性和嬗变性。总体呈现出的特点中不包括（）：</p><p>A .霸权国家与崛起大国的对立 B .单边主义与多边主义的碰撞 C.全球化与反全球化激荡 D .和平与发展并存</p><p>正确答案：D<br>4.习近平同志指出：“只要把握住历史发展大势，抓住历史变革时机，奋发有为，锐意进取，人类社会就能更好前进。”国际社会日益成为“你中有我、我中有你”的命运共同体，和平、发展、（）、共赢成为不可阻挡的时代潮流。</p><p>A .合作 B .共享 C .协作 D .互助</p><p>正确答案： A<br>5.以下哪一项不是国际战略形势的趋势（ ）：</p><p>A .多极化趋势不断深入发展 B .社会信息化、文化多样化持续推进 C.全球化深入发展，但存在负面影响 D .国际反恐斗争影响国际战略格局演变</p><p>正确答案：B<br>6.随着中国综合国力快速增强，作为未来多极格局中的一极，中国对世界影响是多方面的，其主要作用体现在三个方面，其中不包括（）：</p><p>A .中国是世界经济发展的中坚力量 B.中国是全球发展的推动者，是世界经济增长的重要引擎 C.中国是国际秩序的维护者 D .中国是世界和平的建设者</p><p>正确答案： A<br>7.科学认识当前世界主要国家军事力量及战略动向，对维护我国国家安全具有重要意义。对我国安全构成重大影响的世界主要军事强国，是美国及周边的俄罗斯、（）和印度。</p><p>A .加拿大 B .英国 C .德国 D .日本</p><p>正确答案：D<br>8.俄军的战略动向是（ ）：</p><p>A .确保霸权地位 B .走向政治军事大国 C .力保大国地位 D .大国崛起</p><p>正确答案：C<br>9.以下哪一项不是美国保持其在世界的霸权地位、在全球化中的主导地位的措施？（）</p><p>A .重提大国竞争激化军备竞赛 B .走精兵之路，加快改革步伐 C.积极调整太空战略形成太空霸权 D .大力加强和扩充核武器确保绝对核优势</p><p>正确答案：B<br>10.以下哪一项不是印度实现其军事战略动向的措施？（ ）</p><p>A .不断加大军费投入提升自卫队现代化水平 B.军事战略由重实战转向为重威慑 C .提升军费升级军备 D.对华军事战略从“劝阻威慑”转向“积极威慑”</p><p>正确答案： A<br>11.“当今世界正面临百年未有之大变局”，这句话是国家主席习近平在什么时候时间和场合说的？（）</p><p>A.2018年11月8日，国家主席习近平在人民大会堂会见美国前国务卿基辛格博士时指出B .2019年5月15日，国家主席习近平在亚洲文明对话开幕式上的讲话指出 C.2018年5月2日，国家主席习近平在北京大学师生座谈会上的讲话指出 D.2018年9月15日，国家主席习近平在全国教育大会上的讲话</p><p>正确答案： A<br>12.全球化是要素的流动，主要涉及三个要素：（）、物流（器物与货币），以及信息流，包括思想的传播。</p><p>A .资本 B .消费 C .人流 D .商品</p><p>正确答案：C<br>13.当前，全球范围的社会信息化进入了全面渗透、跨界融合、引领创新的新阶段，以“信息”为主要特征的技术融合和产业变革已经成为推动人类生产生活方式变革和社会进步的重要力量。当今世界的三元不包括（）：</p><p>A .自然社会 B .人类社会 C .物理世界 D .信息空间</p><p>正确答案： A<br>14.日本现役自卫队的组成不包括（ ）：</p><p>A .陆上自卫队 B .海上自卫队 C .航空自卫队 D .海岸警卫队</p><p>正确答案：D<br>15.以下哪一项不是日本实现其军事战略动向的措施？（ ）</p><p>A .以持续构建更高层级安全防卫体制谋求军事大国 B.不断加大军费投入提升自卫队现代化水平 C .积极调整太空战略形成太空霸权 D.广泛开展各种军事演习促进军事合作、加强军事同盟</p><p>正确答案：C 16.影响世界格局变化最为重要的国家间关系有（ ）</p><p>A .中美B .中俄C .美俄D .中日</p><p>正确答案： A,B,C<br>17.美国面对世界的变化, 认为自己在多边体系和国际机制中透支了、受损了,让其他国家搭了便车, 需要有选择地“破旧立新”。美国所采取的措施有：（）</p><p>A .宣布退出“伊核协议”B .宣布启动退出《中导条约》C .公开威胁退出WTOD.公开宣扬反对全球主义</p><p>正确答案： A,B,C,D<br>18.从2017年以来，发达国家反 （ ）势头继续看涨，发达国家之间在许多问题上的矛盾加剧，离心倾向加剧，加之在世界格局中对主动权和有利地位的角逐，传统发达国家不希望继续依附在美国的霸权之下，成为加剧发达国家之间矛盾的主要原因。</p><p>A .民粹主义B .民族主义C .保护主义D .资本主义</p><p>正确答案： A,B,C<br>19.国际社会日益成为“你中有我、我中有你”的命运共同体，（ ），成为不可阻挡的时代潮流。</p><p>A .和平B .发展C .合作D .共赢</p><p>正确答案： A,B,C,D<br>20. （ ）、（ ） 、（）的相对衰落和发展中国家群体崛起，推动全球战略格局向有利于多极化的方向演变。</p><p>A .美B .日C .欧D .英</p><p>正确答案： A,B,C<br>21.全球化也存在负能量的传播。全球化是要素的流动，主要涉及三个要素：（ ）、（ ） 、（ ） ，包括思想的传播。</p><p>A .人流B .物流C .信息流D .能源流</p><p>正确答案： A,B,C<br>22.“信息”带来的开放合作将使不同国家相互受益、共同繁荣，更加有力有效地促进人才、信息、技术等生产要素在全球范围自由流动，推动经济全球化朝着更加（） 、共赢的方向发展，使经济全球化的红利为世界各国人民所共享。</p><p>A .开放B .包容C .普惠D .平衡</p><p>正确答案： A,B,C,D<br>23.美军武装力量分为 （ ） 、（ ） 、（）、美国海军陆战队和美国海岸警卫队等五大军种。</p><p>A .美国陆军B .美国海军C .美国空军D .美国自卫队</p><p>正确答案： A,B,C<br>24.美国战略核力量有（ ）</p><p>A .洲际弹道导弹B .弹道导弹潜艇C .潜射弹道导弹D .战略轰炸机</p><p>正确答案： A,B,C,D<br>25.印度海岸警卫队分（ ） 三个大队。</p><p>A .西岸B .东岸C .南岸D .安达曼和尼科巴</p><p>正确答案： A,B,D<br>26.俄罗斯联邦武装力量被划分为哪些军种（ ）</p><p>A .陆军B .海军C .空军D .火箭军</p><p>正确答案： A,B,C<br>27.鉴于俄、中、朝、伊(朗)等对手的核能力及目标，美国强调必须发展“（ ）、（ ） 、（ ）”的核力量，针对对手特点分别实施量身定做的核威慑战略。</p><p>A .现代B .灵活C .科技D .弹性</p><p>正确答案： A,B,D<br>28.日本现役自卫队由 （ ） 队组成。</p><p>A .陆上自卫队B .海上自卫队C .航空自卫队D .特种军自卫队</p><p>正确答案： A,B,C<br>29.印度自2014年正式提出“东向政策”以来，莫迪政府不断渲染中国的军事威胁，加强与（ ）的战略关系，致力于建设一个“自由、开放、繁荣和包容”的印度洋，以提升印度在亚太地缘角逐中的制衡力度,应对中国在该地区日益上升的影响力。</p><p>A .美国B .日本C .澳大利亚D .中国</p><p>正确答案： A,B,C<br>30.当前，以（）为代表的新一代信息技术日新月异，新一轮科技革命和产业变革孕育兴起，人类生产生活的智能化水平大幅提升。</p><p>A .物联网B .大数据C .互联网D .人工智能</p><p>正确答案：B,C,D</p><h1 id="第三章思考题答案">第三章思考题答案</h1><p>1.我国《军事大百科全书》对军事思想的定义是:军事思想是关于战争、军队和国防的基本问题的（ ） ,是人们长期从事军事实践的经验总结和理论概括。</p><p>A .观察思考 B .总结提炼 C .理性认识 D .感性认识</p><p>正确答案：C<br>2.军事思想是军事实践的行动指南，军事思想对军事实践的指导作用体现在 （ ）。</p><p>A .为认识军事问题提供基本观点 B .为军事预测提供思想方法 C.为从事各项军事实践活动提供全局性指导 D .以上全是</p><p>正确答案：D<br>3.现代军事科学包括军事理论科学和军事技术科学两大部分,其中军事理论科学由军事思想和（） 组成,可见军事思想在军事科学体系中占有极其重要的地位.</p><p>A .军事谋略 B .军事学术 C .军事格局 D .军事哲学</p><p>正确答案：B<br>4.军事思想的内容大体可分为两个层次,一个是（ ）层次上的问题,一个是军事活动实践的基本指导原则层次上的问题.</p><p>A .军事理论 B .军事学术 C .实战经验 D .军事哲学</p><p>正确答案：D<br>5.１５和１６世纪之交，欧洲军事思想领域出现了近代化的萌芽，主要代表著作是意大利马基雅维利的（ ） 等。</p><p>A .《军事教训》 B .《战争艺术》 C .《战争指导》 D .《军事战略》</p><p>正确答案：B<br>6.拿破仑一世凭借 （ ）所造成的新的社会条件,创立了使用广大民众力量进行战争的崭新作战体系。</p><p>A .法国大革命 B .雾月政变 C .拿破仑战争 D .土伦战役</p><p>正确答案： A<br>7.马克思和恩格斯在研究哲学、政治经济学的基础上,对军事问题进行论述,共同创立了（） 主义军事理论.</p><p>A .马克思 B .恩格斯 C .共产 D .无产阶级</p><p>正确答案： A<br>8.苏联的（ ）认为,高新技术的不断发展完善,将引起军事上的深革命,对军队组织结构、指挥体制、武器系统和作战方法等产生根本性影响.他被誉为世界新军事革命的首倡者。</p><p>A .奥尔加科夫 B .沙波什尼科夫 C .戈尔什科夫 D .克雷诺夫</p><p>正确答案： A<br>9.“（ ）”的实质是利用计算机信息网络对处于各地的部队或士兵实施一体化指挥和控制,其核心是利用网络让所有作战力量实现信息共享,实时掌握战场态势,缩短决策时间,提高打击速度与精度。</p><p>A .计算机网络 B .网络中心战 C .信息战 D .电子对抗</p><p>正确答案：B<br>10.中国古代军事思想萌芽于（ ）</p><p>A .春秋战国 B .西汉 C .魏晋南北朝 D .夏商</p><p>正确答案：D<br>11.中国古代军事思想成熟于（ ）时期</p><p>A .春秋战国 B .西汉 C .魏晋南北朝 D .隋唐</p><p>正确答案： A<br>12.宋元时期军事思想的发展，最重要的体现在（ ）的发展</p><p>A .战争观 B .战略思想 C .战术思想 D .军事技术</p><p>正确答案：D<br>13.中国古代军事思想的产生、形成及发展大致可分为三个阶段，其中不包括（）</p><p>A .西周 B .春秋 C .秦汉 D .清末民初</p><p>正确答案：D<br>14.中国古代兵法中占首要位置的地位的是（ ）</p><p>A .战争观 B .战略 C .战术 D .军事技术</p><p>正确答案：B<br>15.中国古代第一形成战略思想的伟大人物是（ ）</p><p>A .孙武 B .孙膑 C .李世民 D .成吉思汗</p><p>正确答案： A<br>16.孙武是春秋末期（ ）国人</p><p>A .秦 B .齐 C .魏 D .赵</p><p>正确答案：B<br>17.《孙子兵法》现存（）篇</p><p>A .11 B .12 C .13 D .14</p><p>正确答案：C<br>18.中古古代哪本兵书被誉为古代第一兵书（ ）</p><p>A .《六韬》 B .《左传》 C .《孙子兵法》 D .《孙膑兵法》</p><p>正确答案：C<br>19.下列那句话体现了《孙子兵法》重战的思想（ ）</p><p>A .“兵者，国之大事” B .“知兵知将,民之司命,国家安危之主” C .“兵无常势”D .“争天下者,必先争人”</p><p>正确答案： A<br>20.、自中国共产党成立到（ ）前,是毛泽东军事思想的产生和形成时期</p><p>A .古田会议 B .遵义会议 C .八七会议 D .瓦窑堡会议</p><p>正确答案：B<br>21.抗日战争爆发后,毛泽东发表了 （）一书,精辟地分析了抗日战争的形势,科学地论证了战争发展的规律,指明了坚持抗战的 正确道路</p><p>A .《矛盾论》 B .《井冈山的斗争》 C .《论持久战》 D.《星星之火,可以燎原》</p><p>正确答案：C<br>22.毛泽东把（ ）作为坚持武装斗争的首要问题</p><p>A .打持久战 B .保持优良传统 C .狠抓纪律 D .建立人民军队</p><p>正确答案：D<br>23.（ ）是毛泽东军事思想的核心,是我党进行革命战争的根本指导路线。</p><p>A .军队建设的思想 B .人民战争思想 C .战争与和平的思想 D.持久战的思想</p><p>正确答案：B<br>24.毛泽东的人民战争的战略战术中指出我军的基本作战方针是 （）</p><p>A .歼灭战 B .运动战 C .速决战 D .游击战</p><p>正确答案： A<br>25.邓小平科学分析和正确判断了国际形势和我国的安全环境，提出了战争与和平的理论、建设有中国特色的现代化国防理论和现代条件下()战略的理论。</p><p>A .国家战争 B .局部战争 C .人民战争 D .侵略战争</p><p>正确答案：C<br>26.江泽民指出，中国人民解放军是（）的坚强柱石，是捍卫社会主义祖国的钢铁长城、建设中国特色社会主义的重要力量。</p><p>A .改革开放 B .人民民主专政 C .可持续发展 D .祖国统一</p><p>正确答案：B<br>27.胡锦涛指出，全面履行党和人民赋予的新世纪新阶段军队历史使命，必须坚持以毛泽东军事思想、邓小平新时期军队建设思想、江泽民国防和军队建设思想为指导，把（）作为国防和军队建设的重要指导方针。</p><p>A .科学发展观 B .三个代表 C .现代化建设 D .改革开放</p><p>正确答案： A<br>28.习近平总书记深刻指出，军事手段是实现伟大梦想的保底手段，军事斗争是进行伟大斗争的重要方面,（ ）能力是维护国家安全的战略能力</p><p>A .保障 B .创新 C .打赢 D .改革</p><p>正确答案：C<br>29.习近平强军思想明确党在新时代的强军目标是,力争到（）年基本实现国防和军队现代化,到本世纪中叶把人民军队全面建成世界一流军队</p><p>A .2020 B .2025 C .2030 D .2035</p><p>正确答案：D<br>30.习近平指出，（ ）是灵魂,决定军队建设的政治方向。</p><p>A .听党指挥 B .作风优良 C .能打胜仗 D .严明纪律</p><p>正确答案： A<br>31.习近平指出，坚持（）是中国特色社会主义的本质特征,是党和国家的重要政治优势。</p><p>A .军民融合发展 B .发展和安全兼顾 C .党对军队绝对领导 D.富国和强军统一</p><p>正确答案：C 32.军事思想通常包括（ ） 、（ ）、（ ） 、（ ） 等。</p><p>A .战争观B .军事问题认识论和方法论C .战争指导思想D.军事发展史.国防和军队建设思想</p><p>正确答案： A,B,C,E<br>33.军事思想具备以下的基本特征 （ ） 、（ ） 、（ ） 、（ ）。</p><p>A .阶级性B .时代性C .继承性D .借鉴性.通用性</p><p>正确答案： A,B,C,D<br>34.像希罗多德的 （ ） 、修昔底德的（ ） 、色诺芬的（ ） 、凯撒的（ ）等书中,都可反映出古代欧洲一些国家的军事思想。</p><p>A .历史B .伯罗奔尼撒战争史C .远征记D .高卢战记和内战记</p><p>正确答案： A,B,C,D<br>35.英国斯宾塞的“ （ ） ”“（ ） ”和德国拉采尔的“（ ）”认为,“强存弱汰”是国际生活的“自然法则”,一个“健全的国家有机体”有权通过战争扩展自己的“生存空间”.()</p><p>A .社会达尔文主义B .地缘政治论C .社会有机论D .地理环境决定论</p><p>正确答案： A,C,D<br>36.美国首先提出“（ ） ”理论和“（ ）”的战略理论.苏联提出未来战争是一场全面的火箭核大战.但是,在美苏核武器数量越来越多,英国、法国和中国都拥有核武器以后,核力量由比较悬殊到相对均势的发展变化,世界形成“（） ”、许多国家都认识到谁也不能轻易发动核战争,转而研究“ （）”等理论,将目光重新转向常规战争。</p><p>A .核武器制胜B .大规模报复C .恐怖的核平衡D .有限核威僵</p><p>正确答案： A,B,C,D<br>37.书中提出,（ ）是历史发展的一个决定性因素,海军战略的目标是保证国家获得平时和战时的海权.马汉认为,海上作战最重要的任务是（） ，而掌握制海权有赖于强大的 （ ）。</p><p>A .海权B .掌握制海权C .国家D .海军</p><p>正确答案： A,B,D<br>38.战争论是普鲁士资产阶级著名的军事理论家卡尔.冯.克劳塞维茨(１７８０－１８３１),在总结以往战争特别是拿破仑战争的基础上写成的,全书共３卷８篇１２４章,第一篇“（） ”,第二篇“（ ）”,第三篇“ （ ）”,第四篇“战斗”,第五篇“军队”,第六篇“防御”,第七篇“进度”,第八篇“战争计划”。</p><p>A .战争的起源B .论战争的性质C .论战争理论D .战略概论.战争要素</p><p>正确答案：B,C,D<br>39.《战争论》其基本的思想观点是:战争是政治的继续；战争的目的就是消灭敌人；人民战争是战争整个发酵过程的扩大和加强；战略包括（ ）、（ ）、（ ）、（ ）、（）五大要素；战略上最重要而又最简单的准则是集中兵力；战争中的攻防。</p><p>A .精神B .物质C .数学D .地理.历史.统计</p><p>正确答案： A,B,C,D,E<br>40.下列哪些是战国时期出世的兵书（ ）</p><p>A .《孙子兵法》B .《孙膑兵法》C .《司马法》D .《六韬》</p><p>正确答案： A,B,C,D<br>41.中国古代军事思想涉及下列那些方面的内容（ ）</p><p>A .战争观B .战略观C .治军思想D .作战方法与谋略</p><p>正确答案： A,B,C,D<br>42.中国古代军事思想认为，战争与（ ）相关</p><p>A .政治B .经济C .文化D .环境</p><p>正确答案： A,B<br>43.中国古代军事思想的主要特点包括（ ）</p><p>A .重视军事与政治、经济的关系B .重视发挥谋略的作用C.重视发挥主观指导作用D .重视将帅的地位和作用</p><p>正确答案： A,B,C,D<br>44.孙武认为将必有五德，五德包括（ ）</p><p>A .智B .信C .仁D .勇.严</p><p>正确答案： A,B,C,D,E<br>45.《孙子兵法》第一部分的内容有（ ）</p><p>A .《计》B .《作战》C .《谋攻》D .《九变》</p><p>正确答案： A,B,C<br>46.《孙子兵法》第二部分的内容有（ ）</p><p>A .《军争》B .《九变》C .《行军》D .《地形》</p><p>正确答案： A,B,C,D<br>47.《孙子兵法》第二部分的内容有（ ）</p><p>A .《火攻》B .《九地》C .《用间》D .《虚实》</p><p>正确答案： A,B,C,D<br>48.下列哪些属于《孙子兵法》的思想（ ）</p><p>A .重战、慎战、备战思想B .“知彼知己,百战不殆”的战争指导思想C.以谋略制胜为核心的用兵思想D .“文武兼施,恩威并用”的治军思想</p><p>正确答案： A,B,C,D<br>49.《孙子兵法》的局限性主要表现在（ ）</p><p>A .战争观方面未能区分战争的性质B .治军方面的愚兵政策C.军队补给方面的抢掠政策D .作战原则方面存有某些片面性</p><p>正确答案： A,B,C,D<br>50.毛泽东军事思想的内容体系包括（ ）</p><p>A .无产阶级的战争观和方法论B .人民军队建设理论C .人民战争思想；D.人民战争的战略战术</p><p>正确答案： A,B,C,D<br>51.经过（）,毛泽东人民军队的建军思想开始确立,并在以后的斗争实践中逐步完善,形成一整套的人民军队的建军原则</p><p>A .遵义会议B .三湾改编C .古田会议D .瓦窑堡会议</p><p>正确答案：B,C<br>52.毛泽东关于开展人民战争的战略战术方针是()</p><p>A .战略上藐视敌人B .战术上重视敌人C .政治上瓦解敌人D.战场上消灭敌人</p><p>正确答案： A,B<br>53.毛泽东军事思想的产生和形成时期,毛泽东撰写了（）等重要军事著作,这标志着毛泽东军事思想的形成。</p><p>A .《中国的红色政权为什么能够存在》B .《井冈山的斗争》C.《星星之火,可以燎原》D .《论持久战》E.《关于纠 正党内错误思想》</p><p>正确答案： A,B,C,E<br>54.邓小平科学分析和 正确判断了国际形势和我国的安全环境,提出了（ ）</p><p>A .建立人民军队B .战争与和平的理论C .建设有中国特色的现代化国防理论D.现代条件下人民战争战略</p><p>正确答案：B,C,D<br>55.江泽民认为，和平时期进一步加强国防和军队建设，对（）具有深远的战略意义，号召全党和全国人民要积极关心和支持国防和军队建设。</p><p>A .改革开放B .维护国家的长治久安C .保证社会主义现代化建设的顺利进行D.祖国统一</p><p>正确答案：B,C<br>56.胡锦涛国防和军队建设思想的科学含义包括（ ）</p><p>A .是巩固党执政地位重要的力量保证B.是国家发展战略机遇期坚强的安全保障C .是维护国家利益有力的战略支撑D.人民民主专政的基本保障</p><p>正确答案： A,B,C<br>57.党在新时代的强军目标是建设一支（ ）的人民军队</p><p>A .听党指挥B .能打胜仗C .作风优良D .保障有力</p><p>正确答案： A,B,C<br>58.习近平指出，明确军民融合发展是兴国之举、强军之策,必须形成（）军民融合深度发展格局,构建一体化的国家战略体系和能力. A .新技术B.全要素C .多领域D .高效益</p><p>正确答案：B,C,D<br>59.习近平强军思想的重要意义（ ）</p><p>A .是确保军队建设 正确方向的迫切需求B.是实现党在新形势下的强军目标的迫切需求C.是深化国防和军队改革的迫切需求D .是汇聚强军兴军强大能量的迫切需求</p><p>正确答案： A,B,C,D<br>60.党的十八大以来，以习近平同志为总书记的党中央和中央军委着眼于坚持和发展中国特色的社会主义、实现中华民族伟大复兴中国梦，围绕强军兴军提出了一系列重大战略思想、理论观点、决策部署，深刻阐述了国防和军队建设的（）的重大问题。</p><p>A .根本性B .全局性C .方向性D .整体性</p><p>正确答案： A,B,C</p><h1 id="第四章-现代战争答案">第四章 现代战争答案</h1><p>1.战争是阶级间、民族间、国家间、政治集团间矛盾斗争的( )形式,以（）反映政治实质，经济是战争的物质基础,（ ）决定战争的方式,（）是战争的基本原则。</p><p>A .最低 武装斗争 武器装备 消灭敌人 B .最高 暴力手段科学技术的发展水平 消灭敌人 C .最高 暴力手段 科学技术的发展水平保存自己和消灭敌人 D .最低 武装斗争 科学技术的发展水平保存自己和消灭敌人</p><p>正确答案：C<br>2.全世界从奴隶社会早期到２０世纪８０年代,在有文字记载的３５００多年的时间里,共发生过（ ）次战争. A .140余 B.1400余 C .14000余 D .140000余</p><p>正确答案：C<br>3.以下哪种说法反映了历史唯物主义者对战争的看法？（ ）</p><p>A .战争是自然和永恒的现象,战争的根源在于自然环境和人类的生物本性。 B.为战争是上帝对人的惩罚,并用超自然力量解释战争起因。 C.战争是由优劣民族之间差别引起的。 D.战争是社会生产力和生产关系发展到一定阶段的产物,是私有制产生以后,随着阶级和国家的出现,有了压迫和反压迫时才出现的。</p><p>正确答案：D<br>4.总结各种战争的具体起因,可以得出战争的一般起因是（ ）</p><p>A .争夺权力 B .争夺物资 C.人类社会的生产关系不适应生产力而导致的利益对抗 D .自然灾难</p><p>正确答案：C<br>5.（ ）是现代战争的根源。</p><p>A .领土争端 B .帝国主义、霸权主义 C .意识形态冲突 D .宗教冲突</p><p>正确答案：B<br>6.( )决定战争的性质,( )是战争的物质基础,()是直接决定战争胜负的因素。</p><p>A .政治 经济 军事 B .政治 经济 自然环境 C .军事 经济 政治 D .经济军事 政治</p><p>正确答案： A<br>7.任何战争说到底,都受人和物这两个因素的制约，但战争胜负的决定因素是（）。</p><p>A .人 B .物</p><p>正确答案： A<br>8.传统战争体现着鲜明的（ ）的特点。</p><p>A .暴力主导 B .信息主导 C .舆论主导 D .贸易主导</p><p>正确答案： A<br>9.与以往那种通过彻底摧毁对方抵抗力量或意志赢得战争胜利的零和观念不同，现代战争更加体现（）性,通过（ ）的打击行动,达成营造态势和有效控局的目的。</p><p>A .有限，有限 B .局部，局部 C .快速，快速 D .有效，有效</p><p>正确答案： A<br>10.现代战争绝非单纯的（ ）,而是在（ ）的基础上，以（）为主,在政治、经济、科技、外交、文化等多种手段配合下进行的整体较量。</p><p>A .武力较量，综合国力，军事手段 B .武力较量，军事实力，军事手段 C.暴力较量，科技实力，政治斗争 D .暴力较量，科技实力，军事手段</p><p>正确答案： A<br>11.战争的（）性,在作战中的主要表现是以小博大、撬动全局,力争用战术行动达成战略战役目的。</p><p>A .目的有限 B .规模可控 C .空间有限 D .行动联合</p><p>正确答案：B<br>12.“兵无常势，水无常形。”说的是（ ）</p><p>A .作战样式的多样性 B .作战环境的多变性 C .作战因素的多元性 D.作战目的的有限性</p><p>正确答案： A<br>13.拿破仑指出,运动是战争的灵魂.美国前国防部长科恩也指出,以往的作战哲学是大吃小,今天是快吃慢.这些都精辟阐述了（）在战争制胜中的重要性。</p><p>A .力量 B .科技 C .速度 D .人数</p><p>正确答案：C<br>14.战争活动在不同的历史时期有着不同的表现，从战争实践活动可分为（ ）</p><p>A .冷兵器时代战争、热兵器时代战争、机械化时代战争和信息化时代战争 B.中国古代战争和西方现代战争 C .局部战争和世界大战 D.侵略战争和自卫战争</p><p>正确答案： A<br>15.马克思、恩格斯的军事著作,运用辩证唯物主义和历史唯物主义的观点分析战争,揭示战争的普遍规律,认为“到目前为止的一切社会的历史都是（）的历史,战争的本质不是别的,而是（）的经济、政治制度的直接产物,是阶级斗争的最高形式,即（）尖锐到一定程度而进行的暴力斗争;一切历史冲突都根源于生产力和生产关系之间的矛盾”</p><p>A .阶段斗争，阶级社会，阶级斗争，阶级矛盾 B.阶级斗争，人类社会，阶级斗争，民族矛盾 C.阶级斗争，人类社会，阶级斗争，阶级矛盾 D.阶级斗争，人类社会，阶级斗争，社会矛盾</p><p>正确答案： A<br>16.战争是在（ ）社会后期出现的.</p><p>A .奴隶 B .原始 C .封建 D .资本主义</p><p>正确答案：B<br>17.自（ ）以来,世界军事领域兴起了一场新的深刻革命,被称 之为“新军事革命”.</p><p>A .２０世纪60年代末70年代初 B .２０世纪70年代末80年代初 C.２０世纪80年代末90年代初 D .２０世纪90年代末２１世纪初</p><p>正确答案：C<br>18.2003年的伊拉克战争中，美军运用了（ ）颗侦察卫星,（）多架各型侦察机,能够（）小时不间断地获取实时的战场态势图像和情报,实现了战场情况的单向透明。</p><p>A .9 ， 7 ， 12 B .9 ， 7， 24 C .90， 70 ， 12 D .90， 70， 24</p><p>正确答案：D<br>19.伊拉克战争中,美军共发射巡航导弹约（ ）枚,总投弹量约（）多枚,其中精确制导弹药约占总弹药量的（）,除大量使用战斧式巡航导弹、联合直接攻击弹药外,还使用了高能微波炸弹等精确制导武器,起到了事半功倍的效果.</p><p>A .80 ， 200， 50% B .800 ， 2000 ， 50% C .800 ， 2000， 70% D.800， 20000， 70%</p><p>正确答案：D<br>20.在军队信息化装备方面，哪个国家现在走在最前面（ ）</p><p>A .美国 B .俄国 C .中国 D .德国</p><p>正确答案： A<br>21.新军事技术的崛起经历了四个阶段，第一个阶段是（ ）</p><p>A .从20世纪60年代初到70年代末 B .从第二次世界大战到20世纪50年代末 C.从20世纪90年代初至今 D .从20世纪80年代初到80年代末</p><p>正确答案：B<br>22.机械化战争以物质力量为主导要素。二战期间，军用飞机的生产多达（）余万架，航空母舰多达（ ）余艘，潜艇多达（ ）余艘。</p><p>A .80， 140， 1500 B .70 ， 140 ， 1500 C .70， 240， 1500 D .70 ，140， 2500</p><p>正确答案：B<br>23.在信息时代，战争可以用公式（ ）来认知。</p><p>A .战争=综合强制+流血的强制+不流血的强制 B .战争=暴力=流血的交战 C.战争=暴力=综合强制 D .战争=综合强制+流血的强制</p><p>正确答案： A<br>24.伊拉克战争历史43天，大致可分为三个阶段。第一个阶段是（ ）</p><p>A .“斩首行动” B .“震慑行动” C .“围剿行动” D .“和平计划”</p><p>正确答案： A<br>25.在整个科索沃战争期间，北约军队电子战飞机使用量占比（ ）以上。</p><p>A .30% B .40% C .50% D .60%</p><p>正确答案：B<br>26.碳纤维石墨炸弹被首次应用于哪次战争中（ ）</p><p>A .科索沃战争 B .阿富汗战争 C .利比亚战争 D .伊拉克战争</p><p>正确答案： A<br>27.1990年8月2日凌晨，伊拉克军队动用（ ）个师，总兵力（）余万人，在空、海军的配合下，突然大举入侵科威特，仅用（）余个小时就吞并了号称“海湾明珠”的科威特。</p><p>A .24， 10， 10 B .14， 10， 10 C .14， 10， 20 D .14， 20， 10</p><p>正确答案：B<br>28.计算机控制信息系统，将陆、海、空、天、电多维空间的行动凝聚为一体，在“沙漠风暴”行动中，多国部队每天出动飞机（）多架次，从不同的基地起飞、袭击不同的目标，这些都需要强大的战场自动化控制系统。</p><p>A .20 B .200 C .2000 D .20000</p><p>正确答案：C<br>29.什么时候开始出现就地征用与基地保障相结合的部队补给方式（ ）</p><p>A .16至17世纪 B .18世纪后期至19世纪初期 C .19世纪后半期至20世纪初 D.20世纪初至20世纪中叶</p><p>正确答案：B<br>30.从冷兵器战争演进到机械化战争的军事革命进程持续了近（ ）余年</p><p>A .200 B .300 C .400 D .500</p><p>正确答案：B 31.以下哪些战争属于 正义战争（ ）</p><p>A .自卫战争B .为保卫祖国和平而进行的战争C .保卫国家主权和领土完整D.为了自由和尊严而进行的战争</p><p>正确答案： A,B,C,D<br>32.以下哪些是非 正义战争（ ）、</p><p>A .侵略战争B .征服战争C .为了压迫和掠夺而进行的战争</p><p>正确答案： A,B,C<br>33.任何战争都是为了达到既定目的而进行的,具体表现为（ ）</p><p>A .战争的军事目的B .战争的政治目C .战争的经济目的. 正确答案：A,B,C<br>34.战争的本质特点有哪些（ ）</p><p>A .战争的政治性B .战争的目的有限性C .战场空间的全域性D.战争实施的整体性.战争规模的可控性、作战方式的多样性.作战行动的联合性、战争制胜的速决性</p><p>正确答案： A,B,C,D,E,F<br>35.现代战争中作战力量联合的深度和广度也得到了新的发展，表现在以下那些方面（）</p><p>A .联合一体化加强B .诸军种联合向跨领域联合发展C.由战略战役层次联合向战术层次联合发展</p><p>正确答案： A,B,C<br>36.以下哪些描述阐述了速度在战争制胜中的重要性（ ）</p><p>A .“兵贵神速”B .运动是战争的灵魂C .快鱼吃慢鱼D .大鱼吃小鱼</p><p>正确答案： A,B,C<br>37.新军事变革包含哪些要素（ ）</p><p>A .新军事技术B .新组织体制C .新军事理论D .新军事管理. 正确答案：A,B,C,D<br>38.新军事革命主要呈现出以下哪些特点（ ）</p><p>A .武器装备高科技化B .编制体制精干化C .指挥控制自动化D.作战空间多维化.作战样式体系化</p><p>正确答案： A,B,C,D,E<br>39.新军事变革的只要内容是（ ）</p><p>A .创新军事技术B .创新军队的体制编制C .创新作战理论D.创新军事管理.战争形态从机械化向信息化转变</p><p>正确答案： A,B,C,D,E<br>40.军事高技术建立在高技术的基础之上,与一般技术相比,有八哪些特点（ ）</p><p>A .高智力B .高投资C .高竞争D.高风险.高效益、高速度.高渗透、高保密</p><p>正确答案： A,B,C,D,E,F<br>41.随着军事高技术的发展及其在军事领域的广泛应用,已经对作战行动产生了巨大影响.这种影响概括起来就是（）</p><p>A .侦察立体化B .打击精确化C .反应高速化D .防护综合化.控制智能化</p><p>正确答案： A,B,C,D,E<br>42.当前，世界各主要国家都在努力推进新一轮军事改革，世界新军事革命深入发展，其基本内涵是()</p><p>A .体制编制的联合化、小型化、自主化趋势更加明显;B.武器装备呈现出向数字化、精确化、隐形化、无人化的发展趋势;C.联合作战形态向 “四非”(非接触、非线性、非对称和非 正规)和 “三无”(无形、无声、无人)作战方向发展;D.军队指挥形态更加扁平化、自动化、网络化、无缝化,一体化联合作战指挥体系逐步形成;.现代国防管理体制不断完善</p><p>正确答案： A,B,C,D,E<br>43.新军事变革对于一个国家、一个民族既是机遇，又是挑战。党的十九大报告明确提出，要“适应世界新军事革命发展趋势和国家安全需求，提高建设质量和效益，确保到2020年基本实现机械化，信息化建设取得重大进展，战略能力有大的提升。同国家现代化进程相一致，全面推进（），力争到2035年基本实现国防和军队现代化，到本世纪中叶把人民军队全面建成世界一流军队。”</p><p>A .军事理论现代化B .军队组织形态现代化C .军事人员现代化D.武器装备现代化</p><p>正确答案： A,B,C,D<br>44.机械化战争的基本特征包括（ ）</p><p>A .机械化战争以物质力量为主导要素B.机械化战争的作战指挥控制是金字塔式C.机械化战争的作战效能是武器系统之间的对抗D.机械化战争的作战目的在于消灭对方的有生力量</p><p>正确答案： A,B,C,D<br>45.美军“太空篱笆”建成后，可探测和跟踪20万个直径大于2厘米的空间目标。其主要做法包括：（）</p><p>A .推动高超音速武器进入作战体系B.加快信息“网伞”建设，打造全维一体态势感知体系C.抢占新型作战空间，拓展态势感知的范围与精度D.提高导弹预警探测能力，提升态势感知威慑能力</p><p>正确答案：B,C,D<br>46.在未来信息化战争时代，战争的表现形式有了许多拓展，主要包括（ ）</p><p>A .战争暴力性减弱B .作战指挥控制更加扁平C .战争层次更加模糊D.战争主体多元化</p><p>正确答案： A,C,D<br>47.今后军事力量合成的基本趋势是战斗单元的（ ）</p><p>A .多能化B .复合化C .一体化D .精干化</p><p>正确答案： A,B,C,D<br>48.世界各主要国家十分重视国防改革，积极转变国防管理方式，具体表现包括（）</p><p>A .提高战略规划水平B .提高国防投入效益C .提高科技创新能力D.提高军队职业化水平</p><p>正确答案： A,B,C,D<br>49.作战空间是传统的战场概念的眼神。美军将三域，包括（ ）</p><p>A .物理域B .信息域C .认知域D .心理域</p><p>正确答案： A,B,C<br>50.以下哪些战争属于信息化战争的经典战例（ ）</p><p>A .海湾战争B .科索沃战争C .阿富汗战争D.伊拉克战争.利比亚战争.第二次世界大战</p><p>正确答案： A,B,C,D,E<br>51.在未来信息化战争中，伴随着新军事革命的步伐，军队的发展趋势是（ ）</p><p>A .军队规模将加速小型化B .军队信息系统构成将高度一体化C.军队指挥与作战手段将高度智能化D .军队装备将加速机械化</p><p>正确答案： A,B,C<br>52.从高技术向军事领域自然延伸的角度，新军事技术可分为哪些领域（ ）</p><p>A .军用信息技术B .军事航天技术C .军事海洋开发技术D.军用生物技术.军用新材料技术.军用新能源技术、军用先进防御技术</p><p>正确答案： A,B,C,D,E,F<br>53.以下哪些是我国依靠自己力量在新军事领域取得的重大成就（ ）</p><p>A .核武器和战略导弹试验成功B .人造地球卫星上天C.核潜艇下水和航空母舰建成D .牛膜岛素人工合成.嫦娥奔月.空间站建设</p><p>正确答案： A,B,C,D,E,F<br>54.新军事变革使战争形态从机械化向信息化转变，主要体现为（ ）</p><p>A .战场空间日益扩展B .战争节奏加快、持续时间缩短C.战略、战役、战术行动融为一体D .制信息权成为战场主动权的焦点</p><p>正确答案： A,B,C,D<br>55.世界新军事变革深入发展具有全面性。世界主要国家军事改革和军事转型不仅涉及信息化军事技术形态、联合化组织形态和高效化管理形态，而且还包括（）等领域。</p><p>A .军事理论形态B .作战形态C .保障形态D .教育形态</p><p>正确答案： A,B,C,D<br>56.世界新军事变革深入发展，军队指挥形态将更加（），一体化联合作战指挥体系逐步形成。</p><p>A .扁平化B .自动化C .网络化D .无缝化</p><p>正确答案： A,B,C,D<br>57.世界新军事变革深入发展，武器装备呈现出向（ ）的发展趋势。</p><p>A .数字化B .精确化C .隐形化D .无人化</p><p>正确答案： A,B,C,D<br>58.世界新军事变革已进入深入发展的阶段。俄军“新面貌”改革进入调整完善阶段，力求实现（）的建军方针。</p><p>A .精干高效B .机动灵活C .装备精良D .训练有素</p><p>正确答案： A,B,C,D<br>59.机械化战争时期，由于工业革命带来的新军事革命，出现了新的机械化战争理论。下列哪些属于典型的机械化战争理论（）</p><p>A .杜黑的“空军制胜论”B .马汉的“海军制胜论”C.英国军事家富勒、德国的将军古德里安提出的 “坦克制胜论”D.戴高乐提出的“职业化军队"理论.德国军事家鲁登道夫提出“总体战”理论</p><p>正确答案： A,B,C,D,E<br>60.以下哪些特征属于联合作战形态的“四非”（ ）</p><p>A .非接触B .非线性C .非对称D .非 正规</p><p>正确答案： A,B,C,D</p><h1 id="第五章习题答案">第五章习题答案：</h1><p>1.信息化弹药也称精确制导弹药，是指依靠自身动力装置推进，能够获取和利用目标所提供的位置信息，并由制导系统控制飞行路线和弹道，以准确攻击目标直接命中概率通常大于()的弹药。</p><p>A .0.3 B .0.4 C .0.5 D .0.6</p><p>正确答案：C<br>2.新概念武器是指在工作原理、破坏机理和作战运用方式上与传统武器有明显区别，能够大幅度（）或形成新型军事能力的高技术武器载体。</p><p>A .提高作战效能 B .提高作战效费比 C .提高作战能力 D .减少战争消耗</p><p>正确答案：C<br>3.据日本长崎大学“核武器废除研究中心”的研究报告称，截至2018年6月，世界9个国家持有约（）枚核弹头。</p><p>A .12350 B .14450 C .16600 D .20000</p><p>正确答案：B<br>4.新概念武器是指在工作原理、破坏机理和作战运用方式上与传统武器有明显区别，能够大幅度（）或形成新型军事能力的高技术武器载体。</p><p>A .提高作战效费比 B .提高作战效率 C .增强杀伤效果 D .增强杀伤机理</p><p>正确答案： A<br>5.陆军信息化作战平台，是指陆军在遂行以陆上为主的作战和保障任务时，使用的信息化武器装备体系中具有运载功能并可作为（）的载体部分，如各类军用车辆、坦克、步兵战车等除火器之外的部分。</p><p>A .机械依托 B .火器依托 C .动力依托 D .信息依托</p><p>正确答案：B<br>6.海军是遂行海上作战任务的战略军种，海军作战平台在占地球表面积（）的海洋上独具制海的战略优势。</p><p>A .0.53 B .0.6 C .0.71 D .0.82</p><p>正确答案：C<br>7.海军信息化作战平台，是海军在遂行以海上为主的作战和保障任务时，使用的信息化武器装备体系中具有运载功能，并可作为（）地载体部分。</p><p>A .机械依托 B .火器依托 C .动力依托 D .信息依托</p><p>正确答案：B<br>8.空军信息化作战平台，是空军在遂行以空中为主的作战和保障任务时，使用的信息化武器装备体系中具有运载功能，并可作为（）地载体部分。</p><p>A .机械依托 B .火器依托 C .动力依托 D .信息依托</p><p>正确答案：B<br>9.预警探测系统是指利用各种探测和监视手段，对各种军事威胁目标进行发现、识别、跟踪或监视，为防卫或反击作战提供（）的专用信息系统。</p><p>A .情报侦察 B .情报探测 C .情报收集 D .情报保障</p><p>正确答案：D<br>10.我国北斗卫星导航系统，截止2019年11月6日，共成功发射了（）北斗导航卫星,标志着北斗三号系统3颗倾斜地球同步轨道卫星全部发射完毕。</p><p>A .第41颗 B .第43颗 C .第49颗 D .第50颗</p><p>正确答案：C<br>11.精确制导武器，是指采用精确制导技术，直接命中概率在（）以上的武器，精确制导技术是在复杂的战场环境中，利用目标的特征、信号、发现、识别和跟踪目标，并将武器直接导引至实施有效打击的武器技术。</p><p>A .0.4 B .0.5 C .0.8 D .1</p><p>正确答案：B<br>12.核武器是利用核反应瞬间（ ）起杀伤破坏作用的武器。</p><p>A .释放出的巨大能量 B .释放出的巨大辐射 C .产生的巨大爆炸 D.产生的强烈闪光</p><p>正确答案： A<br>13.光辐射（又称热辐射）是爆炸后（）时间内的闪光及几千万摄氏度以上的高温火球辐射出来的强光和热，其杀伤破坏因素包括“烧”、“爆“，光辐射直接照射无隐蔽的人员会造成烧伤。</p><p>A .1秒至10秒 B .10秒至20秒 C .1分钟至10分钟 D .10分钟至20分钟</p><p>正确答案： A<br>14.冲击波是核爆炸时（），高温高压火球猛烈膨胀压缩周围空气而形成的高速高温高压气浪，它对人员、物体能够造成挤压、抛掷作用，挤压作用造成严重内伤，抛掷作用造成外伤，冲击波可造成建筑物倒塌，砖瓦抛掷造成人员间接伤害及堵塞交通。</p><p>A .几秒种内 B .几十秒种内 C .几分钟种内 D .几十分钟种内</p><p>正确答案：B<br>15.核电磁脉冲是核爆炸瞬间产生的一种（），其作用半径可达几千千米，对人员没有直接的杀伤力作用，但能消除计算机上存储的信息，使自动控制系统失灵，家用电器受到干扰和破坏。</p><p>A .强电流 B .强脉冲 C .强电磁波 D .强闪光</p><p>正确答案：C<br>16.生物武器，是以（）杀伤敌方有生力量、毁坏动植物的各种武器和器材的总称。由生物战剂、生物弹药及运载系统等组成，生物战是使用生物武器伤害对方人员、动植物以至造成大面积杀伤的一种战争手段。</p><p>A .生物毒性 B .生物弹药 C .运载系统 D .生物战剂</p><p>正确答案：D<br>17.次声波武器是一种能发射( )以下低频声波即次声波的大功率武器装置。</p><p>A .10赫兹 B .20赫兹 C .25赫兹 D .30赫兹</p><p>正确答案：C<br>18.基因武器，也被称作遗传工程武器或DNA武器，它运用遗传工程技术，用类似工程的办法，按需要重组基因，在一些致病细菌或病毒中()能抵抗普通疫苗或药物的基因，或者在一些本来不会致病的微生物体内接入致病基因而制造成生物武器。</p><p>A .产生 B .“植入” C .转化 D .接入</p><p>正确答案：B<br>19.失能性毒剂是一类暂时使人的思维和运动机能发生障碍从而（）的化学毒剂。</p><p>A .丧失战斗力 B .丧失意志 C .丧失思维 D .机能坏死</p><p>正确答案： A<br>20.动能武器是指利用发射高超速弹头的动能直接撞毁目标的武器。所谓高超速，通常指具备（）以上的音速（331.36米/秒）的速度。</p><p>A .2倍 B .5倍 C .6倍 D .10倍</p><p>正确答案：B 21.信息化武器装备的特点是（ ）。</p><p>A .智能化 B .网络化C .一体化D .数字化</p><p>正确答案： A,B,C<br>22.战争历来会造成巨大的破坏和消耗，现代战争更是如此。造成未来战争破坏和消耗巨大的主要原因是（）。</p><p>A .高技术杀伤破坏力大B .高精度武器命中率极高C .信息化武器造价昂贵D.作战物资消耗巨大</p><p>正确答案： A,B,C,D<br>23.一些发达国家信息化装备科技含量与装备性能不断提高，趋于（），代表了信息化装备的发展方向。</p><p>A .隐形化 B .通用化C .无人化D .系统化</p><p>正确答案： A,B,C<br>24.信息化装备按照使用性能划分（ ）</p><p>A .信息化装备B .信息化弹药C .信息化作战平台D.C4ISR.单兵数字化装备</p><p>正确答案： A,B,C,D,E<br>25.军信息化作战平台有多种分类。按照功能用途，可分为（ ）。</p><p>A .信息作战平台B .信息保障平台C .指挥控制平台D .自动化平台</p><p>正确答案： A,B,C<br>26.陆军信息化作战平台的发展趋势（ ）</p><p>A .增强打击能力 B .提高机动能力C .提高生存能力D.加强信息能力.E．完善自主能力</p><p>正确答案： A,B,C,D,E<br>27.海战信息化作战平台的分类（ ）</p><p>A .水面舰艇 B .潜艇C .舰载机 D .航空母舰. 正确答案： A,B,C,D<br>28.海军信息化作战平台的发展趋势（ ）。</p><p>A .提高网络化程度和联合作战平台B .增强对地精确打击和常规威慑能力C.增强经济可承受性和多功能化D.自动化、智能化和无人化.隐身化和高防护能力</p><p>正确答案： A,B,C,D,E<br>29.空军信息化作战平台，按照不同标准有不同分类。按照载体结构分为（）。</p><p>A .飞行B .飞艇和气球C .高超音速飞行器D .军用飞机</p><p>正确答案：B,C,D<br>30.空军信息化作战平台的发展趋势（ ）。</p><p>A .隐身化、高机动、多用途 B .智能化、无人化C .电子对抗能力D.高超声速军用飞机</p><p>正确答案： A,B,C,D<br>31.指挥控制系统的分类通常分为（ ）。</p><p>A .战略指挥信息系统 B .战役指挥信息系统C .战术指挥信息系统D.作战平台单兵信息系统</p><p>正确答案： A,B,C,D<br>32.预警探测系统按照战场空间分类，可以分为 ( )。</p><p>A .天基预警系统 B .空中预警系统C .海上预警系统D .陆基预警系统</p><p>正确答案： A,B,C,D<br>33.预警探测系统的发展趋势有（ ）。</p><p>A .发展机载与太空监视、多功能相控阵雷达预警探测系统B.对抗隐身目标的预警探测系统C .电子信息系统D .向多功能综合化发展</p><p>正确答案： A,B,D<br>34.综合电子信息系统的发展趋势有（ ）</p><p>A .加快网络一体化建设步伐B .重视提高侦察预警能力C.加快与作战系统相融合D .增强系统攻防作战能力</p><p>正确答案： A,B,C,D<br>35.精确制导武器的制导方式按照所采用的物理量特性分类，其制导方式有（）。</p><p>A .无线电制导 B .红外制导C .激光制导D .雷达制导.电视制导</p><p>正确答案： A,B,C,D,E<br>36.精确制导武器的制导方式按照制导系统的控制导引技术的差异，其制导方式有（）。</p><p>A .自主式制导 B .遥控制导C .寻的制导D .复合制导</p><p>正确答案： A,B,C,D<br>37.寻的制导的制导方式有（ ）。</p><p>A .主动寻的制导 B .半主动寻的制导C .被动寻的制导D .复合制导</p><p>正确答案： A,B,C<br>38.精确制导武器按导弹射程，可分为（ ）。</p><p>A .近程导弹（射程在1000公里以内）B.中程导弹（射程在1000-3000公里以内）C.远程导弹（射程在3000-8000公里以内）D.洲际导弹（射程在8000公里以上）</p><p>正确答案： A,B,C,D<br>39.精确制导弹药也称灵巧弹药，根据不同的作用原理可分为（ ）。</p><p>A .末制导弹药 B .末敏弹药C .炸弹类D .地雷</p><p>正确答案： A,B<br>40.核武器爆炸后，能产生五种杀伤因素（ ）。</p><p>A .光辐射榜 B .冲击波C .早期核辐射 D .核电磁脉冲.放射性沾染</p><p>正确答案： A,B,C,D,E<br>41.生物武器的特点（ ）。</p><p>A .致病力强 B .传染性大C .污染面积大 D .有潜伏期</p><p>正确答案： A,B,C,D<br>42.生物武器的新种类有哪些（ ）。</p><p>A .基因武器 B .纳米生物武器C .机器人 D .生物机器</p><p>正确答案： A,B<br>43.生物战剂的种类有（ ）。</p><p>A .细菌类 B .病毒类C .立克次体类 D .牛膜岛素人工合成.依原体类</p><p>正确答案： A,B,C,D,E<br>44.化学武器按分散方式可分为（ ）基本类型。</p><p>A .布洒型B .热分散型C .爆炸分散型 D .燃烧型</p><p>正确答案： A,B,C<br>45.毒剂的种类有（ ）。</p><p>A .神经性毒剂 B .烂性毒剂C .全身中毒性毒剂 D.失能性毒剂.刺激性毒剂.皇息性毒剂</p><p>正确答案： A,B,C,D,E,F<br>46.化学武器与常用武器比较，毒剂的特点有（ ）。</p><p>A .毒性作用强 B .中毒途径多C .持续时间长 D .杀伤范围广</p><p>正确答案： A,B,C,D<br>47.新概念武器的基本特征通常表现为（ ）。</p><p>A .创新性 B .高效性C .探索性 D .竞争性</p><p>正确答案： A,B,C<br>48.新概念武器的种类有（ ）。</p><p>A .定能武器、动能武器 B .军用机器人C .网络战武器 D.基因武器.次声波武器 .幻觉武器</p><p>正确答案： A,B,C,D,E,F<br>49.动能武器主要包括（ ）。</p><p>A .电磁炮 B .反卫星、反导弹动能拦截弹C .群射火箭与反卫星卫星 D.激光器</p><p>正确答案： A,B,C<br>50.电磁炮，是一种利用电磁力沿导轨发射炮弹的武器，电磁炮与普通火炮或其他常规动能武器相比，具有很多独特的优势（）。</p><p>A .射速快，动能大，射击精度高，射程远B .射击隐蔽性好C .射程可调D.威力大</p><p>正确答案： A,B,C</p>]]></content>
    
    
    <summary type="html">本文由dekrt整理发布，仅供参考！</summary>
    
    
    
    <category term="answer" scheme="https://dekrt.cn/categories/answer/"/>
    
    
    <category term="答案 | answer" scheme="https://dekrt.cn/tags/%E7%AD%94%E6%A1%88-answer/"/>
    
  </entry>
  
  <entry>
    <title>C语言实验报告</title>
    <link href="https://dekrt.cn/report/experiment/"/>
    <id>https://dekrt.cn/report/experiment/</id>
    <published>2022-01-20T16:00:00.000Z</published>
    <updated>2022-10-26T14:19:58.805Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/report/experiment/cover.png"></p><blockquote><p>由于使用pandoc进行 word to Markdown的转化，部分代码的缩进与格式存在问题，正在逐步修正。</p></blockquote><span id="more"></span><h1 id="实验1-表达式和标准输入与输出实验">实验1表达式和标准输入与输出实验</h1><h2 id="实验目的">1.1 实验目的</h2><p>（1）熟练掌握各种运算符的运算功能，操作数的类型，运算结果的类型及运算过程中的类型转换，重点是C语言特有的运算符，例如位运算符，问号运算符，逗号运算符等；熟记运算符的优先级和结合性。</p><p>（2）掌握getchar, putchar, scanf 和printf 函数的用法。</p><p>（3）掌握简单C程序（顺序结构程序）的编写方法。</p><h2 id="实验内容">1.2 实验内容</h2><h3 id="源程序改错">1 源程序改错</h3><p>下面给出了一个简单C语言程序例程，用来完成以下工作：</p><p>（1）输入华氏温度f，将它转换成摄氏温度c后输出；</p><p>（2）输入圆的半径值ｒ，计算并输出圆的面积ｓ；</p><p>（3）输入短整数ｋ、ｐ，将ｋ的高字节作为结果的低字节，ｐ的高字节作为结果的高字节，拼成一个新的整数，然后输出；</p><p>在这个例子程序中存在若干语法和逻辑错误。要求参照1.3和1.4的步骤对下面程序进行调试修改，使之能够正确完成指定任务。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PI 3.14159;</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( <span class="keyword">void</span> )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="keyword">int</span> f ;</span><br><span class="line">   <span class="keyword">short</span> p, k ;</span><br><span class="line">   <span class="keyword">double</span> c, r, s ;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 任务1 */</span></span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;Input Fahrenheit: &quot;</span> ) ;</span><br><span class="line">   <span class="built_in">scanf</span>(“%d”, f ) ;</span><br><span class="line">   c = <span class="number">5</span>/<span class="number">9</span> * (f<span class="number">-32</span>) ;</span><br><span class="line">   <span class="built_in">printf</span>( “ \n %d (F) = %<span class="number">.2</span>f (C)\n\n ”, f, c ) ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 任务2 */</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;input the radius r:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>, &amp;r);</span><br><span class="line">    s = PI * r * r;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nThe acreage is %.2f\n\n&quot;</span>,&amp;s);</span><br><span class="line"></span><br><span class="line">    <span class="comment">/* 任务3 */</span></span><br><span class="line">    k = <span class="number">0xa1b2</span>, p = <span class="number">0x8432</span>;</span><br><span class="line">    newint = p&amp;<span class="number">0xff00</span>|k&gt;&gt;<span class="number">8</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;new int = %#x\n\n&quot;</span>,newint);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>解答：</strong></p><p>（1）错误修改：</p><ol type="1"><li>第2行的符号常量定义后不能有分号，应改为</li></ol><p><code>#define PI 3.14159</code></p><ol start="2" type="1"><li>第5行的f类型应该为double，应改为</li></ol><p><code>double f ;</code></p><ol start="3" type="1"><li>第10行f的类型为double，应改为</li></ol><p><code>scanf("%lf",&amp;f);</code></p><ol start="4" type="1"><li>第11行c的类型为double，应改为</li></ol><p><code>c = 1.0 * 5/9 * (f-32) ;</code></p><ol start="5" type="1"><li>第12行c的类型为double，应改为</li></ol><p><code>printf( "\n %.2lf (F) = %.2lf (C)\n\n ", f, c ) ;</code></p><ol start="6" type="1"><li>第15行r的类型为double，应改为</li></ol><p><code>scanf("%lf", &amp;r);</code></p><ol start="7" type="1"><li>第17行存在printf语法错误，应改为</li></ol><p><code>printf("\nThe acreage is %.2lf\n\n",s)</code></p><ol start="8" type="1"><li>第21行存在newint类型、算法错误，应改为</li></ol><p><code>int newint = (p&amp;0xff00) | ((k&amp;0xff00)&gt;&gt;8);</code></p><p>（2）错误修改后运行结果：</p><figure><img src="/report/experiment/b518c95736d79144b989857de34e3b34.png" alt="图1-1 程序改错题的程序运行结果示意图"><figcaption aria-hidden="true">图1-1程序改错题的程序运行结果示意图</figcaption></figure><h3 id="程序设计">2 程序设计</h3><p>（1）输入字符ｃ，如果ｃ是大写字母，则将ｃ转换成对应的小写，否则ｃ的值不变，输入Ctrl+Z程序结束。要求①用条件表达式；②字符的输入输出用getchar和putchar函数。程序应能循环接受用户的输入，直至输入Ctrl+Z程序结束。</p><p>解答：</p><p>1） 算法流程如图1.1所示。</p><figure><img src="/report/experiment/ef9c5024ad712e67ce818b3d51da8eea.png" alt="图1-2 编程题1的程序流程图"><figcaption aria-hidden="true">图1-2 编程题1的程序流程图</figcaption></figure><p>2）源程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c ;</span><br><span class="line">    <span class="keyword">while</span> ( <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c) != EOF )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( c &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            c += <span class="number">32</span> ;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,tmp) ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,c) ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p>3）测试</p><p>（a） 测试数据：</p><p>A</p><p>（b） 对应测试数据的运行结果截图</p><figure><img src="/report/experiment/b2ee8895bfa7cc5a69d305917fab9259.png" alt="图1-3 编程题1的程序运行结果示意图"><figcaption aria-hidden="true">图1-3编程题1的程序运行结果示意图</figcaption></figure><p>（2）输入无符号短整数x，ｍ，ｎ（0 ≤ｍ≤ 15, 1 ≤ ｎ≤16-ｍ）,取出x从第ｍ位开始向左的ｎ位（ｍ从右至左编号为0～15），并使其向左端（第15位）靠齐。要求：①检查m和n的范围；②x的值以十六进制输入，m和n以十进制输入；③结果以十六进制输出。</p><p><strong>解答：</strong></p><ol type="1"><li>解题思路:</li></ol><ol type="1"><li><p>输入x，m，n，为了方便分析测试结果，x的输入采用16进制</p></li><li><p>如果<code>0 ≤ｍ≤ 15, 1 ≤ ｎ≤16-ｍ</code>，转2.1，否则转3.</p></li></ol><ul><li><p>首先x&gt;&gt;m，将要处理的n位移动到最右；</p></li><li><p>再将上一步的结果左移<code>15-n-1</code>位，即：<code>(x &gt;&gt;m ) &lt;&lt; (16 - n)</code></p></li><li><p>用16进制输出结果并转4.</p></li></ul><ol start="3" type="1"><li><p>显示输入错误信息；</p></li><li><p>结束</p></li></ol><p>2）程序清单</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="keyword">int</span> x , m , n , ans ;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%hx%hd%hd&quot;</span>,&amp;x,&amp;m,&amp;n) ;</span><br><span class="line">    <span class="comment">// return 0;</span></span><br><span class="line">    <span class="keyword">if</span> (m &lt; <span class="number">0</span> || m &gt; <span class="number">15</span> || m + n &lt;<span class="number">0</span> || m + n &gt;<span class="number">16</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ans = (x &gt;&gt; m ) &lt;&lt; (<span class="number">16</span> - n) ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%hx&quot;</span>,ans ) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="keyword">int</span> x , n, m , d , ans;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%hx%hd%hd&quot;</span>, &amp;x, &amp;m, &amp;n);</span><br><span class="line"><span class="keyword">if</span> (m &gt;= <span class="number">0</span> &amp;&amp; m &lt;= <span class="number">15</span> &amp;&amp; n &gt;= <span class="number">1</span> &amp;&amp; n + m &lt;= <span class="number">16</span>)</span><br><span class="line">&#123;</span><br><span class="line">    d = (~<span class="number">0</span>) &lt;&lt; ( m - <span class="number">1</span> ) ;</span><br><span class="line">    ans = (x&amp;d) &lt;&lt; (<span class="number">16</span> - m - n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%x\n&quot;</span>,ans);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;error\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3）测试</p><p>（a） 测试数据：如表1-1所示。</p><p>表1-1 编程题3的测试数据</p><table><colgroup><col style="width: 10%"><col style="width: 32%"><col style="width: 13%"><col style="width: 3%"><col style="width: 40%"></colgroup><thead><tr class="header"><th>测试 用例</th><th>程 序 输 入</th><th>理 论 结 果</th><th></th><th></th></tr></thead><tbody><tr class="odd"><td></td><td>X</td><td>m</td><td>N</td><td></td></tr><tr class="even"><td>用例1</td><td>0100 0110 1000 0000（4680）</td><td>7</td><td>4</td><td>计算结果1101 0000 0000 0000 即D000</td></tr><tr class="odd"><td>用例2</td><td>1101 0101 1000 0011（D583）</td><td>16</td><td>1</td><td>输入错误（m值超范围）</td></tr><tr class="even"><td>用例3</td><td>1101 0101 1000 0011（D583）</td><td>13</td><td>5</td><td>输入错误（n值超范围）</td></tr></tbody></table><p>（b） 对应测试测试用例1的运行结果如图1-2所示。</p><figure><img src="/report/experiment/da8d1dc42b60e7d3d5ecf3d11bb96b2c.png" alt="图1-4 编程题3的测试用例一的运行结果"><figcaption aria-hidden="true">图1-4编程题3的测试用例一的运行结果</figcaption></figure><p>对应测试测试用例2的运行结果如图1-3所示。<img src="/report/experiment/b83107be4ee83c6b67fd7b22c0921add.png" alt="图1-5 编程题3的测试用例二的运行结果"></p><p>对应测试测试用例3的运行结果如图1-4所示。</p><figure><img src="/report/experiment/cbba3e4e160058c8a88ef1d093448d63.png" alt="图1-6 编程题3的测试用例三的运行结果"><figcaption aria-hidden="true">图1-6编程题3的测试用例三的运行结果</figcaption></figure><p>说明上述的运行结果与理论分析吻合，验证了程序的正确性。</p><p>（3）IP地址通常是4个用句点分隔的小整数（即点分十进制），但这些地址在机器中是用一个无符号长整型数表示的。例如3232235876，其机内二进制表示就是1100000010101000 0000000101100100，按照8位一组用点分开，该IP地址就写成192.168.1.100。</p><p>读入无符号长整型数表示的互联网IP地址，对其译码，以常见的点分十进制形式输出。要求循环输入和输出，直至输入Ctrl+Z结束。</p><p><strong>解答：</strong></p><ol type="1"><li>解题思路:</li></ol><ol type="1"><li><p>输入x为了方便分析测试结果，x的输入采用unsigned longint型</p></li><li><p>如果x != EOF转2.1，否则转3.</p></li></ol><ul><li><p>首先定义<code>mask = 0x000000ff ;</code></p></li><li><p>计算结果并进行输出，<code>(x&gt;&gt;24)&amp;t.(x&gt;&gt;16)&amp;t. (x&gt;&gt;8)&amp;t .(x&amp;t),</code>然后转3：</p></li></ul><ol start="3" type="1"><li>结束</li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">int</span> x;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%ld&quot;</span>,&amp;x) != EOF )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">int</span> t = <span class="number">0x00000ff</span> ;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d.%d.%d.%d\n&quot;</span>,(x&gt;&gt;<span class="number">24</span>)&amp;t,(x&gt;&gt;<span class="number">16</span>)&amp;t,(x&gt;&gt;<span class="number">8</span>)&amp;t,(x&amp;t)) ; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 3）测试</p><p>（a） 测试数据：</p><p>3232235876</p><p>（b） 对应测试数据的运行结果截图</p><figure><img src="/report/experiment/646ca82f3ac4a6658975c19b53521d2d.png" alt="图1-7 编程题4的运行结果"><figcaption aria-hidden="true">图1-7 编程题4的运行结果</figcaption></figure><h2 id="实验小结">1.3 实验小结</h2><p>实验中对于部分算法、语法存在许多疑惑，但经过查阅资料、自己摸索、借助ide的debug、调试等功能，成功解决了问题。经过这次实验，我体会到了自学探索的重要性，对有关知识的理解更深了。</p><hr><h1 id="实验2-流程控制实验">实验2 流程控制实验</h1><h2 id="实验目的-1">2.1 实验目的</h2><p>（1）掌握复合语句、if语句、switch语句的使用，熟练掌握for、while、do-while三种基本的循环控制语句的使用，掌握重复循环技术，了解转移语句与标号语句。</p><p>（2）练习循环结构for、while、do-while语句的使用。</p><p>（3）练习转移语句和标号语句的使用。</p><p>（4）使用集成开发环境中的调试功能：单步执行、设置断点、观察变量值。</p><h2 id="实验内容及要求">2.2 实验内容及要求</h2><h3 id="程序改错">2.2.1程序改错</h3><p>下面的实验2-1程序是合数判断器（合数指自然数中除了能被1和本身整除外，还能被其它数整除的数），在该源程序中存在若干语法和逻辑错误。要求对该程序进行调试修改，使之能够正确完成指定任务。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 实验2-1改错题程序：合数判断器*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i, x, k, flag = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;本程序判断合数，请输入大于1的整数，以Ctrl+Z结束\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x) !=EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(i=<span class="number">2</span>,k=x&gt;&gt;<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">        <span class="keyword">if</span> (!x%i)</span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag=<span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d是合数&quot;</span>, x);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d不是合数&quot;</span>, x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <strong>解答：</strong></p><p>（1）错误修改：</p><ol type="1"><li><p>第9行的运算优先级出错，正确形式为：</p><p>if( ! (x % i ) )</p></li><li><p>第13行的 if(flag=1) 语法出错，正确形式为：</p><p>if ( flag == 1 )</p></li><li><p>第15行的算法出错，正确形式为：</p><p>flag = 0 ;}</p></li></ol><ol start="2" type="1"><li>错误修改后运行结果：</li></ol><figure><img src="/report/experiment/071602f03a3be38276fedbf375c5572b.png" alt="图2-1程序改错的测试用例运行结果"><figcaption aria-hidden="true">图2-1程序改错的测试用例运行结果</figcaption></figure><h3 id="程序修改替换">2.2.2程序修改替换</h3><p>（1）修改实验2-1程序，将内层两出口的for循环结构改用单出口结构，即不允许使用break、goto等非结构化语句。</p><p><strong>解答：</strong> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="keyword">int</span> i, x, k, flag = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;本程序判断合数，请输入大于1的整数，以Ctrl+Z结束\n&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x) != EOF) </span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">2</span>, k = x&gt;&gt;<span class="number">1</span>; i &lt;= k &amp;&amp; ( flag == <span class="number">0</span> ) ;i++)</span><br><span class="line"><span class="keyword">if</span> (!(x % i)) flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(flag == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d是合数&quot;</span>, x);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d不是合数&quot;</span>, x);</span><br><span class="line">    flag = <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> (2) 修改后运行结果：</p><figure><img src="/report/experiment/53448e04fe0994a734867f67db70ca1f.png" alt="图2-2程序修改替换的测试用例运行结果"><figcaption aria-hidden="true">图2-2程序修改替换的测试用例运行结果</figcaption></figure><p>（2）修改实验2-1程序，将for循环改用do-while循环。</p><p><strong>解答：</strong> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="keyword">int</span> i, x, k, flag = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;本程序判断合数，请输入大于1的整数，以Ctrl+Z结束\n&quot;</span>);</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">    <span class="keyword">if</span>(x)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">2</span>,k=x&gt;&gt;<span class="number">1</span>; i&lt;=k &amp;&amp; ( flag == <span class="number">0</span> ) ;i++)</span><br><span class="line"><span class="keyword">if</span> (!(x%i)) flag = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(flag == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d是合数\n&quot;</span>, x);</span><br><span class="line">   <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d不是合数\n&quot;</span>, x);</span><br><span class="line">    flag = <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line">    &#125; <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x) !=EOF) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> (2) 修改后运行结果：</p><figure><img src="/report/experiment/e46b36c0edc652549a61690ef7acc01d.png" alt="图2-3程序修改替换的测试用例运行结果"><figcaption aria-hidden="true">图2-3程序修改替换的测试用例运行结果</figcaption></figure><p>（3）修改实验2-1程序，将其改为纯粹合数求解器，求出所有的3位纯粹合数。一个合数去掉最低位，剩下的数仍是合数；再去掉剩下的数的最低位，余留下来的数还是合数，这样反复，一直到最后剩下一位数仍是合数，这样的数称为纯粹合数。</p><p><strong>解答：</strong> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">解答：</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">judge</span> <span class="params">( <span class="keyword">int</span> x )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = <span class="built_in">sqrt</span>(x) ;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">2</span> ; i &lt;= tmp ; i++ )</span><br><span class="line">        <span class="keyword">if</span>( x % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123; </span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">100</span> ; i &lt;= <span class="number">999</span> ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( judge (i) &amp;&amp; judge (i / <span class="number">10</span>) &amp;&amp; judge (i/<span class="number">100</span>) ) </span><br><span class="line">            <span class="built_in">printf</span> (<span class="string">&quot;%d &quot;</span> , i ) ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><ol start="2" type="1"><li>修改后运行结果：</li></ol><figure><img src="/report/experiment/27914d08b976624b20469d9c4d112f2a.png" alt="图2-4程序修改替换的测试用例运行结果"><figcaption aria-hidden="true">图2-4程序修改替换的测试用例运行结果</figcaption></figure><h3 id="程序设计-1">2.2.3程序设计</h3><p>（1）假设工资税金按以下方法计算：x ＜ 1000元，不收取税金；1000 ≤ x＜2000，收取5%的税金；2000 ≤ x ＜ 3000，收取10%的税金；3000 ≤ x＜4000，收取15%的税金；4000 ≤ x ＜ 5000，收取20%的税金；5000≤x，收取25%的税金。（注意税金的计算按照阶梯计税法，比如，工资为4500，那么税金=<code>1000*5%+1000*10% + 1000*15% + 501*20%）</code>编写一个程序,输入工资金额，输出应收取税金额度，要求分别用if语句和switch语句来实现。</p><p><strong>解答：</strong> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*使用if版本*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">double</span> x ;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;x) ;</span><br><span class="line">    <span class="keyword">int</span> tmp = x / <span class="number">1000</span> ;</span><br><span class="line">    <span class="keyword">if</span>( tmp == <span class="number">0</span> ) <span class="built_in">printf</span>(<span class="string">&quot;收税金额为%d&quot;</span>,<span class="number">0</span>) ;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( tmp == <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;收税金额为%.2lf&quot;</span>, (x<span class="number">-1000</span>) * <span class="number">0.05</span> ) ;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( tmp == <span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">&quot;收税金额为%.2lf&quot;</span>, <span class="number">50</span> + (x<span class="number">-2000</span>) * <span class="number">0.1</span> ) ;    </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( tmp == <span class="number">3</span>) <span class="built_in">printf</span>(<span class="string">&quot;收税金额为%.2lf&quot;</span>, <span class="number">150</span> + (x<span class="number">-3000</span>) * <span class="number">0.15</span> ) ;    </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( tmp == <span class="number">4</span>) <span class="built_in">printf</span>(<span class="string">&quot;收税金额为%.2lf&quot;</span>, <span class="number">300</span> + (x<span class="number">-4000</span>) * <span class="number">0.2</span> ) ;    </span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( tmp &gt;= <span class="number">5</span>) <span class="built_in">printf</span>(<span class="string">&quot;收税金额为%.2lf&quot;</span>, <span class="number">500</span> + (x<span class="number">-2000</span>) * <span class="number">0.25</span> ) ;    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>/<em>使用switch版本</em>/ <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*使用switch版本*/</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">double</span> x ;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>,&amp;x) ;</span><br><span class="line">    <span class="keyword">int</span> tmp = x / <span class="number">1000</span> ;</span><br><span class="line">    <span class="keyword">switch</span> ( tmp ) </span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span> : <span class="built_in">printf</span>(<span class="string">&quot;收税金额为%d&quot;</span>,<span class="number">0</span>) ; <span class="keyword">break</span> ;</span><br><span class="line">   <span class="keyword">case</span> <span class="number">1</span> : <span class="built_in">printf</span>(<span class="string">&quot;收税金额为%.2lf&quot;</span>, (x<span class="number">-1000</span>) * <span class="number">0.05</span> ) ; <span class="keyword">break</span> ;</span><br><span class="line">   <span class="keyword">case</span> <span class="number">2</span> : <span class="built_in">printf</span>(<span class="string">&quot;收税金额为%.2lf&quot;</span>, <span class="number">50</span> + (x<span class="number">-2000</span>) * <span class="number">0.1</span> ) ; <span class="keyword">break</span> ;   </span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span> : <span class="built_in">printf</span>(<span class="string">&quot;收税金额为%.2lf&quot;</span>, <span class="number">150</span> + (x<span class="number">-3000</span>) * <span class="number">0.15</span> ) ; <span class="keyword">break</span> ;    </span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span> : <span class="built_in">printf</span>(<span class="string">&quot;收税金额为%.2lf&quot;</span>, <span class="number">300</span> + (x<span class="number">-4000</span>) * <span class="number">0.2</span> ) ; <span class="keyword">break</span> ;   </span><br><span class="line"><span class="keyword">default</span> : <span class="built_in">printf</span>(<span class="string">&quot;收税金额为%.2lf&quot;</span>, <span class="number">500</span> + (x<span class="number">-2000</span>) * <span class="number">0.25</span> ) ; <span class="keyword">break</span> ;    </span><br><span class="line">&#125;   </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 测试数据：</p><p>程序运行截图：</p><figure><img src="/report/experiment/73d00cab4295af040c319e9cf18492a0.png" alt="图2-5编程题1的测试用例1运行结果"><figcaption aria-hidden="true">图2-5编程题1的测试用例1运行结果</figcaption></figure><figure><img src="/report/experiment/4acec651c10dbf16d2384b543fda0249.png" alt="图2-6编程题1的测试用例2运行结果"><figcaption aria-hidden="true">图2-6编程题1的测试用例2运行结果</figcaption></figure><figure><img src="/report/experiment/4e292dc75c70a3c5db0f341a67294535.png" alt="图2-7编程题1的测试用例3运行结果"><figcaption aria-hidden="true">图2-7编程题1的测试用例3运行结果</figcaption></figure><p>说明上述的运行结果与理论分析吻合，验证了程序的正确性。</p><ol start="2" type="1"><li>输入一段以!结尾的短文(最多5行,每行不超过50个字符)，要求将它复制到输出，复制过程中将每行一个以上的空格字符用一个空格代替。</li></ol><p>1 解题思路：</p><ol type="1"><li><p>输入字符c，如果输入未完成则继续输入</p></li><li><p>如果c 为空格</p></li></ol><ul><li><p>如果flag为真，则继续读取字符c</p></li><li><p>如果flag为假，则flag = 1 ，并且输出字符c</p></li></ul><ol start="3" type="1"><li><p>如果c不为空格，则flag=0,并且输出字符c</p></li><li><p>结束</p></li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> c ;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> ( <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c) != EOF )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( c == <span class="string">&#x27; &#x27;</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ( flag ) <span class="keyword">continue</span> ;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                flag = <span class="number">1</span> ;</span><br><span class="line">                <span class="built_in">putchar</span>(c) ;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="number">0</span> ;</span><br><span class="line">            <span class="built_in">putchar</span>(c) ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure> 3）测试</p><figure><img src="/report/experiment/55168a116fe08966b11d72bdd8f09d1b.png" alt="图2-8编程题2的测试用例运行结果"><figcaption aria-hidden="true">图2-8编程题2的测试用例运行结果</figcaption></figure><p>说明上述的运行结果与理论分析吻合，验证了程序的正确性。</p><p>（3）打印如下的杨辉三角形。 <figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">                  <span class="attribute">1</span></span><br><span class="line">                <span class="attribute">1</span>   <span class="number">1</span></span><br><span class="line">              <span class="attribute">1</span>   <span class="number">2</span>   <span class="number">1</span> </span><br><span class="line">            <span class="attribute">1</span>   <span class="number">3</span>   <span class="number">3</span>   <span class="number">1</span></span><br><span class="line">          <span class="attribute">1</span>   <span class="number">4</span>   <span class="number">6</span>   <span class="number">4</span>   <span class="number">1</span></span><br><span class="line">        <span class="attribute">1</span>   <span class="number">5</span>   <span class="number">10</span>  <span class="number">10</span>  <span class="number">5</span>   <span class="number">1</span></span><br><span class="line">      <span class="attribute">1</span>   <span class="number">6</span>   <span class="number">15</span>  <span class="number">20</span>  <span class="number">15</span>  <span class="number">6</span>   <span class="number">1</span></span><br><span class="line">    <span class="attribute">1</span>   <span class="number">7</span>   <span class="number">21</span>  <span class="number">35</span>  <span class="number">35</span>  <span class="number">21</span>  <span class="number">7</span>   <span class="number">1</span></span><br><span class="line">  <span class="attribute">1</span>   <span class="number">8</span>   <span class="number">28</span>  <span class="number">56</span>  <span class="number">70</span>  <span class="number">56</span>  <span class="number">28</span>  <span class="number">8</span>   <span class="number">1</span></span><br><span class="line"><span class="attribute">1</span>   <span class="number">9</span>   <span class="number">36</span>  <span class="number">84</span>  <span class="number">126</span> <span class="number">126</span> <span class="number">84</span>  <span class="number">36</span>   <span class="number">9</span>   <span class="number">1</span></span><br></pre></td></tr></table></figure>第i行第j列位置的数据值可以由组合表示，而组合数的计算如下：</p><p><span class="math display">\[C_i^j =C_{i-1}^j+C_{i-1}^{j-1}\]</span></p><p>根据以上公式，采用顺推法编程，输入最后一行的编号N（0&lt;=N&lt;=6），要求输出金字塔效果的杨辉三角形。</p><p>特别要注意空格的数目，一位数之间是3个空格，两位数之间有2个空格，3位数之间只有一个空格。第N行行首是N个空格。每行末尾是3个空格和换行。</p><p>1 解题思路：</p><ol type="1"><li><p>输入整数n</p></li><li><p>使用递推求出组合数c[i][j]</p></li><li><p>利用双层循环结合题意对杨辉三角进行输出</p></li><li><p>结束</p></li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n ;</span><br><span class="line"><span class="keyword">int</span> c[maxn][maxn] ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n) ;</span><br><span class="line">    c[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++ ) </span><br><span class="line">    &#123;</span><br><span class="line">        c[i][<span class="number">0</span>] = c[i][i] = <span class="number">1</span> ;</span><br><span class="line">        <span class="keyword">for</span>( re <span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= ( i &gt;&gt; <span class="number">1</span> ) ; j++ )</span><br><span class="line">        &#123;</span><br><span class="line">            c[i][j] = c[i][i-j] = c[i<span class="number">-1</span>][j] + c[i<span class="number">-1</span>][j<span class="number">-1</span>] ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt;= n ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>( re <span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= n + <span class="number">2</span>*(n-i) ; j++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>) ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> ( re <span class="keyword">int</span> k = <span class="number">0</span> ; k &lt;= i ; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%-4d&quot;</span>,c[i][k]) ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>) ;</span><br><span class="line">    &#125; </span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 3）测试</p><figure><img src="/report/experiment/af43b74e952211c92f290859aca95293.png" alt="图2-9编程题3的测试用例运行结果"><figcaption aria-hidden="true">图2-9编程题3的测试用例运行结果</figcaption></figure><p>说明上述的运行结果与理论分析吻合，验证了程序的正确性。</p><p>（4）625这个数很特别，625的平方等于390625，其末3位也是625。请编程输出所有这样的3位数：它的平方的末3位是这个数本身。要求这些数字从小到大排列，每个数字单独占一行。</p><ol type="1"><li>解题思路：</li></ol><ol type="1"><li><p>输入字符c，如果输入未完成则继续输入</p></li><li><p>如果c 为空格</p></li></ol><ul><li><p>如果flag为真，则继续读取字符c</p></li><li><p>如果flag为假，则flag = 1 ，并且输出字符c</p></li></ul><ol start="3" type="1"><li><p>如果c不为空格，则flag=0,并且输出字符c</p></li><li><p>结束</p></li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">100</span> ; i &lt;= <span class="number">999</span> ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( ( i*i % <span class="number">1000</span> ) == i ) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 3）测试</p><figure><img src="/report/experiment/7f186b9c7ab30ec91daac73311ed3be6.png" alt="图2-10编程题4的测试用例运行结果"><figcaption aria-hidden="true">图2-10编程题4的测试用例运行结果</figcaption></figure><p>说明上述的运行结果与理论分析吻合，验证了程序的正确性。</p><h2 id="实验小结-1">2.3 实验小结</h2><p>（1）通过这次试验，我掌握了复合语句、if语句、switch语句的使用，熟练掌握for、while、do-while三种基本的循环控制语句的使用，掌握重复循环技术，了解转移语句与标号语句，对它们有了更深的理解。</p><p>（2）通过这次试验，我练习了循环结构for、while、do-while语句的使用，熟练使用了他们。</p><p>（3）通过这次试验，我练习了转移语句和标号语句的使用。</p><p>（4）通过这次试验，我使用集成开发环境中的调试功能：单步执行、设置断点、观察变量值，提高了debug效率。</p><h1 id="实验3-函数与程序结构实验">实验3 函数与程序结构实验</h1><h2 id="实验目的-2">3.1实验目的</h2><p>（1）熟悉和掌握函数的定义、声明；函数调用与参数传递，函数返回值类型的定义和返回值使用。</p><p>（2）熟悉和掌握不同存储类型变量的使用。</p><p>（3）练习使用集成开发环境中的调试功能：单步执行、设置断点、观察变量值。</p><h2 id="实验内容-1">3.2实验内容</h2><h3 id="程序改错题">3.2.1.程序改错题</h3><p>下面是计算s=1!+2!+3!+…+n!的源程序(n&lt;20)。在这个源程序中存在若干语法和逻辑错误。要求对该程序进行调试修改，使之能够输出如下结果：</p><p>k=1 the sum is 1</p><p>k=2 the sum is 3</p><p>k=3 the sum is 9</p><p>……</p><p>k=20 the sum is 2561327494111820313 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*实验3-1改错题程序：计算s=1!+2!+3!+…+n!*/</span></span><br><span class="line"><span class="number">1</span>  <span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="number">2</span>  <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function">3  </span>&#123;</span><br><span class="line"><span class="number">4</span>      <span class="keyword">int</span> k;</span><br><span class="line"><span class="number">5</span>      <span class="keyword">for</span>(k=<span class="number">1</span>;k&lt;=<span class="number">20</span>;k++)</span><br><span class="line"><span class="number">6</span>           <span class="built_in">printf</span>(<span class="string">&quot;k=%d\tthe sum is %ld\n&quot;</span>,k,sum_fac(k));</span><br><span class="line"><span class="number">7</span>      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="number">8</span>  &#125;</span><br><span class="line"><span class="number">9</span>  <span class="function"><span class="keyword">long</span> <span class="title">sum_fac</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function">10 </span>&#123;</span><br><span class="line"><span class="number">11</span>     <span class="keyword">long</span> s=<span class="number">0</span>;</span><br><span class="line"><span class="number">12</span>     <span class="keyword">int</span> i,fac;</span><br><span class="line"><span class="number">13</span>    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line"><span class="number">14</span>         fac*=i;</span><br><span class="line"><span class="number">15</span>     s+=fac;</span><br><span class="line"><span class="number">16</span>     <span class="keyword">return</span> s;</span><br><span class="line"><span class="number">17</span> &#125;</span><br></pre></td></tr></table></figure><strong>解答：</strong></p><p>（1）错误修改：</p><ol type="1"><li><p>第3行未对函数sum_fac进行声明，同时函数数据类型出错，正确形式为：</p><p>long long sum_fac(int n);</p></li><li><p>第11行s的数据类型出错，正确形式为：</p><p>static long long s=0;</p></li><li><p>第12行fac的数据类型、初始值出错，正确形式为：</p><p>long long fac = 1 ;</p></li></ol><ol start="2" type="1"><li>错误修改后运行结果：</li></ol><figure><img src="/report/experiment/8345e59c7df5e4e7ae3420be39d9a318.png" alt="图3-1 程序改错题的程序运行截图"><figcaption aria-hidden="true">图3-1程序改错题的程序运行截图</figcaption></figure><h3 id="程序修改替换题">3.3.2．程序修改替换题</h3><p>（1）根据将实验3-1改错题程序中sum_fac函数修改为一个递归函数，用递归的方式计算。</p><p>解答：</p><p>（1）替换后的程序如下： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">sum_fac</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="keyword">for</span>(k=<span class="number">1</span>;k&lt;=<span class="number">20</span>;k++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;k=%d\tthe sum is %lld\n&quot;</span>,k,sum_fac(k));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="keyword">long</span> <span class="title">sum_fac</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( n == <span class="number">1</span> ) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">long</span> <span class="keyword">long</span> fac = <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">1</span>  ; i &lt;= n ; i++ )</span><br><span class="line">        fac *= i ;</span><br><span class="line">    <span class="keyword">return</span> fac + sum_fac( n - <span class="number">1</span> ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> （2）程序运行结果示意图：</p><figure><img src="/report/experiment/3a69453178f86a5cfb310089b1fa1a10.png" alt="图3-2 程序修改替换题（1）的程序运行截图"><figcaption aria-hidden="true">图3-2程序修改替换题（1）的程序运行截图</figcaption></figure><p>（2）下面是计算的源程序，其中x是浮点数，n是整数。从键盘输入x和n，然后计算s的值。修改该程序中的sum和fac函数，使之计算量最小。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">mulx</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">fac</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">sum</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">double</span> z=<span class="number">1.0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">z=z+mulx(x,i)/fac(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> z;</span><br><span class="line"> &#125; </span><br><span class="line"> <span class="function"><span class="keyword">double</span> <span class="title">mulx</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">double</span> z=<span class="number">1.0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">&#123;</span><br><span class="line">z=z*x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> z;</span><br><span class="line"> &#125; </span><br><span class="line"> <span class="function"><span class="keyword">long</span> <span class="title">fac</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line"> <span class="keyword">int</span> i;</span><br><span class="line"> <span class="keyword">long</span> h=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">for</span>(i=<span class="number">2</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">h=h*i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> h; </span><br><span class="line"> &#125;</span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line"> <span class="keyword">double</span> x;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input x and n:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf%d&quot;</span>,&amp;x,&amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The result is %lf:&quot;</span>,sum(x,n));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line"> &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 解答：</p><p>（1）替换后的程序如下： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">mulx</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">fac</span><span class="params">(<span class="keyword">int</span> n)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">sum</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">double</span> z=<span class="number">1.0</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">z=z+mulx(x,i)/fac(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> z;</span><br><span class="line"> &#125; </span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">mulx</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">static</span> <span class="keyword">double</span> z=<span class="number">1.0</span>;</span><br><span class="line">    z *= x ; </span><br><span class="line"><span class="keyword">return</span> z;</span><br><span class="line"> &#125; </span><br><span class="line"> <span class="function"><span class="keyword">long</span> <span class="title">fac</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( n == <span class="number">1</span> ) <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line"> <span class="keyword">static</span> <span class="keyword">long</span> f = <span class="number">1</span> ;</span><br><span class="line">    f *= n ;</span><br><span class="line">    <span class="keyword">return</span> f ; </span><br><span class="line"> &#125;</span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line"> <span class="keyword">double</span> x;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input x and n:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf%d&quot;</span>,&amp;x,&amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;The result is %lf:&quot;</span>,sum(x,n));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;  </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>（2）替换后的程序运行结果如下：</p><figure><img src="/report/experiment/31df2a4ebc550e29f0a8e38f6726606e.png" alt="图3-3 程序修改替换题（2）的程序运行截图"><figcaption aria-hidden="true">图3-3程序修改替换题（2）的程序运行截图</figcaption></figure><h3 id="跟踪调试题">3.3.3．跟踪调试题</h3><p>下面是计算fabonacci数列前n项和的源程序，现要求单步执行该程序，在watch窗口中观察Ik,sum,n值。具体操作如下：</p><ol type="1"><li><p>设输入5，观察刚执行完"scanf("%d",&amp;k);"语句时，sum、k的值是多少？</p><figure><img src="/report/experiment/89b618ce77b70cfc7a08d43c1a15bc93.png" alt="图3-4跟踪调试题（1）的程序运行截图"><figcaption aria-hidden="true">图3-4跟踪调试题（1）的程序运行截图</figcaption></figure></li><li><p>在从main函数第一次进入fabonacci函数前的一刻，观察各变量的值是多少？返回后光条停留在哪个语句上？</p><figure><img src="/report/experiment/32c6934e0faa3c258e21f2d684e2cb37.png" alt="图3-5跟踪调试题（2）的程序运行截图"><figcaption aria-hidden="true">图3-5跟踪调试题（2）的程序运行截图</figcaption></figure></li><li><p>在从main函数第一次进入fabonacci函数后的一刻，观察光条从main函数"sum+=fabonacci(i);"语句调到了哪里？</p><figure><img src="/report/experiment/04713efeb62ef61a1c47b155881be96d.png" alt="图3-6跟踪调试题（3）的程序运行截图"><figcaption aria-hidden="true">图3-6跟踪调试题（3）的程序运行截图</figcaption></figure></li><li><p>在fabonacci函数内部单步执行，观察函数的递归执行过程。体会递归方式实现的计算过程是如何完成数计算的，并特别注意什么时刻结束递归，然后直接从第一个return语句返回到了哪里？</p><figure><img src="/report/experiment/5c4fc448ded41b991503c08c57b657f1.png" alt="图3-7跟踪调试题（4）的程序运行截图"><figcaption aria-hidden="true">图3-7跟踪调试题（4）的程序运行截图</figcaption></figure></li><li><p>在fabonacci函数递归执行过程中观察参数n的变化情况，并回答为什么k、sum在fabonacci函数内部不可见？</p><p>解答：</p><p>这两个变量是开在main()函数的局部变量，fabonacci函数无法调用。</p></li></ol><p><strong>/<em>实验3-3跟踪调试题程序：<strong>计算fabonacci数列前n项和</strong></em>/</strong><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,k;</span><br><span class="line">    <span class="keyword">long</span> sum=<span class="number">0</span>,fabonacci(<span class="keyword">int</span> n);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Inut n:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">1</span>;i&lt;=k;i++)&#123;</span><br><span class="line">        sum += fabonacci(i);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;i=%d\tthe sum is %ld\n&quot;</span>,i,sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">long</span> <span class="title">fabonacci</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span> || n == <span class="number">2</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> fabonacci(n<span class="number">-1</span>)+fabonacci(n<span class="number">-2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="程序设计-2">3.3.4．程序设计</h3><p>以下（1）至（3）题对应Educoder教学平台"C语言实验"课程，实验3，第7关实验3-1、第8关实验3-2，以及第9关实验3-3。</p><p>（1）编程验证歌德巴赫猜想：任何一个大于等于4的偶数都是两个素数之和。要求设计一个函数，接受形参n，以"n=n1+n2"的形式输出结果，若有多种分解情况，取n1最小的一个输出。</p><p>例如：n=6，输出"6=3+3"。</p><p>main函数循环接收从键盘输入的整数n，如果n是大于或等于4的偶数，调用上述函数进行验证。</p><p>1 解题思路：</p><ol type="1"><li><p>输入整数n</p></li><li><p>如果n是大于或等于4的偶数，调用solve(n)函数进行验证。</p></li></ol><ul><li><p>首先从i=2开始进行循环，调用judge(int a)函数进行判断。</p></li><li><p>judge函数：检测传入的参数是否为质数，如果是质数返回1，否则返回0.</p></li><li><p>如果i，n-i都是质数，则进行输出并终止循环。</p></li></ul><ol start="3" type="1"><li>结束</li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">judge</span> <span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="keyword">int</span> i = <span class="number">2</span> ; i &lt;= <span class="built_in">sqrt</span>(a) ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( a % i == <span class="number">0</span> ) <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span> <span class="params">(<span class="keyword">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">2</span> ; i &lt;= a ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( judge(i) &amp;&amp; judge(a-i) )</span><br><span class="line">        &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d=%d+%d\n&quot;</span>,a,i,a-i);</span><br><span class="line">        <span class="keyword">break</span> ;</span><br><span class="line">&#125;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n) != EOF )</span><br><span class="line">        <span class="keyword">if</span>(n &gt;= <span class="number">4</span> &amp;&amp; n % <span class="number">2</span> == <span class="number">0</span> ) solve(n);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure> 3）测试</p><figure><img src="/report/experiment/261dc275382320ee2566c9b5fc8fb2a7.png" alt="图3-8程序设计题（1）的程序运行截图"><figcaption aria-hidden="true">图3-8程序设计题（1）的程序运行截图</figcaption></figure><p>（2）完全数（Perfectnumber），又称完美数或完备数，特点是它的所有真因子（即除了自身以外的约数，包括1）之和恰好等于它本身。例如6=1+2+3，28=1+2+4+7+14等。</p><p>编程寻找10000以内的所有完全数。</p><p>要求设计一个函数，判定形参n是否为完全数，如果是，返回1，否则返回0。在main函数中调用该函数求10000以内的所有完全数，并以完全数的真因子之和的形式输出结果，例如"6=1+2+3"。程序输出中，每个完全数单独占一行。</p><p>1 解题思路：</p><ol type="1"><li><p>从i=2到10000进行遍历，调用judge(int n),print(intx)进行验证</p></li><li><p>judge函数：</p></li></ol><ul><li>先运用循环求出传入整数的所有因子，并调用数组进行储存。</li></ul><p>-再将所有因子进行求和，判断其是否与传入的参数相等，相等返回1，不相等返回0.</p><ul><li>如果i，n-i都是质数，则进行输出并终止循环。</li></ul><ol start="3" type="1"><li>print函数：</li></ol><ul><li><p>如果传入参数是完全数，调用judge函数中的数组对所有的因子进行输出。</p></li><li><p>对数组，cnt进行清零。</p></li></ul><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[maxn] ;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">judge</span> <span class="params">( <span class="keyword">int</span> n )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span> ; cnt = <span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( n % i == <span class="number">0</span> )</span><br><span class="line">            a[++cnt] = i ; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; cnt ; i++ )</span><br><span class="line">        sum += a[i] ;</span><br><span class="line">    <span class="keyword">if</span>( sum == n )</span><br><span class="line">    &#123;</span><br><span class="line">        sum = <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    sum = <span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">( <span class="keyword">int</span> x )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d=&quot;</span>,x) ;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; cnt - <span class="number">1</span> ; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d+&quot;</span>, a[i] ) ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a[cnt<span class="number">-1</span>]) ;</span><br><span class="line">    cnt = <span class="number">0</span> ;</span><br><span class="line">    <span class="built_in">memset</span> ( a , <span class="number">0</span> , <span class="keyword">sizeof</span>(a) ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">2</span> ; i &lt;= <span class="number">10000</span> ; i++ )</span><br><span class="line">        <span class="keyword">if</span> ( judge (i) ) print(i) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 3）测试</p><figure><img src="/report/experiment/a6d0e365fa95995f1193ee01b650146a.png" alt="图3-9程序设计题（2）的程序运行截图"><figcaption aria-hidden="true">图3-9程序设计题（2）的程序运行截图</figcaption></figure><p>（3）自幂数是指一个n位数，它的每个位上的数字的n次幂之和等于它本身。水仙花数是3位的自幂数，除此之外，还有4位的四叶玫瑰数、5位的五角星数、6位的六合数、7位的北斗星数、8位的八仙数等。</p><p>编写一个函数，判断其参数n是否为自幂数，如果是，返回1；否则，返回0。要求main函数能反复接收从键盘输入的整数k，k代表位数，然后调用上述函数求k位的自幂数，输出所有k位自幂数，并输出相应的信息，例如"3位的水仙花数共有4个153，370，371，407"。当k=0时程序结束执行。</p><ol type="1"><li>解题思路：</li></ol><ol type="1"><li><p>输入k,调用solve函数进行解答。</p></li><li><p>solve函数：</p></li></ol><ul><li><p>先运用循环从10^(k-1)到10^k-1进行遍历，寻找符合条件的数</p></li><li><p>再将各位的数字按题目意思进行验证，如果符合则存入数组</p></li><li><p>进行输出</p></li></ul><ol start="3" type="1"><li>结束</li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> k , cnt ;</span><br><span class="line"><span class="keyword">int</span> a[maxn] ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">qpow</span> <span class="params">( <span class="keyword">int</span> x, <span class="keyword">int</span> y )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">1</span> ;</span><br><span class="line"><span class="keyword">while</span> (y)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>( y &amp; <span class="number">1</span> ) ans *= x ;</span><br><span class="line">x = x * x ; y &gt;&gt;= <span class="number">1</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = qpow(<span class="number">10</span>,k<span class="number">-1</span>) ; i &lt;= qpow(<span class="number">10</span>,k)<span class="number">-1</span> ; i ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">int</span> tmp = i , sum = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (tmp)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> x = tmp%<span class="number">10</span> ;</span><br><span class="line">                sum += qpow(x,k);</span><br><span class="line">                tmp /= <span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>( sum == i ) a[++cnt] = i ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ( k == <span class="number">3</span> ) <span class="built_in">printf</span>(<span class="string">&quot;3位的水仙花数共有%d个&quot;</span>,cnt) ;</span><br><span class="line">        <span class="keyword">if</span> ( k == <span class="number">4</span> ) <span class="built_in">printf</span>(<span class="string">&quot;4位的四叶玫瑰数共有%d个&quot;</span>,cnt) ;</span><br><span class="line">        <span class="keyword">if</span> ( k == <span class="number">5</span> ) <span class="built_in">printf</span>(<span class="string">&quot;5位的五角星数共有%d个&quot;</span>,cnt) ;</span><br><span class="line">        <span class="keyword">if</span> ( k == <span class="number">6</span> ) <span class="built_in">printf</span>(<span class="string">&quot;6位的六合数共有%d个&quot;</span>,cnt) ;</span><br><span class="line">        <span class="keyword">if</span> ( k == <span class="number">7</span> ) <span class="built_in">printf</span>(<span class="string">&quot;7位的北斗星数共有%d个&quot;</span>,cnt) ;</span><br><span class="line">        <span class="keyword">if</span> ( k == <span class="number">8</span> ) <span class="built_in">printf</span>(<span class="string">&quot;8位的八仙数共有%d个&quot;</span>,cnt) ;</span><br><span class="line">        <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; cnt ; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span>,a[i]) ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a[cnt]) ;</span><br><span class="line">    cnt = <span class="number">0</span> ; <span class="built_in">memset</span> ( a , <span class="number">0</span> , <span class="keyword">sizeof</span>(a) ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;k);</span><br><span class="line">        <span class="keyword">if</span> ( k == <span class="number">0</span> ) <span class="keyword">break</span> ;</span><br><span class="line">        solve(k) ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 3）测试</p><figure><img src="/report/experiment/e2d0793dd50f58f6ac396874a0699d1d.png" alt="图3-10程序设计题（3）的程序运行截图"><figcaption aria-hidden="true">图3-10程序设计题（3）的程序运行截图</figcaption></figure><h2 id="实验小结-2">3.3 实验小结</h2><p>（1）通过这次实验，我熟悉和掌握了函数的定义、声明；函数调用与参数传递，函数返回值类型的定义和返回值使用。</p><p>（2）通过这次实验，我熟悉和掌握了不同存储类型变量的使用。</p><p>（3）通过这次实验，我练习使用了集成开发环境中的调试功能：单步执行、设置断点、观察变量值。</p><h1 id="实验4-编译预处理实验">实验4 编译预处理实验</h1><h2 id="实验目的-3">4.1实验目的</h2><p>（1）掌握文件包含、宏定义、条件编译和assert宏的使用；</p><p>（2）练习使用集成开发环境中的调试功能：单步执行、设置断点、观察变量值。</p><p>（3）熟悉多文件编译技术</p><h2 id="实验内容-2">4.2实验内容</h2><h3 id="程序改错-1">4.2.1．程序改错</h3><p>下面是用宏来计算平方差、交换两数的源程序.在这个源程序中存在若干错误，要求对该程序进行调试修改，使之能够正确完成指定任务。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SUM a+b</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DIF a-b</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SWAP(a,b)  a=b,b=a</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a,b;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Input two integers a, b:&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a,&amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nSUM=%d\n the difference between square of a and square of b is:%d&quot;</span>,SUM, SUM*DIF);</span><br><span class="line">    SWAP(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\nNow a=%d,b=%d\n&quot;</span>,a,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <strong>解答：</strong></p><p>（1）错误修改：</p><ol type="1"><li>第2行的宏定义有误，正确形式为：</li></ol><p><code>#define SUM (a+b)</code></p><ol start="2" type="1"><li>第3行的宏定义有误，正确形式为：</li></ol><p><code>#define DIF (a-b)</code></p><ol start="3" type="1"><li>第4行的宏定义有误，正确形式为：</li></ol><p><code>#define SWAP(a,b) t=a,a=b,b=t</code></p><ol start="4" type="1"><li>第7行的宏定义不全，正确形式为：</li></ol><p><code>int a,b,t;</code></p><p>（2）错误修改后运行结果：</p><figure><img src="/report/experiment/d649e9df5e226b9769af2999639cbdd5.png" alt="图4-1 程序修改题的运行结果图"><figcaption aria-hidden="true">图4-1 程序修改题的运行结果图</figcaption></figure><h3 id="程序修改替换-1">4.2.2．程序修改替换</h3><p>下面是用函数实现求三个数中最大数、计算两浮点数之和的程序。在这个源程序中存在若干语法和逻辑错误。</p><p>要求：（1）对这个例子程序进行调试修改，使之能够正确完成指定任务；</p><p>（2）用带参数的宏替换函数max，来实现求最大数的功能。 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, c;</span><br><span class="line">  <span class="keyword">float</span> d, e;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Input three integers:&quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\nThe maximum of them is %d\n&quot;</span>,max(a,b,c));</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Input two floating point numbers:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%f %f&quot;</span>,&amp;d,&amp;e);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nThe sum of them is  %f\n&quot;</span>,sum(d,e));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> z)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m=z;</span><br><span class="line"><span class="keyword">if</span> (x&gt;y)</span><br><span class="line"><span class="keyword">if</span>(x&gt;z) m=x;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">if</span>(y&gt;z) m=y;</span><br><span class="line">    <span class="keyword">return</span> m;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">sum</span><span class="params">(<span class="keyword">float</span> x, <span class="keyword">float</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x+y;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"></span><br></pre></td></tr></table></figure><strong>解答：</strong></p><p>（1）错误修改：</p><ol type="1"><li>第2行的声明有误，正确形式为：</li></ol><p><code>int max(int x, int y, int z);</code></p><p><code>float sum(float x, float y);</code></p><p>（2）程序替换：</p><p><code>#define max(a,b,c) ( a &gt; b ) ? ( a &gt; c ? a : c ) : ( c&gt; b ? c : b )</code></p><p>（3）错误修改后运行结果：</p><p><strong><img src="/report/experiment/0d100976a62d3d09d6dbc25fee7634b7.png" alt="图4-2 程序修改替换题的运行结果图"></strong></p><p>4.2.3．跟踪调试</p><p>下面程序利用R计算圆的面积s，以及面积s的整数部分。现要求：</p><p>（1）修改程序，使程序编译通过且能运行；</p><p>（2）单步执行。进入函数integerl_fraction时，watch窗口中x为何值？在返回main时,watch窗口中i为何值？</p><p>（3）修改程序，使程序能输出面积s值的整数部分（要求四舍五入），不会输出错误信息assertionfailed。 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*实验4-3跟踪调试题程序利用R计算圆的面积s*/</span> </span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span>  R</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">float</span>  r, s;</span><br><span class="line"><span class="keyword">int</span> s_integer=<span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span> (<span class="string">&quot;Input a number: &quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%f&quot;</span>,&amp;r);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifdef</span>  R</span></span><br><span class="line">       s=<span class="number">3.14159</span>*r*r;</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;Area of round is: %f\n&quot;</span>,s);</span><br><span class="line">       s_integer=integer_fraction(s);</span><br><span class="line">       assert((s-s_integer)&lt;<span class="number">0.5</span>);</span><br><span class="line">       <span class="built_in">printf</span>(<span class="string">&quot;The integer fraction of area is %d\n&quot;</span>, s_integer);</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">integer_fraction</span><span class="params">(<span class="keyword">float</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> i=x;</span><br><span class="line">  <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> （1）错误修改：</p><ol type="1"><li>第1行的编译预处理有误，正确形式为：</li></ol><p><code>#include &lt;stdio.h&gt;</code></p><p><code>#include &lt;assert.h&gt;</code></p><ol start="2" type="1"><li>第5行未声明函数，正确形式为：</li></ol><p><code>int integer_fraction(float x);</code></p><p>（2）单步执行：</p><p>1)进入函数integerl_fraction时，watch窗口中x为何值？</p><p>2）在返回main时, watch窗口中i为何值？</p><figure><img src="/report/experiment/e2d56e18ae2574340a3e6934d608a4fa.png" alt="图4-3 跟踪调试题的单步执行图"><figcaption aria-hidden="true">图4-3 跟踪调试题的单步执行图</figcaption></figure><p>（3）错误修改：</p><ol type="1"><li>第16行的assert有误，正确形式为：</li></ol><p><code>assert((s-s_integer)&lt;1.0);</code></p><p>（4）修改后的运行结果：</p><figure><img src="/report/experiment/702a8ec0cdcfd88dc89a2946cbdd9a26.png" alt="图4-4 跟踪调试题的运行结果图"><figcaption aria-hidden="true">图4-4 跟踪调试题的运行结果图</figcaption></figure><h3 id="程序设计-3">4.2.4．程序设计</h3><p>（1）三角形的面积是，其中，a,b,c为三角形的三边，要求编写程序用带参数的宏来计算三角形的面积。定义两个带参数的宏，一个用来求s，另一个用来求area。</p><p>1 解题思路：</p><ol type="1"><li><p>对area，s进行宏定义</p></li><li><p>读入a,b,c</p></li><li><p>输出area</p></li><li><p>结束</p></li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> s ( ( a + b + c ) / 2 )</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> area ( sqrt( s * ( s - a ) * ( s - b ) * ( s - c ) ) )</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> a , b , c ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf%lf&quot;</span>,&amp;a,&amp;b,&amp;c) ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf&quot;</span>,area) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 3）程序运行结果截图</p><figure><img src="/report/experiment/cdde5a83828c0e1022b7d8872d3f435f.png" alt="图4-5程序设计题（1）的运行结果图"><figcaption aria-hidden="true">图4-5程序设计题（1）的运行结果图</figcaption></figure><p>（2）用条件编译方法来编写程序。输入一行英文字符序列，可以任选两种方式之一输出：一为原文输出；二为变换字母的大小写后输出。例如小写‘a’变成大写‘A’，大写‘D’变成小写‘d’，其他字符不变。用#define命令控制是否变换字母的大小写。例如，#defineCHANGE 1 则输出变换后的文字，若#define CHANGE 0则原文输出。</p><p>1 解题思路：</p><ol type="1"><li><p>对输入的字符串用gets()函数进行读入</p></li><li><p>使用#ifdef命令进行判断</p></li><li><p>进入相应的程序模块进行有关处理、输出</p></li><li><p>结束</p></li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10005</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> base ( <span class="meta-string">&#x27;a&#x27;</span> - <span class="meta-string">&#x27;A&#x27;</span> )</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// #define CHANGE0</span></span><br><span class="line"><span class="comment">// #define CHANGE1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[maxn] ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    gets(s) ;</span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifdef</span> CHANGE0</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,s ) ; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="meta">#<span class="meta-keyword">ifdef</span> CHANGE1</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="built_in">strlen</span>(s) ;</span><br><span class="line">        <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; cnt ; i++ ) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>( s[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;Z&#x27;</span> ) </span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span> ,s[i] + base ) ;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>( s[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;z&#x27;</span> )</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span> ,s[i] - base ) ;</span><br><span class="line">            <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,s[i] ) ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> 3）程序运行结果截图</p><figure><img src="/report/experiment/32604dbb54835fc12314ca37e0e1701c.png" alt="图4-6程序设计题（2）的运行结果图（1）"><figcaption aria-hidden="true">图4-6程序设计题（2）的运行结果图（1）</figcaption></figure><figure><img src="/report/experiment/bb661f78190a39e2843052d350189f7d.png" alt="图4-7程序设计题（2）的运行结果图（2）"><figcaption aria-hidden="true">图4-7程序设计题（2）的运行结果图（2）</figcaption></figure><p>（3）假设一个C程序由file1.c和file2.c两个源文件及一个file.h头文件组成，file1.c、file2.c和file.h的内容分别如下所述。试编辑该多文件C程序，补充file.h头文件内容，然后编译和链接。然后运行最后生成的可执行文件。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*源文件file1.c的内容*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;file.h&quot;</span></span></span><br><span class="line"><span class="keyword">int</span> x,y;             <span class="comment">/* 外部变量的定义性说明 */</span></span><br><span class="line"><span class="keyword">char</span> ch;             <span class="comment">/* 外部变量的定义性说明 */</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        x=<span class="number">10</span>;</span><br><span class="line">        y=<span class="number">20</span>;</span><br><span class="line">        ch=getchar();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;in file1 x=%d,y=%d,ch is %c\n&quot;</span>,x,y,ch);</span><br><span class="line">        func1();</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*源文件file2.c的内容为：*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;file.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func1</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        x++;</span><br><span class="line">        y++;</span><br><span class="line">        ch++;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;in file2 x=%d,y=%d,ch is %c\n&quot;</span>,x,y,ch);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> 1) 解题思路：</p><ol type="1"><li><p>对file.h进行编写</p></li><li><p>对file1.c进行修改，使其能够正常运行。</p></li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//file.h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> x,y;</span><br><span class="line"><span class="keyword">char</span> ch; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func1</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">        x++;</span><br><span class="line">        y++;</span><br><span class="line">        ch++;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;in file2 x=%d,y=%d,ch is %c\n&quot;</span>,x,y,ch);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//file1.c</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;file.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    x=<span class="number">10</span>;</span><br><span class="line">    y=<span class="number">20</span>;</span><br><span class="line">    ch=getchar();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;in file1 x=%d,y=%d,ch is %c\n&quot;</span>,x,y,ch);</span><br><span class="line">    func1();</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 3）程序运行结果截图</p><figure><img src="/report/experiment/0807a5d4a3939fe76a2ad8455ab4a4cd.png" alt="图4-8程序设计题（3）的运行结果图"><figcaption aria-hidden="true">图4-8程序设计题（3）的运行结果图</figcaption></figure><h2 id="实验小结-3">4.3实验小结</h2><p>（1）通过这次实验，我掌握了文件包含、宏定义、条件编译和assert宏的使用；</p><p>（2）通过这次实验，我练习使用了集成开发环境中的调试功能：单步执行、设置断点、观察变量值。</p><p>（3）通过这次实验，我熟悉了多文件编译技术</p><h1 id="实验5-数组实验">实验5 数组实验</h1><h2 id="实验目的-4">5.1 实验目的</h2><p>（1）掌握数组的说明、初始化和使用。</p><p>（2）掌握一维数组作为函数参数时实参和形参的用法。</p><p>（3）掌握字符串处理函数的设计，包括串操作函数及数字串与数之间转换函数实现算法。</p><p>（4）掌握基于分治策略的二分查找算法和选择法排序算法的思想，以及相关算法的实现。</p><h2 id="实验内容及要求-1">5.2 实验内容及要求</h2><h3 id="源程序改错与跟踪调试">5.2.1 源程序改错与跟踪调试</h3><p>在下面所给的源程序中，函数strcate(t,s)的功能是将字符串s连接到字符串t的尾部；函数strdelc(s,c)的功能是从字符串s中删除所有与给定字符c相同的字符，程序应该能够输出如下结果：<figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Programming <span class="keyword">Language</span></span><br><span class="line"></span><br><span class="line">ProgrammingLanguage <span class="keyword">Language</span></span><br><span class="line"></span><br><span class="line">ProgrmingLnguge</span><br></pre></td></tr></table></figure>跟踪和分析源程序中存在的问题，排除程序中的各种逻辑错误，使之能够输出正确的结果。</p><p>单步执行源程序。进跟踪进入strcate时，观察字符数组t和s中的内容，分析结果是否正确。当单步执行光条刚落在第二个while语句所在行时，i为何值？t[i]为何值？分析该结果是否存在问题。当单步执行光条落在strcate函数块结束标记即右花括号"}"所在行时，字符数组t和s分别为何值？分析是否实现了字符串连接。</p><figure><img src="/report/experiment/036bef4c566af4e0c3b3156b6647075a.png" alt="图5-1 源程序改错与跟踪调试题的示意图1"><figcaption aria-hidden="true">图5-1源程序改错与跟踪调试题的示意图1</figcaption></figure><figure><img src="/report/experiment/503af37a1c7c63b6b4c28fc1c2fdc772.png" alt="图5-2 源程序改错与跟踪调试题的示意图2"><figcaption aria-hidden="true">图5-2源程序改错与跟踪调试题的示意图2</figcaption></figure><figure><img src="/report/experiment/7d0210b6c066fa0408f28b0ea4cdcceb.png" alt="图5-3 源程序改错与跟踪调试题的示意图3"><figcaption aria-hidden="true">图5-3源程序改错与跟踪调试题的示意图3</figcaption></figure><figure><img src="/report/experiment/52de107fb13bcca726fa507c50672c12.png" alt="图5-4 源程序改错与跟踪调试题的示意图4"><figcaption aria-hidden="true">图5-4源程序改错与跟踪调试题的示意图4</figcaption></figure><p>跟踪进入函数strdelc时，观察字符数组s中的内容和字符c的值，分析结果是否正确。单步执行for语句过程中，观察字符数组s,j和k值的变化，分析该结果是否存在问题。当单步执行光条落在strdelc函数块结束标记"}"所在行时，字符串s为何值？分析是否实现了所要求的删除操作。</p><figure><img src="/report/experiment/7d0210b6c066fa0408f28b0ea4cdcceb.png" alt="图5-5 源程序改错与跟踪调试题的示意图5"><figcaption aria-hidden="true">图5-5源程序改错与跟踪调试题的示意图5</figcaption></figure><p>1）修改后的源程序： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strcate</span><span class="params">(<span class="keyword">char</span> [],<span class="keyword">char</span> [])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strdelc</span><span class="params">(<span class="keyword">char</span> [],<span class="keyword">char</span> )</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> a[]=<span class="string">&quot;Language&quot;</span>, b[]=<span class="string">&quot;Programming&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>, b,a);</span><br><span class="line">    strcate(b,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>,b,a);</span><br><span class="line">strdelc(b , <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,b);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strcate</span><span class="params">(<span class="keyword">char</span> t[],<span class="keyword">char</span> s[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>,  j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>( t[i++] != <span class="string">&#x27;\0&#x27;</span> ) ;</span><br><span class="line">    i -- ;</span><br><span class="line">    <span class="keyword">while</span>((t[i++] = s[j++] )!= <span class="string">&#x27;\0&#x27;</span>) ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strdelc</span><span class="params">(<span class="keyword">char</span> s[], <span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j,k;</span><br><span class="line">    <span class="keyword">for</span>( j = <span class="number">0</span> , k = <span class="number">0</span> ; s[j] != <span class="string">&#x27;\0&#x27;</span> ; j++)</span><br><span class="line">        <span class="keyword">if</span>(s[j] != c)s[k++] = s[j] ;</span><br><span class="line">    <span class="keyword">while</span> ( k &lt;= j ) s[k++] = <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*实验5程序改错与跟踪调试题程序*/</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strcate</span><span class="params">(<span class="keyword">char</span> [],<span class="keyword">char</span> [])</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strdelc</span><span class="params">(<span class="keyword">char</span> [],<span class="keyword">char</span> )</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[]=<span class="string">&quot;Language&quot;</span>, b[]=<span class="string">&quot;Programming&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>, b,a);</span><br><span class="line">strcate(b,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s %s\n&quot;</span>,b,a);</span><br><span class="line">strdelc(b, <span class="string">&#x27;a&#x27;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,b);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strcate</span><span class="params">(<span class="keyword">char</span> t[],<span class="keyword">char</span> s[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>,  j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(t[i++]) ;</span><br><span class="line">    <span class="keyword">while</span>((t[i++] = s[j++] )!= <span class="string">&#x27;\0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strdelc</span><span class="params">(<span class="keyword">char</span> s[], <span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> j,k;</span><br><span class="line">    <span class="keyword">for</span>(j=k=<span class="number">0</span>; s[j] != <span class="string">&#x27;\0&#x27;</span>; j++)</span><br><span class="line">        <span class="keyword">if</span>(s[j] != c)s[k++] = s[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure> ### 5.2.2 源程序完善和修改替换</p><p>(1)下面的源程序用于求解瑟夫问题：M个人围成一圈，从第一个人开始依次从1至N循环报数，每当报数为N时报数人出圈，直到圈中只剩下一个人为止。①请在源程序中的下划线处填写合适的代码来完善该程序。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 3</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[M], b[M];<span class="comment">/* 数组a存放圈中人的编号，数组b存放出圈人的编号 */</span></span><br><span class="line">    <span class="keyword">int</span> i, j, k;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; M; i++)<span class="comment">/* 对圈中人按顺序编号1—M */</span></span><br><span class="line">    a[i] = i + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = M, j = <span class="number">0</span>; i &gt; <span class="number">1</span>; i--)&#123;</span><br><span class="line">    <span class="comment">/* i表示圈中人个数，初始为M个，剩1个人时结束循环；j表示当前报数人的位置 */</span></span><br><span class="line">    <span class="keyword">for</span>(k = <span class="number">1</span>; k &lt;= N; k++)<span class="comment">/* 1至N报数 */</span></span><br><span class="line">    <span class="keyword">if</span>(++j &gt; i - <span class="number">1</span>) j = <span class="number">0</span>;<span class="comment">/* 最后一个人报数后第一个人接着报，形成一个圈 */</span></span><br><span class="line">                b[M-i] = j ? _______:______;<span class="comment">/* 将报数为N的人的编号存入数组b */</span></span><br><span class="line">                <span class="keyword">if</span>(j)</span><br><span class="line">    <span class="keyword">for</span>(k = --j; k &lt; i; k++)<span class="comment">/* 压缩数组a，使报数为N的人出圈 */</span></span><br><span class="line">    ______________;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; M<span class="number">-1</span>; i++)<span class="comment">/* 按次序输出出圈人的编号 */</span></span><br><span class="line">    <span class="built_in">printf</span>(“%<span class="number">6</span>d”, b[i]);</span><br><span class="line">    <span class="built_in">printf</span>(“%<span class="number">6</span>d\n”, a[<span class="number">0</span>]);<span class="comment">/* 输出圈中最后一个人的编号 */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> 填空后的程序： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 3</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[M], b[M];<span class="comment">/* 数组a存放圈中人的编号，数组b存放出圈人的编号 */</span></span><br><span class="line">    <span class="keyword">int</span> i, j, k;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; M; i++)<span class="comment">/* 对圈中人按顺序编号1—M */</span></span><br><span class="line">    a[i] = i + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(i = M , j = <span class="number">0</span> ; i &gt; <span class="number">1</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/* i表示圈中人个数，初始为M个，剩1个人时结束循环；j表示当前报数人的位置 */</span></span><br><span class="line">        <span class="keyword">for</span>(k = <span class="number">1</span>; k &lt;= N; k++)<span class="comment">/* 1至N报数 */</span></span><br><span class="line">            <span class="keyword">if</span>( ++j &gt; i - <span class="number">1</span>) j = <span class="number">0</span> ;  <span class="comment">/* 最后一个人报数后第一个人接着报，形成一个圈 */</span></span><br><span class="line">        b[M-i] = ( j ? a[j<span class="number">-1</span>] : a[<span class="number">1</span>] ) ;<span class="comment">/* 将报数为N的人的编号存入数组b */</span></span><br><span class="line">        <span class="keyword">if</span>(j)</span><br><span class="line">            <span class="keyword">for</span>(k = --j ; k &lt; i; k++)<span class="comment">/* 压缩数组a，使报数为N的人出圈 */</span></span><br><span class="line">                a[k] = a[k+<span class="number">1</span>] ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i = <span class="number">0</span> ; i &lt; M - <span class="number">1</span> ; i++ )<span class="comment">/* 按次序输出出圈人的编号 */</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%6d&quot;</span>, b[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%6d\n&quot;</span>, a[<span class="number">0</span>]);<span class="comment">/* 输出圈中最后一个人的编号 */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">3 6 9 2 7 1 8 5 10 4</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>②上面的程序中使用数组元素的值表示圈中人的编号，故每当有人出圈时都要压缩数组，这种算法不够精炼。如果采用做标记的办法，即每当有人出圈时对相应数组元素做标记，从而可省掉压缩数组的时间，这样处理效率会更高一些。请采用做标记的办法修改程序，并使修改后的程序与原程序具有相同的功能。</p><p>优化后的程序： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 10</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 3</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> vis[M+<span class="number">1</span>] = &#123;<span class="number">0</span>&#125; , now = <span class="number">0</span> ; ;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= M ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> ( re <span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= N ; j++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ( ++ now &gt; M ) now = <span class="number">1</span> ;</span><br><span class="line">            <span class="keyword">if</span> ( vis[now] ) j-- ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%6d&quot;</span>,now) ;</span><br><span class="line">        vis[now] = <span class="number">1</span> ; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure> ### 5.2.3 程序设计</p><p>以下（1）至（3）题对应Educoder教学平台"C语言实验"课程，实验5，第10关实验5-1、第11关实验5-2，以及第12关实验5-3。</p><p>(1)输入一个整数，将它在内存中二进制表示的每一位转化成对应的数字字符并且存放到一个字符数组中，然后输出该整数的二进制表示。</p><p>1 解题思路：</p><ol type="1"><li><p>将字符数组全部初始化为字符0</p></li><li><p>输入整数x</p></li><li><p>如果整数x的二进制末位为1，则字符数组对应的位置为1，反之为0，并将整数x右移一位。</p></li><li><p>输出字符数组c</p></li><li><p>结束</p></li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 40</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> c[maxn] ;</span><br><span class="line"><span class="keyword">int</span> x ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x) ;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= <span class="number">32</span> ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        c[i] = x&amp;<span class="number">1</span> ? <span class="string">&#x27;1&#x27;</span> : <span class="string">&#x27;0&#x27;</span> ;</span><br><span class="line">        x &gt;&gt;= <span class="number">1</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">32</span> ; i &gt;= <span class="number">1</span> ; i-- ) </span><br><span class="line">        <span class="built_in">printf</span> (<span class="string">&quot;%c&quot;</span>,c[i]) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> 3）程序运行结果截图</p><figure><img src="/report/experiment/b180a4ebd84b7f433832ab199b1fa09a.png" alt="图5-6 程序设计题1的程序运行截图"><figcaption aria-hidden="true">图5-6程序设计题1的程序运行截图</figcaption></figure><p>（2）编写一个C程序，要求采用模块化程序设计思想，将相关功能用函数实现，并提供菜单选项。该程序具有以下功能：</p><p>①"成绩输入"，输入n个学生的姓名和C语言课程的成绩。</p><p>②"成绩排序"，将成绩按从高到低的次序排序，姓名同时进行相应调整。</p><p>③"成绩输出"，输出排序后所有学生的姓名和C语言课程的成绩。</p><p>④"成绩查找"，输入一个C语言课程成绩值，用二分查找进行搜索。如果查找到有该成绩，则输出该成绩学生的姓名和C语言课程的成绩；否则，输出提示"notfound!"。</p><p>1 解题思路：</p><ol type="1"><li><p>输入order</p></li><li><p>对order进行判断：</p></li></ol><ul><li><p>如果order为1 ，调用函数进行数据录入</p></li><li><p>如果order为2 ，调用函数进行归并排序</p></li><li><p>如果order为3 ，调用函数进行姓名、成绩的输出</p></li><li><p>如果order为4 ，调用函数进行二分查找</p></li><li><p>如果order为0 ， 则跳出while循环</p></li></ul><ol start="3" type="1"><li>结束</li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1005</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">15</span>] ;</span><br><span class="line">    <span class="keyword">int</span> score ;</span><br><span class="line">&#125;stu[maxn],r[maxn];</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,order, first = <span class="number">1</span> , last , cnt=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n) ;</span><br><span class="line">    cnt += n ;</span><br><span class="line">    last = first + n - <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">for</span> (re <span class="keyword">int</span> i = first ; i &lt;= last ; i ++ )</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s%d&quot;</span>,stu[i].name , &amp;stu[i].score) ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d records were input!\n&quot;</span>,n) ;</span><br><span class="line">    first = last + <span class="number">1</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span> <span class="params">( struct student *x , struct student *y )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">tmp</span> ;</span></span><br><span class="line">    tmp = *x ;</span><br><span class="line">    *x = *y ;</span><br><span class="line">    *y = tmp ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">msort</span> <span class="params">( <span class="keyword">int</span> s , <span class="keyword">int</span> t )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( s == t ) <span class="keyword">return</span> ;</span><br><span class="line">    re <span class="keyword">int</span> mid = ( s + t ) &gt;&gt; <span class="number">1</span> ;</span><br><span class="line">    msort ( s , mid ) ;</span><br><span class="line">    msort ( mid + <span class="number">1</span> , t) ;</span><br><span class="line">    <span class="keyword">int</span> i = s , j = mid + <span class="number">1</span> , k = s ;</span><br><span class="line">    <span class="keyword">while</span> ( i &lt;= mid &amp;&amp; j &lt;= t ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( stu[i].score &gt;= stu[j].score )</span><br><span class="line">            swap ( &amp;r[k++] , &amp;stu[i++] ) ;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            swap ( &amp;r[k++] , &amp;stu[j++] ) ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> ( i &lt;= mid ) </span><br><span class="line">        swap ( &amp;r[k++] , &amp;stu[i++] ) ;</span><br><span class="line">    <span class="keyword">while</span> ( j &lt;= t )</span><br><span class="line">        swap ( &amp;r[k++] , &amp;stu[j++] ) ;</span><br><span class="line">    <span class="keyword">for</span>(re <span class="keyword">int</span> i = s ; i &lt;= t ; i ++ ) </span><br><span class="line">        swap ( &amp;r[i] , &amp;stu[i] ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    msort( <span class="number">1</span> , cnt ) ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Reorder finished!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= cnt ; i ++ )</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s %d\n&quot;</span>,stu[i].name,stu[i].score);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">func4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x , sign = <span class="number">0</span> ;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;x) ;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= cnt ; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( stu[i].score == x )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %d\n&quot;</span>,stu[i].name,stu[i].score) ;</span><br><span class="line">            sign = <span class="number">1</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( !sign ) <span class="built_in">printf</span>(<span class="string">&quot;not found!\n&quot;</span>) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;order);</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">1</span> ) func1();</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">2</span> ) func2();</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">3</span> ) func3();</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">4</span> ) func4();</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">0</span> ) <span class="keyword">break</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> * 程序运行结果截图</p><figure><img src="/report/experiment/f2dc5ca1f4185cbbc09c834ad3f2bf70.png" alt="图5-7 程序设计题2的程序运行截图"><figcaption aria-hidden="true">图5-7程序设计题2的程序运行截图</figcaption></figure><p>（3）求解N皇后问题，即在N×N的棋盘上摆放N个皇后，要求任意两个皇后不能在同一行、同一列、同一对角线上。输入棋盘的大小N（N取值1-10），如果能满足摆放要求，则输出所有可能的摆放法的数量，否则输出"无解。"</p><p>1 解题思路：</p><ol type="1"><li><p>输入n</p></li><li><p>调用search函数进行搜索</p></li><li><p>输出结果</p></li><li><p>结束</p></li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> crax[<span class="number">2000</span>],cray[<span class="number">2000</span>],cx[<span class="number">2000</span>];</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">2000</span>];</span><br><span class="line"><span class="keyword">int</span> n,tot;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (x&gt;n) tot++ ;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> y=<span class="number">1</span>;y&lt;=n;y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (crax[x+y]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (cray[x-y+<span class="number">10</span>]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (cx[y]) <span class="keyword">continue</span>;</span><br><span class="line">ans[x]=y;</span><br><span class="line">crax[x+y]=<span class="number">1</span>;</span><br><span class="line">cray[x-y+<span class="number">10</span>]=<span class="number">1</span>;</span><br><span class="line">cx[y]=<span class="number">1</span>;</span><br><span class="line">search(x+<span class="number">1</span>);</span><br><span class="line">crax[x+y]=<span class="number">0</span>;</span><br><span class="line">cray[x-y+<span class="number">10</span>]=<span class="number">0</span>;</span><br><span class="line">cx[y]=<span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">if</span> ( n == <span class="number">2</span> || n == <span class="number">3</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;无解&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">search(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,tot);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 3）程序运行结果示意图</p><figure><img src="/report/experiment/124d718fecb8b47c59cb1064a608ea63.png" alt="图5-8 程序设计题3的程序运行截图"><figcaption aria-hidden="true">图5-8程序设计题3的程序运行截图</figcaption></figure><figure><img src="/report/experiment/aea7efc81adbc9d6bdc954225bfde329.png" alt="图5-9 程序设计题3的程序运行截图"><figcaption aria-hidden="true">图5-9程序设计题3的程序运行截图</figcaption></figure><h3 id="实验小结-4">5.3 实验小结</h3><p>（1）通过这次实验，我掌握了数组的说明、初始化和使用。</p><p>（2）通过这次实验，我掌握了一维数组作为函数参数时实参和形参的用法。</p><p>（3）通过这次实验，我掌握了字符串处理函数的设计，包括串操作函数及数字串与数之间转换函数实现算法。</p><p>（4）通过这次实验，我掌握了基于分治策略的二分查找算法和选择法排序算法的思想，以及相关算法的实现。</p><h1 id="实验6-指针实验">实验6 指针实验</h1><h2 id="实验目的-5">6.1、实验目的</h2><p>（1）熟练掌握指针的说明、赋值、使用。</p><p>（2）掌握用指针引用数组的元素，熟悉指向数组的指针的使用。</p><p>（3）熟练掌握字符数组与字符串的使用，掌握指针数组及字符指针数组的用法。</p><p>（4）掌握指针函数与函数指针的用法。</p><p>（5）掌握带有参数的main函数的用法。</p><h2 id="实验题目及要求">6.2、实验题目及要求</h2><h3 id="源程序改错题">6.2.1 源程序改错题</h3><p>在下面所给的源程序中，函数strcopy(t,s)的功能是将字符串s复制给字符串t，并且返回串t的首地址。请单步跟踪程序，根据程序运行时出现的现象或观察到的字符串的值，分析并排除源程序的逻辑错误，使之能按照要求输出如下结果：<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Input</span> <span class="selector-tag">a</span> <span class="selector-tag">string</span>:</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">programming</span>↙ （键盘输入）</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">programming</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">Input</span> <span class="selector-tag">a</span> <span class="selector-tag">string</span> <span class="selector-tag">again</span>:</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">language</span>↙ （键盘输入）</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">language</span></span><br></pre></td></tr></table></figure> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strcopy</span><span class="params">(<span class="keyword">char</span> *, <span class="keyword">const</span> <span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *s1, *s2, *s3;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input a string:\n&quot;</span>, s2);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s2);</span><br><span class="line">strcopy(s1, s2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input a string again:\n&quot;</span>, s2);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s2);</span><br><span class="line">s3 = strcopy(s1, s2);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, s3);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*将字符串s复制给字符串t，并且返回串t的首地址*/</span></span><br><span class="line"><span class="function"><span class="keyword">char</span> * <span class="title">strcopy</span><span class="params">(<span class="keyword">char</span> *t, <span class="keyword">const</span> <span class="keyword">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(*t++ = *s++);</span><br><span class="line"><span class="keyword">return</span> (t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> <strong>解答：</strong></p><p>（1）错误修改：</p><ol type="1"><li>第5行的字符数组定义错误，正确形式为：</li></ol><p><code>#define maxn 10005</code></p><p><code>char s1[maxn] , s2[maxn] , s3[maxn] ;</code></p><ol start="2" type="1"><li>第12行的语句错误，正确形式为：</li></ol><p><code>strcopy(s3, s2);</code></p><p>（2）错误修改后运行结果：</p><figure><img src="/report/experiment/8d4284bb43019c24466744bb4c462f9b.png" alt="图6-1 源程序改错题的程序运行结果示意图"><figcaption aria-hidden="true">图6-1源程序改错题的程序运行结果示意图</figcaption></figure><h3 id="源程序完善修改替换题">6.2.2源程序完善、修改替换题</h3><p>（1）下面程序中函数strsort用于对字符串进行升序排序，在主函数中输入N个字符串（字符串长度不超过49）存入通过malloc动态分配的存储空间，然后调用strsort对这N个串按字典序升序排序。</p><p>①请在源程序中的下划线处填写合适的代码来完善该程序。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;_________&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 4</span></span><br><span class="line"><span class="comment">/*对指针数组s指向的size个字符串进行升序排序*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strsort</span><span class="params">(<span class="keyword">char</span> *s[], <span class="keyword">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">_______temp;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;size<span class="number">-1</span>; i++)</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;size-i<span class="number">-1</span>; j++)</span><br><span class="line"><span class="keyword">if</span> (___________)</span><br><span class="line">&#123;</span><br><span class="line">temp = s[j];</span><br><span class="line"> ___________;</span><br><span class="line">s[j+<span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">char</span> *s[N], t[<span class="number">50</span>];</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;N; i++)</span><br><span class="line">&#123;</span><br><span class="line">gets(t);</span><br><span class="line">s[i] = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="built_in">strlen</span>(t)+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">strcpy</span>(_______);</span><br><span class="line">&#125;</span><br><span class="line">strsort(________);</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;N; i++)&#123;<span class="built_in">puts</span>(s[i]); <span class="built_in">free</span>(s[i]);&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></p><p><strong>解答：</strong>替换后的程序如下所示： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 4</span></span><br><span class="line"><span class="comment">/*对指针数组s指向的size个字符串进行升序排序*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strsort</span><span class="params">(<span class="keyword">char</span> *s[], <span class="keyword">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *temp ;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;size<span class="number">-1</span>; i++)</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;size-i<span class="number">-1</span>; j++)</span><br><span class="line"><span class="keyword">if</span> ( <span class="built_in">strcmp</span>( s[j] , s[j+<span class="number">1</span>]) &gt; <span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line">temp = s[j];</span><br><span class="line">s[j] = s[j+<span class="number">1</span>] ;</span><br><span class="line">s[j+<span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">char</span> *s[N], t[<span class="number">50</span>];</span><br><span class="line"><span class="keyword">for</span> ( i=<span class="number">0</span> ; i&lt;N ; i++)</span><br><span class="line">&#123;</span><br><span class="line">gets(t);</span><br><span class="line">s[i] = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="built_in">strlen</span>(t)+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">strcpy</span>( s[i] , t );</span><br><span class="line">&#125;</span><br><span class="line">strsort( s , N );</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;N; i++)&#123;<span class="built_in">puts</span>(s[i]); <span class="built_in">free</span>(s[i]);&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> <img src="/report/experiment/54f42550a635245e5769693d5a0ce336.png" alt="图6-2 源程序替换题的程序运行结果示意图"></p><p>②数组作为函数参数其本质类型是指针。例如，对于形参char*s[]，编译器将其解释为char**s，两种写法完全等价。请用二级指针形参重写strsort函数，并且在该函数体的任何位置都不允许使用下标引用。</p><p><strong>解答：</strong>替换后的程序如下所示： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 4</span></span><br><span class="line"><span class="comment">/*对指针数组s指向的size个字符串进行升序排序*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strsort</span><span class="params">(<span class="keyword">char</span> **s , <span class="keyword">int</span> size)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> *temp ;</span><br><span class="line"><span class="keyword">int</span> i, j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;size<span class="number">-1</span>; i++)</span><br><span class="line"><span class="keyword">for</span> (j=<span class="number">0</span>; j&lt;size-i<span class="number">-1</span>; j++)</span><br><span class="line"><span class="keyword">if</span> ( <span class="built_in">strcmp</span>( *( s + j ) , *( s + j + <span class="number">1</span> ) ) &gt; <span class="number">0</span> )</span><br><span class="line">&#123;</span><br><span class="line">temp = *( s + j ) ;</span><br><span class="line">    ( *( s + j ) ) = *( s + j + <span class="number">1</span> );</span><br><span class="line">*( s + j + <span class="number">1</span> ) = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">char</span> *s[N], t[<span class="number">50</span>];</span><br><span class="line"><span class="keyword">for</span> ( i=<span class="number">0</span> ; i&lt;N ; i++)</span><br><span class="line">&#123;</span><br><span class="line">gets(t);</span><br><span class="line">s[i] = (<span class="keyword">char</span> *)<span class="built_in">malloc</span>(<span class="built_in">strlen</span>(t)+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">strcpy</span>( s[i] , t );</span><br><span class="line">&#125;</span><br><span class="line">strsort( s , N );</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;N; i++)&#123;<span class="built_in">puts</span>(s[i]); <span class="built_in">free</span>(s[i]);&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> <img src="/report/experiment/54f42550a635245e5769693d5a0ce336.png" alt="图6-3 源程序替换题的程序运行结果示意图"></p><p>（2）下面源程序通过函数指针和菜单选择来调用库函数实现字符串操作；串复制strcpy、串连接strcat或串分解strtok。</p><p>①请在源程序中的下划线处填写合适的代码来完善该程序，使之能按照要求输出下面结果：<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span> copy <span class="keyword">string</span>.</span><br><span class="line"></span><br><span class="line"><span class="number">2</span> connect <span class="keyword">string</span>.</span><br><span class="line"></span><br><span class="line"><span class="number">3</span> parse <span class="keyword">string</span>.</span><br><span class="line"></span><br><span class="line"><span class="number">4</span> exit.</span><br><span class="line"></span><br><span class="line">input <span class="keyword">a</span> <span class="built_in">number</span> (<span class="number">1</span><span class="number">-4</span>) please!</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>↙ （键盘输入）</span><br><span class="line"></span><br><span class="line">input <span class="keyword">the</span> <span class="keyword">first</span> <span class="keyword">string</span> please!</span><br><span class="line"></span><br><span class="line"><span class="keyword">the</span> more you learn,↙ （键盘输入）</span><br><span class="line"></span><br><span class="line">input <span class="keyword">the</span> <span class="keyword">second</span> <span class="keyword">string</span> please!</span><br><span class="line"></span><br><span class="line"><span class="keyword">the</span> more you <span class="built_in">get</span>. ↙ （键盘输入）</span><br><span class="line"></span><br><span class="line"><span class="keyword">the</span> <span class="built_in">result</span> is <span class="keyword">the</span> more you learn, <span class="keyword">the</span> more you <span class="built_in">get</span>.</span><br></pre></td></tr></table></figure> <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">____________________;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">80</span>], b[<span class="number">80</span>], *result;</span><br><span class="line"><span class="keyword">int</span> choice;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t1 copy string.\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t2 connect string.\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t3 parse string.\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t4 exit.\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\tinput a number (1-4) please.\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line">&#125;<span class="keyword">while</span>(choice&lt;<span class="number">1</span> || choice&gt;<span class="number">4</span>);</span><br><span class="line"><span class="keyword">switch</span>(choice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:p = <span class="built_in">strcpy</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:p = <span class="built_in">strcat</span>;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:p = strtok;<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:<span class="keyword">goto</span> down;</span><br><span class="line">&#125;</span><br><span class="line">getchar();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input the first string please!\n&quot;</span>);</span><br><span class="line">______________________;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;input the second string please!\n&quot;</span>);</span><br><span class="line">______________________;</span><br><span class="line">result = ___________(a, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;the result is %s\n&quot;</span>, result);</span><br><span class="line">&#125;</span><br><span class="line">down:</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><strong>解答：</strong>替换后的程序如下所示： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span>* (*p)( <span class="keyword">char</span> a[] , <span class="keyword">const</span> <span class="keyword">char</span> b[] );</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">80</span>], b[<span class="number">80</span>], *result;</span><br><span class="line">    <span class="keyword">int</span> choice;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\t\t1 copy string.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\t\t2 connect string.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\t\t3 parse string.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\t\t4 exit.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\t\tinput a number (1-4) please.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line">        &#125;<span class="keyword">while</span>(choice&lt;<span class="number">1</span> || choice&gt;<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">switch</span>(choice)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:p = <span class="built_in">strcpy</span>;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:p = <span class="built_in">strcat</span>;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">3</span>:p = strtok;<span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">4</span>:<span class="keyword">goto</span> down;</span><br><span class="line">    &#125;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;input the first string please!\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;input the second string please!\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,b);</span><br><span class="line">    result = p(a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;the result is %s\n&quot;</span>, result);</span><br><span class="line">    &#125;</span><br><span class="line">        down:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> <img src="/report/experiment/34e67db19363fc751ec55f8da9bb2fdf.png" alt="图6-4 源程序修改替换题的程序运行结果示意图"></p><p>②函数指针的一个用途是用户散转程序，即通过一个转移表（函数指针数组）来实现多分枝函数处理，从而省去了大量的if语句或者switch语句。转移表中存放了各个函数的入口地址（函数名），根据条件的设定来查表选择执行相应的函数。请使用转移表而不是switch语句重写以上程序。</p><p><strong>解答：</strong>替换后的程序如下所示： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta"># <span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span>* (*ope[])( <span class="keyword">char</span> a[] , <span class="keyword">const</span> <span class="keyword">char</span> b[] ) = &#123; <span class="built_in">strcpy</span> , <span class="built_in">strcat</span> , strtok &#125; ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span> <span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span>* (*p)( <span class="keyword">char</span> a[] , <span class="keyword">const</span> <span class="keyword">char</span> b[] );</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">80</span>], b[<span class="number">80</span>], *result;</span><br><span class="line">    <span class="keyword">int</span> choice;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\t\t1 copy string.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\t\t2 connect string.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\t\t3 parse string.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\t\t4 exit.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\t\tinput a number (1-4) please.\n&quot;</span>);</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;choice);</span><br><span class="line">        &#125;<span class="keyword">while</span>(choice&lt;<span class="number">1</span> || choice&gt;<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">if</span> ( choice == <span class="number">4</span> ) <span class="keyword">goto</span> down;</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;input the first string please!\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,a);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;input the second string please!\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,b);</span><br><span class="line">    result = (ope[choice<span class="number">-1</span>]) (a, b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;the result is %s\n&quot;</span>, result);</span><br><span class="line">    &#125;</span><br><span class="line">        down:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> <img src="/report/experiment/34e67db19363fc751ec55f8da9bb2fdf.png" alt="图6-5 源程序替换题的程序运行结果示意图"></p><p>3、跟踪调试题</p><p>请按下面的要求对源程序进行操作，并回答问题和排除错误。</p><p>（1）单步执行。进入strcpy时watch窗口中s为何值？返回main时,watch窗口中s为何值？</p><p>（2）排除错误，使程序输出结果为：there is a boat on the lake.<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strcpy</span><span class="params">(<span class="keyword">char</span> *,<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">20</span>],b[<span class="number">60</span>]=<span class="string">&quot;there is a boat on the lake.&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,<span class="built_in">strcpy</span>(a,b));</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strcpy</span><span class="params">(<span class="keyword">char</span> *s,<span class="keyword">char</span> *t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(*s++=*t++)</span><br><span class="line">    ;</span><br><span class="line">    <span class="keyword">return</span> (s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> <img src="/report/experiment/0c68b97a23ca1f852f2268968acb972e.png" alt="图6-6 跟踪调试题的程序运行结果示意图"></p><figure><img src="/report/experiment/2b5a5fc1b1a19421c03513ca4d4a9631.png" alt="图6-7 跟踪调试题的程序运行结果示意图"><figcaption aria-hidden="true">图6-7跟踪调试题的程序运行结果示意图</figcaption></figure><p>替换后的程序如下所示： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strcpy</span><span class="params">(<span class="keyword">char</span> *,<span class="keyword">char</span> *)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">20</span>],b[<span class="number">60</span>]=<span class="string">&quot;there is a boat on the lake.&quot;</span>;</span><br><span class="line">    <span class="built_in">strcpy</span>(a,b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">char</span> *<span class="title">strcpy</span><span class="params">(<span class="keyword">char</span> *s,<span class="keyword">char</span> *t)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(*s++=*t++);</span><br><span class="line">    <span class="keyword">return</span> (s);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 4、编程设计题</p><p>（1）指定main函数的参数</p><p>在IDE（比如DevC++）中，选择"<strong>运行</strong>"｜"<strong>参数</strong>"菜单，在"<strong>传递给主程序的参数</strong>"文本框中输入main函数的参数arg1 arg2arg3，只输入命令行中文件名后的参数，文件名不作为参数输入，参数间以空格隔开。编写程序在命令行输出这三个参数。（注意不同IDE输入参数的方式不相同，可参考各个IDE的使用手册。）</p><ol type="1"><li>解题思路：</li></ol><ol type="1"><li><p>输入n个字符串</p></li><li><p>输出n个字符串</p></li><li><p>结束</p></li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">( <span class="keyword">int</span> argc , <span class="keyword">char</span>* argv[] )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; argc ; i++ ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>,argv[i]) ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure><img src="/report/experiment/68d62f40a04ea20847c455fedec76867.png" alt="图6-8 程序设计题1的程序运行结果示意图"><figcaption aria-hidden="true">图6-8程序设计题1的程序运行结果示意图</figcaption></figure><p>以下（2）至（5）题对应Educoder教学平台"C语言实验"课程，实验6，第13关实验6-1、第14关实验6-2、第15关实验6-3,以及第16关实验6-4。</p><p>（2）一个长整型变量占4个字节，其中每个字节又分成高4位和低4位。输入一个长整型变量，要求从高字节开始，依次取出每个字节的高4位和低4位并以十六进制数字字符的形式进行显示，通过指针取出每字节。</p><p>样例输入：15</p><p>样例输出：0000000F</p><ol type="1"><li>解题思路：</li></ol><ol type="1"><li><p>输入k</p></li><li><p>定义指针p，类型为unsigned short</p></li><li><p>依次取出对应位置上的数字并输出</p></li><li><p>结束</p></li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">int</span> k ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">&quot;%u&quot;</span>,&amp;k) ;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">short</span> *p = (<span class="keyword">unsigned</span> <span class="keyword">short</span>*) &amp;k ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%.4X%.4X&quot;</span>,*(p+<span class="number">1</span>),*p) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> <img src="/report/experiment/d2eeef1b20f5aa09af709838bb26633b.png" alt="图6-9 程序设计题2的程序运行结果示意图"></p><p>（3）旋转是图像处理的基本操作，编程实现一个将一个图像逆时针旋转90°。提示：计算机中的图像可以用一个矩阵来表示，旋转一个图像就是旋转对应的矩阵。将旋转矩阵的功能定义成函数，通过使用指向数组元素的指针作为参数使该函数能处理任意大小的矩阵。要求在main函数中输入图像矩阵的行数n和列数m，接下来的n行每行输入m个整数，表示输入的图像。输出原始矩阵逆时针旋转90°后的矩阵。</p><p>样例输入： <figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">2 </span><span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">1 </span><span class="number">5</span> <span class="number">3</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">3 </span><span class="number">2</span> <span class="number">4</span></span><br></pre></td></tr></table></figure> 样例输出： <figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">3 </span><span class="number">4</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">5 </span><span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">1 </span><span class="number">3</span></span><br></pre></td></tr></table></figure> 1 解题思路：</p><ol type="1"><li><p>输入n,m</p></li><li><p>输入对应的矩阵</p></li><li><p>对矩阵进行旋转并输出</p></li><li><p>结束</p></li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n , m ;</span><br><span class="line"><span class="keyword">int</span> a[maxn][maxn] ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;n,&amp;m) ;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ;i++)</span><br><span class="line">        <span class="keyword">for</span>( re <span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= m ; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i][j]) ;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = m ; i &gt;= <span class="number">1</span> ; i-- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>( re <span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= n<span class="number">-1</span> ; j++ )</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[j][i]) ;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,a[n][i]) ;</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> <img src="/report/experiment/ff82d4baa9d6ba6f34040c59ec340d45.png" alt="图6-10 程序设计题3的程序运行结果示意图"></p><p>（4）输入n行文本，每行不超过80个字符，用字符指针数组指向键盘输入的n行文本，且n行文本的存储无冗余，删除每一行中的前置空格（''）和水平制表符（'）。要求：将删除一行文本中前置空格和水平制表符的功能定义成函数，在main函数中输出删除前置空格符的各行。</p><p>1 解题思路：</p><ol type="1"><li><p>读入字符串s</p></li><li><p>调用del()函数进行删除</p></li><li><p>在主函数中对字符串进行输出</p></li><li><p>结束</p></li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[maxn] ;</span><br><span class="line"><span class="keyword">int</span> cnt ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">del</span><span class="params">( <span class="keyword">char</span> s[] )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt = <span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">char</span> tmp[maxn] ;</span><br><span class="line">    re <span class="keyword">int</span> len = <span class="built_in">strlen</span>(s) , i = <span class="number">0</span> , j , k = <span class="number">0</span> ;</span><br><span class="line">    <span class="keyword">while</span> ( s[i++] == <span class="string">&#x27; &#x27;</span> ) ;</span><br><span class="line">    i-- ;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> j = i ; j &lt; len ; j++ )</span><br><span class="line">    <span class="keyword">if</span> ( s[j] != <span class="string">&#x27;\t&#x27;</span> )</span><br><span class="line">        tmp[k++] = s[j] ;</span><br><span class="line">    cnt = <span class="built_in">strlen</span>(tmp) ;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; cnt ; i++ )</span><br><span class="line">        s[i] = tmp[i] ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> ( gets(s) ) </span><br><span class="line">    &#123;</span><br><span class="line">        del(s) ;</span><br><span class="line">        <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; cnt ; i++ )</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,s[i]) ;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>) ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> <img src="/report/experiment/c2744de136b914f686d45625bcf02d3c.png" alt="图6-11 程序设计题4的程序运行结果示意图"></p><p>（5）编写8个任务函数，一个scheduler调度函数和一个execute执行函数。仅在main函数中调用scheduler函数，scheduler函数要求用最快的方式调度执行用户指定的任务函数。</p><p>①先设计task0, task1, task2, task3, task4, task5, task6,task7共8个任务函数，每个任务函数的任务就是输出该任务被调用的字符串。例如，第0个任务函数输出"task0is called!"，第1个任务函数输出"task1 is called!"，以此类推。</p><p>②scheduler函数根据键盘输入的数字字符的先后顺序，一次调度选择对应的任务函数。例如，输入：1350并回车，则scheduler函数一次调度选择task1,task3, taks5,task0，然后以函数指针数组和任务个数为参数将调度选择结果传递给execute函数并调用execute函数。</p><p>③execute函数根据scheduler函数传递的指针数组和任务个数为参数，按照指定的先后顺序依此调用执行选定的任务函数。</p><p>例如，当输入13607122并回车，程序运行结果如下： <figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">task1 <span class="keyword">is</span> <span class="keyword">called</span>!</span><br><span class="line"></span><br><span class="line">task3 <span class="keyword">is</span> <span class="keyword">called</span>!</span><br><span class="line"></span><br><span class="line">task6 <span class="keyword">is</span> <span class="keyword">called</span>!</span><br><span class="line"></span><br><span class="line">task0 <span class="keyword">is</span> <span class="keyword">called</span>!</span><br><span class="line"></span><br><span class="line">task7 <span class="keyword">is</span> <span class="keyword">called</span>!</span><br><span class="line"></span><br><span class="line">task1 <span class="keyword">is</span> <span class="keyword">called</span>!</span><br><span class="line"></span><br><span class="line">task2 <span class="keyword">is</span> <span class="keyword">called</span>!</span><br><span class="line"></span><br><span class="line">task2 <span class="keyword">is</span> <span class="keyword">called</span>!</span><br></pre></td></tr></table></figure> 1解题思路：</p><ol type="1"><li><p>在main()函数中调用scheduler()函数</p></li><li><p>读入字符串，并将其转化为数字</p></li><li><p>调用对应的task函数</p></li><li><p>结束</p></li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[maxn] ;</span><br><span class="line"><span class="keyword">int</span>  a[maxn] ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">task0</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="built_in">puts</span>(<span class="string">&quot;task0 is called!&quot;</span>) ;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">task1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="built_in">puts</span>(<span class="string">&quot;task1 is called!&quot;</span>) ;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">task2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="built_in">puts</span>(<span class="string">&quot;task2 is called!&quot;</span>) ;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">task3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="built_in">puts</span>(<span class="string">&quot;task3 is called!&quot;</span>) ;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">task4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="built_in">puts</span>(<span class="string">&quot;task4 is called!&quot;</span>) ;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">task5</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="built_in">puts</span>(<span class="string">&quot;task5 is called!&quot;</span>) ;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">task6</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="built_in">puts</span>(<span class="string">&quot;task6 is called!&quot;</span>) ;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">task7</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="built_in">puts</span>(<span class="string">&quot;task7 is called!&quot;</span>) ;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">execute</span> <span class="params">( <span class="keyword">int</span> arr[] , <span class="keyword">int</span> cnt )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; cnt ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( a[i] == <span class="number">0</span> ) task0() ;</span><br><span class="line">        <span class="keyword">if</span> ( a[i] == <span class="number">1</span> ) task1() ;</span><br><span class="line">        <span class="keyword">if</span> ( a[i] == <span class="number">2</span> ) task2() ;</span><br><span class="line">        <span class="keyword">if</span> ( a[i] == <span class="number">3</span> ) task3() ;</span><br><span class="line">        <span class="keyword">if</span> ( a[i] == <span class="number">4</span> ) task4() ;</span><br><span class="line">        <span class="keyword">if</span> ( a[i] == <span class="number">5</span> ) task5() ;</span><br><span class="line">        <span class="keyword">if</span> ( a[i] == <span class="number">6</span> ) task6() ;</span><br><span class="line">        <span class="keyword">if</span> ( a[i] == <span class="number">7</span> ) task7() ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">scheduler</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s) ;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="built_in">strlen</span>(s) ;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; cnt ; i++ )</span><br><span class="line">        a[i] = s[i] - <span class="string">&#x27;0&#x27;</span> ;</span><br><span class="line">    execute ( a , cnt ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    scheduler() ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> <img src="/report/experiment/6d98d6532cae04ed574d5ed52504e312.png" alt="图6-12 程序设计题5的程序运行结果示意图"></p><h2 id="实验小结-5">6.3 实验小结</h2><p>（1）通过这次实验，我熟练掌握了指针的说明、赋值、使用。</p><p>（2）通过这次实验，我掌握了用指针引用数组的元素，熟悉指向数组的指针的使用。</p><p>（3）通过这次实验，我熟练掌握了字符数组与字符串的使用，掌握指针数组及字符指针数组的用法。</p><p>（4）通过这次实验，我掌握了指针函数与函数指针的用法。</p><p>（5）通过这次实验，我掌握了带有参数的main函数的用法。</p><h1 id="实验7-结构与联合实验">实验7 结构与联合实验</h1><h2 id="实验目的-6">7.1 实验目的</h2><p>1．通过实验，熟悉和掌握结构的说明和引用、结构的指针、结构数组、以及函数中使用结构的方法。</p><p>2．通过实验，掌握动态储存分配函数的用法，掌握自引用结构，单向链表的创建、遍历、结点的增删、查找等操作。</p><p>3．了解字段结构和联合的用法。</p><h2 id="实验题目及要求-1">7.2 实验题目及要求</h2><h3 id="表达式求值的程序验证题">7.2.1．表达式求值的程序验证题</h3><p>设有说明： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> u[]=<span class="string">&quot;UVWXYZ&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> v[]=<span class="string">&quot;xyz&quot;</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">T</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> x;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">char</span> *t;</span><br><span class="line">&#125;a[]=&#123;&#123;<span class="number">11</span>,ˊAˊ,u&#125;,&#123;<span class="number">100</span>, ˊBˊ,v&#125;&#125;,*p=a;</span><br></pre></td></tr></table></figure>请先自己计算下面表达式的值，然后通过编程计算来加以验证。(各表达式相互无关)</p><table><thead><tr class="header"><th><strong>序号</strong></th><th><strong>表达式</strong></th><th><strong>计算值</strong></th><th><strong>验证值</strong></th></tr></thead><tbody><tr class="odd"><td>1</td><td>(++p)-&gt;x</td><td>100</td><td>100</td></tr><tr class="even"><td>2</td><td>p++,p-&gt;c</td><td>B</td><td>B</td></tr><tr class="odd"><td>3</td><td><em>p++-&gt;t,</em>p-&gt;t</td><td>x</td><td>x</td></tr><tr class="even"><td>4</td><td>*(++p)-&gt;t</td><td>x</td><td>x</td></tr><tr class="odd"><td>5</td><td>*++p-&gt;t</td><td>V</td><td>V</td></tr><tr class="even"><td>6</td><td>++*p-&gt;t</td><td>V</td><td>V</td></tr></tbody></table><h3 id="源程序修改替换题">7.2.2．源程序修改替换题</h3><p>给定一批整数，以0作为结束标志且不作为结点，将其建成一个先进先出的链表，先进先出链表的指头指针始终指向最先创建的结点（链头），先建结点指向后建结点，后建结点始终是尾结点。</p><ol type="1"><li>源程序中存在什么样的错误（先观察执行结果）？对程序进行修改、调试，使之能够正确完成指定任务。</li></ol><p>源程序如下： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdlib.h&quot;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s_list</span>&#123;</span> </span><br><span class="line"><span class="keyword">int</span> data; <span class="comment">/* 数据域 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s_list</span> *<span class="title">next</span>;</span> <span class="comment">/* 指针域 */</span> </span><br><span class="line">&#125; ;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create_list</span> <span class="params">(struct s_list *headp,<span class="keyword">int</span> *p)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s_list</span> *<span class="title">head</span>=</span><span class="literal">NULL</span>,*p;</span><br><span class="line"><span class="keyword">int</span> s[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">0</span>&#125;; <span class="comment">/* 0为结束标记 */</span></span><br><span class="line">create_list(head,s); <span class="comment">/* 创建新链表 */</span></span><br><span class="line">p=head; <span class="comment">/*遍历指针p指向链头 */</span></span><br><span class="line"><span class="keyword">while</span>(p)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,p-&gt;data); <span class="comment">/* 输出数据域的值 */</span></span><br><span class="line">p=p-&gt;next; <span class="comment">/*遍历指针p指向下一结点 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create_list</span><span class="params">(struct s_list *headp,<span class="keyword">int</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s_list</span> * <span class="title">loc_head</span>=</span><span class="literal">NULL</span>,*tail;</span><br><span class="line"><span class="keyword">if</span>(p[<span class="number">0</span>]==<span class="number">0</span>) <span class="comment">/* 相当于*p==0 */</span></span><br><span class="line">;</span><br><span class="line"><span class="keyword">else</span> &#123; <span class="comment">/* loc_head指向动态分配的第一个结点 */</span></span><br><span class="line">loc_head=(struct s_list *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct s_list));</span><br><span class="line">loc_head-&gt;data=*p++; <span class="comment">/* 对数据域赋值 */</span></span><br><span class="line">tail=loc_head; <span class="comment">/* tail指向第一个结点 */</span></span><br><span class="line"><span class="keyword">while</span>(*p)&#123; <span class="comment">/* tail所指结点的指针域指向动态创建的结点 */</span></span><br><span class="line">tail-&gt;next=(struct s_list *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct s_list));</span><br><span class="line">tail=tail-&gt;next; <span class="comment">/* tail指向新创建的结点 */</span></span><br><span class="line">tail-&gt;data=*p++; <span class="comment">/* 向新创建的结点的数据域赋值 */</span></span><br><span class="line">&#125;</span><br><span class="line">tail-&gt;next=<span class="literal">NULL</span>; <span class="comment">/* 对指针域赋NULL值 */</span></span><br><span class="line">&#125;</span><br><span class="line">headp=loc_head; <span class="comment">/* 使头指针headp指向新创建的链表 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> <strong>解答：</strong></p><p>替换后的程序如下所示： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdlib.h&quot;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s_list</span></span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line"><span class="keyword">int</span> data; <span class="comment">/* 数据域 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s_list</span> *<span class="title">next</span>;</span> <span class="comment">/* 指针域 */</span> </span><br><span class="line">&#125; ;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create_list</span> <span class="params">(struct s_list **headp,<span class="keyword">int</span> *p)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s_list</span> *<span class="title">head</span>=</span><span class="literal">NULL</span>,*p;</span><br><span class="line"><span class="keyword">int</span> s[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">0</span>&#125;; <span class="comment">/* 0为结束标记 */</span></span><br><span class="line">create_list(&amp;head,s); <span class="comment">/* 创建新链表 */</span></span><br><span class="line">p=head; <span class="comment">/*遍历指针p指向链头 */</span></span><br><span class="line"><span class="keyword">while</span>(p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,p-&gt;data); <span class="comment">/* 输出数据域的值 */</span></span><br><span class="line">p=p-&gt;next; <span class="comment">/*遍历指针p指向下一结点 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create_list</span><span class="params">(struct s_list **headp,<span class="keyword">int</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s_list</span> * <span class="title">loc_head</span>=</span><span class="literal">NULL</span>, * tail;</span><br><span class="line"><span class="keyword">if</span>(p[<span class="number">0</span>]==<span class="number">0</span>) <span class="comment">/* 相当于*p==0 */</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123; <span class="comment">/* loc_head指向动态分配的第一个结点 */</span></span><br><span class="line">loc_head=(struct s_list *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct s_list));</span><br><span class="line">loc_head-&gt;data=*p++; <span class="comment">/* 对数据域赋值 */</span></span><br><span class="line">tail=loc_head; <span class="comment">/* tail指向第一个结点 */</span></span><br><span class="line"><span class="keyword">while</span>(*p)</span><br><span class="line">&#123; <span class="comment">/* tail所指结点的指针域指向动态创建的结点 */</span></span><br><span class="line">tail-&gt;next=(struct s_list *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct s_list));</span><br><span class="line">tail=tail-&gt;next; <span class="comment">/* tail指向新创建的结点 */</span></span><br><span class="line">tail-&gt;data=*p++; <span class="comment">/* 向新创建的结点的数据域赋值 */</span></span><br><span class="line">&#125;</span><br><span class="line">tail-&gt;next=<span class="literal">NULL</span>; <span class="comment">/* 对指针域赋NULL值 */</span></span><br><span class="line">&#125;</span><br><span class="line">*headp=loc_head; <span class="comment">/* 使头指针headp指向新创建的链表 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 程序运行截图如图所示：</p><figure><img src="/report/experiment/cf4d61d44f6a7f2a19be6243cc197fbd.png" alt="图7-1 源程序修改替换题的程序运行结果示意图"><figcaption aria-hidden="true">图7-1源程序修改替换题的程序运行结果示意图</figcaption></figure><p>（2）修改替换create_list函数，将其建成一个后进先出的链表，后进先出链表的头指针始终指向最后创建的结点（链头），后建结点指向先建结点，先建结点始终是尾结点。</p><p><strong>解答：</strong></p><p>替换后的程序如下所示 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdlib.h&quot;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s_list</span></span></span><br><span class="line"><span class="class">&#123;</span> </span><br><span class="line"><span class="keyword">int</span> data; <span class="comment">/* 数据域 */</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s_list</span> *<span class="title">next</span>;</span> <span class="comment">/* 指针域 */</span> </span><br><span class="line">&#125; ;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create_list</span> <span class="params">(struct s_list **headp,<span class="keyword">int</span> *p)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s_list</span> *<span class="title">head</span>=</span><span class="literal">NULL</span>,*p;</span><br><span class="line"><span class="keyword">int</span> s[]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">0</span>&#125;; <span class="comment">/* 0为结束标记 */</span></span><br><span class="line">create_list(&amp;head,s); <span class="comment">/* 创建新链表 */</span></span><br><span class="line">p=head; <span class="comment">/*遍历指针p指向链头 */</span></span><br><span class="line"><span class="keyword">while</span>(p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>,p-&gt;data); <span class="comment">/* 输出数据域的值 */</span></span><br><span class="line">p=p-&gt;next; <span class="comment">/*遍历指针p指向下一结点 */</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">create_list</span><span class="params">(struct s_list **headp,<span class="keyword">int</span> *p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">s_list</span> * <span class="title">loc_head</span>=</span><span class="literal">NULL</span>, * tail , * tmp = <span class="literal">NULL</span> ;</span><br><span class="line"><span class="keyword">if</span>(p[<span class="number">0</span>]==<span class="number">0</span>) <span class="comment">/* 相当于*p==0 */</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123; <span class="comment">/* loc_head指向动态分配的第一个结点 */</span></span><br><span class="line">loc_head=(struct s_list *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct s_list));</span><br><span class="line">loc_head-&gt;data=*p++; <span class="comment">/* 对数据域赋值 */</span></span><br><span class="line">tail=loc_head; <span class="comment">/* tail指向第一个结点 */</span></span><br><span class="line"><span class="keyword">while</span>(*p)</span><br><span class="line">        &#123; <span class="comment">/* tail所指结点的指针域指向动态创建的结点 */</span></span><br><span class="line">            tmp = (struct s_list *)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(struct s_list)) ;</span><br><span class="line">            tmp-&gt;data = *p++;</span><br><span class="line">tmp-&gt;next = loc_head ;</span><br><span class="line">            loc_head = tmp ;</span><br><span class="line"><span class="comment">// loc_head-&gt;data = tmp-&gt;data ; </span></span><br><span class="line">&#125;</span><br><span class="line">tail-&gt;next=<span class="literal">NULL</span>; <span class="comment">/* 对指针域赋NULL值 */</span></span><br><span class="line">&#125;</span><br><span class="line">*headp=loc_head; <span class="comment">/* 使头指针headp指向新创建的链表 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> 程序运行截图如图所示：</p><figure><img src="/report/experiment/0293868b335a2da604a85d9379e4eb83.png" alt="图7-2 源程序修改替换题的程序运行结果示意图"><figcaption aria-hidden="true">图7-2源程序修改替换题的程序运行结果示意图</figcaption></figure><h3 id="程序设计-4">7.2.3 程序设计</h3><p>以下（1）至（3）题对应Educoder教学平台"C语言实验"课程，实验7，第17关实验7-1、第18关实验7-2，以及第19关实验7-3。</p><p>（1）本关任务：用单向链表建立一张班级成绩单，包括每个学生的学号、姓名、英语、高等数学、普通物理、C语言程序设计四门课程的成绩。用菜单实现下列功能：</p><p>① 输入每个学生的各项信息。</p><p>② 输出每个学生的各项信息。</p><p>③ 修改指定学生的指定数据项的内容。</p><p>④ 统计每个同学的平均成绩（保留2位小数）。</p><p>⑤ 输出各位同学的学号、姓名、四门课程的总成绩和平均成绩。</p><p>1 解题思路：</p><ol type="1"><li><p>输入指令order，读入0或EOF时停止读入</p></li><li><p>调用相应的函数进行处理</p></li></ol><ul><li><p>如果order = 1 , 进行数据的输入</p></li><li><p>如果order = 2 , 进行数据的输出</p></li><li><p>如果order = 3 , 进行数据的修改</p></li><li><p>如果order = 4 , 进行数据的平均值的计算并输出</p></li><li><p>如果order = 5 , 进行数据的输出</p></li></ul><ol start="3" type="1"><li>结束</li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line">  <span class="number">2</span>）程序清单</span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 20</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> c_lan , English , math , physics ; </span><br><span class="line">    <span class="keyword">char</span> num[maxn] , name[maxn] ;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span> ;</span></span><br><span class="line">    <span class="keyword">double</span> average ;</span><br><span class="line">&#125; *head = <span class="literal">NULL</span> , *tail , *p ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n ; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n) ;</span><br><span class="line">    head = (struct node *) <span class="built_in">malloc</span> ( <span class="keyword">sizeof</span> ( struct node ) ) ;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s%s%d%d%d%d&quot;</span>, head-&gt;num , head-&gt;name , &amp;head-&gt;English , &amp;head-&gt;math , &amp;head-&gt;physics , &amp;head-&gt;c_lan ) ;</span><br><span class="line">    tail = head ;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; n ; i++ ) </span><br><span class="line">    &#123;</span><br><span class="line">        tail-&gt;next = (struct node *) <span class="built_in">malloc</span> ( <span class="keyword">sizeof</span> ( struct node ) ) ;</span><br><span class="line">        tail = tail-&gt;next ;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s%s%d%d%d%d&quot;</span>, tail-&gt;num , tail-&gt;name , &amp;tail-&gt;English , &amp;tail-&gt;math , &amp;tail-&gt;physics , &amp;tail-&gt;c_lan ) ;</span><br><span class="line">    &#125; </span><br><span class="line">    tail-&gt;next = <span class="literal">NULL</span> ;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> * <span class="title">tmp</span> =</span> head ;</span><br><span class="line">    <span class="keyword">while</span> ( tmp ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum =  tmp-&gt;English + tmp-&gt;math + tmp-&gt;physics + tmp-&gt;c_lan ;</span><br><span class="line">        tmp-&gt;average = <span class="number">1.0</span>*sum/<span class="number">4</span> ; </span><br><span class="line">        tmp = tmp-&gt;next ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// puts(&quot;finish!&quot;) ;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;完成了%d位同学的成绩输入。\n&quot;</span>,n) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> * <span class="title">tmp</span> =</span> head ;</span><br><span class="line">    <span class="keyword">while</span> ( tmp ) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %s %d %d %d %d\n&quot;</span>, tmp-&gt;num , tmp-&gt;name , tmp-&gt;English , tmp-&gt;math , tmp-&gt;physics , tmp-&gt;c_lan ) ;</span><br><span class="line">            tmp = tmp-&gt;next ;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> * <span class="title">tmp</span> =</span> head ;</span><br><span class="line">    <span class="keyword">char</span> ctmp[maxn] ;</span><br><span class="line">    <span class="keyword">int</span> task , target ;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s%d&quot;</span> , ctmp , &amp;task ) ;</span><br><span class="line">    <span class="keyword">while</span> ( tmp ) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>( !<span class="built_in">strcmp</span>( ctmp , tmp-&gt;num ) )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>( task == <span class="number">0</span> )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">char</span> ntmp[maxn] ;</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ntmp) ;</span><br><span class="line">                    <span class="built_in">strcpy</span>( tmp-&gt;name , ntmp ) ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>( task == <span class="number">1</span> ) </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;target) ;</span><br><span class="line">                    tmp-&gt;English = target ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>( task == <span class="number">2</span> )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;target) ;</span><br><span class="line">                    tmp-&gt;math = target ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>( task == <span class="number">3</span> ) </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;target) ;</span><br><span class="line">                    tmp-&gt;physics = target ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>( task == <span class="number">4</span> )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;target) ;</span><br><span class="line">                    tmp-&gt;c_lan = target ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%s %s %d %d %d %d\n&quot;</span>, tmp-&gt;num , tmp-&gt;name , tmp-&gt;English , tmp-&gt;math , tmp-&gt;physics , tmp-&gt;c_lan ) ;</span><br><span class="line">                <span class="keyword">break</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp = tmp-&gt;next ;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> * <span class="title">tmp</span> =</span> head ;</span><br><span class="line">    <span class="keyword">while</span> ( tmp ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum =  tmp-&gt;English + tmp-&gt;math + tmp-&gt;physics + tmp-&gt;c_lan ;</span><br><span class="line">        tmp-&gt;average = <span class="number">1.0</span>*sum/<span class="number">4</span> ; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s %s %.2lf\n&quot;</span>,tmp-&gt;num,tmp-&gt;name,tmp-&gt;average) ;</span><br><span class="line">        tmp = tmp-&gt;next ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun5</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> * <span class="title">tmp</span> =</span> head ;</span><br><span class="line">    <span class="keyword">while</span> ( tmp ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum =  tmp-&gt;English + tmp-&gt;math + tmp-&gt;physics + tmp-&gt;c_lan ;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s %s %d %.2lf\n&quot;</span>,tmp-&gt;num,tmp-&gt;name,sum,tmp-&gt;average) ;</span><br><span class="line">        tmp = tmp-&gt;next ;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun6</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">tmp</span> =</span> head ;</span><br><span class="line">    <span class="keyword">while</span> ( tmp-&gt;next )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">now</span> =</span> tmp ;</span><br><span class="line">        <span class="keyword">while</span> ( now-&gt;next )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>( now-&gt;average &gt; now-&gt;next-&gt;average ) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="class"><span class="keyword">struct</span> <span class="title">node</span> <span class="title">tmpp</span> =</span> *now ;</span><br><span class="line">                tmpp.next = now-&gt;next-&gt;next ;</span><br><span class="line">                now-&gt;next-&gt;next = now-&gt;next ;</span><br><span class="line">                *now = *now-&gt;next ;</span><br><span class="line">                *now-&gt;next = tmpp ;</span><br><span class="line">            &#125;</span><br><span class="line">            now = now-&gt;next ;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp = tmp-&gt;next ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// puts(&quot;YES!!!&quot;) ;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> order ; </span><br><span class="line">    <span class="keyword">while</span> ( <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;order) != EOF ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">1</span> ) fun1() ;</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">2</span> ) fun2() ;</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">3</span> ) fun3() ;</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">4</span> ) fun4() ;</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">5</span> ) fun5() ;</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">6</span> ) fun6() ;</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">0</span> ) <span class="keyword">break</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 3)程序运行截图</p><figure><img src="/report/experiment/275b21504aad549e8107b1eec9113eb2.png" alt="图7-3 程序设计题1的程序运行结果示意图"><figcaption aria-hidden="true">图7-3程序设计题1的程序运行结果示意图</figcaption></figure><p>（2）本关任务：对程序设计题第（1）题的程序，⑥增加按照平均成绩进行升序排序的函数，写出用交换结点数据域的方法升序排序的函数，排序可用选择法或冒泡法。</p><p>1 解题思路：</p><ol type="1"><li><p>输入指令order，读入0或EOF时停止读入</p></li><li><p>调用相应的函数进行处理</p></li></ol><ul><li><p>如果order = 1 , 进行数据的输入</p></li><li><p>如果order = 2 , 进行数据的输出</p></li><li><p>如果order = 3 , 进行数据的修改</p></li><li><p>如果order = 4 , 进行数据的平均值的计算并输出</p></li><li><p>如果order = 5 , 进行数据的输出</p></li><li><p>如果order = 6 , 进行数据的排序，运用冒泡排序交换节点域</p></li></ul><ol start="3" type="1"><li>结束</li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 20</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> c_lan , English , math , physics ; </span><br><span class="line">    <span class="keyword">char</span> num[maxn] , name[maxn] ;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">next</span> ;</span></span><br><span class="line">    <span class="keyword">double</span> average ;</span><br><span class="line">&#125; *head = <span class="literal">NULL</span> , *tail , *p ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n ; </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n) ;</span><br><span class="line">    head = (struct node *) <span class="built_in">malloc</span> ( <span class="keyword">sizeof</span> ( struct node ) ) ;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s%s%d%d%d%d&quot;</span>, head-&gt;num , head-&gt;name , &amp;head-&gt;English , &amp;head-&gt;math , &amp;head-&gt;physics , &amp;head-&gt;c_lan ) ;</span><br><span class="line">    tail = head ;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; n ; i++ ) </span><br><span class="line">    &#123;</span><br><span class="line">        tail-&gt;next = (struct node *) <span class="built_in">malloc</span> ( <span class="keyword">sizeof</span> ( struct node ) ) ;</span><br><span class="line">        tail = tail-&gt;next ;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s%s%d%d%d%d&quot;</span>, tail-&gt;num , tail-&gt;name , &amp;tail-&gt;English , &amp;tail-&gt;math , &amp;tail-&gt;physics , &amp;tail-&gt;c_lan ) ;</span><br><span class="line">    &#125; </span><br><span class="line">    tail-&gt;next = <span class="literal">NULL</span> ;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> * <span class="title">tmp</span> =</span> head ;</span><br><span class="line">    <span class="keyword">while</span> ( tmp ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum =  tmp-&gt;English + tmp-&gt;math + tmp-&gt;physics + tmp-&gt;c_lan ;</span><br><span class="line">        tmp-&gt;average = <span class="number">1.0</span>*sum/<span class="number">4</span> ; </span><br><span class="line">        tmp = tmp-&gt;next ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// puts(&quot;finish!&quot;) ;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;完成了%d位同学的成绩输入。\n&quot;</span>,n) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> * <span class="title">tmp</span> =</span> head ;</span><br><span class="line">    <span class="keyword">while</span> ( tmp ) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s %s %d %d %d %d\n&quot;</span>, tmp-&gt;num , tmp-&gt;name , tmp-&gt;English , tmp-&gt;math , tmp-&gt;physics , tmp-&gt;c_lan ) ;</span><br><span class="line">            tmp = tmp-&gt;next ;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun3</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> * <span class="title">tmp</span> =</span> head ;</span><br><span class="line">    <span class="keyword">char</span> ctmp[maxn] ;</span><br><span class="line">    <span class="keyword">int</span> task , target ;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s%d&quot;</span> , ctmp , &amp;task ) ;</span><br><span class="line">    <span class="keyword">while</span> ( tmp ) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>( !<span class="built_in">strcmp</span>( ctmp , tmp-&gt;num ) )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>( task == <span class="number">0</span> )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">char</span> ntmp[maxn] ;</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,ntmp) ;</span><br><span class="line">                    <span class="built_in">strcpy</span>( tmp-&gt;name , ntmp ) ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>( task == <span class="number">1</span> ) </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;target) ;</span><br><span class="line">                    tmp-&gt;English = target ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>( task == <span class="number">2</span> )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;target) ;</span><br><span class="line">                    tmp-&gt;math = target ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>( task == <span class="number">3</span> ) </span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;target) ;</span><br><span class="line">                    tmp-&gt;physics = target ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>( task == <span class="number">4</span> )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;target) ;</span><br><span class="line">                    tmp-&gt;c_lan = target ;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%s %s %d %d %d %d\n&quot;</span>, tmp-&gt;num , tmp-&gt;name , tmp-&gt;English , tmp-&gt;math , tmp-&gt;physics , tmp-&gt;c_lan ) ;</span><br><span class="line">                <span class="keyword">break</span> ;</span><br><span class="line">            &#125;</span><br><span class="line">            tmp = tmp-&gt;next ;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun4</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> * <span class="title">tmp</span> =</span> head ;</span><br><span class="line">    <span class="keyword">while</span> ( tmp ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum =  tmp-&gt;English + tmp-&gt;math + tmp-&gt;physics + tmp-&gt;c_lan ;</span><br><span class="line">        tmp-&gt;average = <span class="number">1.0</span>*sum/<span class="number">4</span> ; </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s %s %.2lf\n&quot;</span>,tmp-&gt;num,tmp-&gt;name,tmp-&gt;average) ;</span><br><span class="line">        tmp = tmp-&gt;next ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun5</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> * <span class="title">tmp</span> =</span> head ;</span><br><span class="line">    <span class="keyword">while</span> ( tmp ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> sum =  tmp-&gt;English + tmp-&gt;math + tmp-&gt;physics + tmp-&gt;c_lan ;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s %s %d %.2lf\n&quot;</span>,tmp-&gt;num,tmp-&gt;name,sum,tmp-&gt;average) ;</span><br><span class="line">        tmp = tmp-&gt;next ;</span><br><span class="line">    &#125;   </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun6</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">tmp</span> =</span> head ;</span><br><span class="line">    <span class="keyword">while</span> ( tmp-&gt;next )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="class"><span class="keyword">struct</span> <span class="title">node</span> *<span class="title">now</span> =</span> tmp ;</span><br><span class="line">        <span class="keyword">while</span> ( now-&gt;next )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>( now-&gt;average &gt; now-&gt;next-&gt;average ) </span><br><span class="line">            &#123;</span><br><span class="line">                <span class="class"><span class="keyword">struct</span> <span class="title">node</span> <span class="title">tmpp</span> =</span> *now ;</span><br><span class="line">                tmpp.next = now-&gt;next-&gt;next ;</span><br><span class="line">                now-&gt;next-&gt;next = now-&gt;next ;</span><br><span class="line">                *now = *now-&gt;next ;</span><br><span class="line">                *now-&gt;next = tmpp ;</span><br><span class="line">            &#125;</span><br><span class="line">            now = now-&gt;next ;</span><br><span class="line">        &#125;</span><br><span class="line">        tmp = tmp-&gt;next ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// puts(&quot;YES!!!&quot;) ;</span></span><br><span class="line">    fun4() ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> order ; </span><br><span class="line">    <span class="keyword">while</span> ( <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;order) != EOF ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">1</span> ) fun1() ;</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">2</span> ) fun2() ;</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">3</span> ) fun3() ;</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">4</span> ) fun4() ;</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">5</span> ) fun5() ;</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">6</span> ) fun6() ;</span><br><span class="line">        <span class="keyword">if</span>( order == <span class="number">0</span> ) <span class="keyword">break</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ; </span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 3)程序运行截图</p><figure><img src="/report/experiment/539724e878c99b6d9f8e3563909aa27b.png" alt="图7-4 程序设计题2的程序运行结果示意图"><figcaption aria-hidden="true">图7-4程序设计题2的程序运行结果示意图</figcaption></figure><h2 id="实验小结-6">7.3 实验小结</h2><p>1．通过实验，我熟悉和掌握了结构的说明和引用、结构的指针、结构数组、以及函数中使用结构的方法。</p><p>2．通过实验，我掌握动态了储存分配函数的用法，掌握自引用结构，单向链表的创建、遍历、结点的增删、查找等操作。</p><p>3．通过实验，我了解了字段结构和联合的用法。</p><h1 id="实验8-文件操作实验">实验8 文件操作实验</h1><h2 id="实验目的-7">8.1实验目的</h2><p>（1）熟悉文本文件和二进制文件在磁盘中的存储方式；</p><p>（2）熟练掌握流式文件的读写方法。</p><h2 id="实验题目及要求-2">8.2实验题目及要求</h2><h3 id="文件类型的程序验证题">文件类型的程序验证题</h3><p>设有程序： <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">short</span> a=<span class="number">0x253f</span>,b=<span class="number">0x7b7d</span>;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line">FILE *fp1,*fp2;</span><br><span class="line">fp1=fopen(<span class="string">&quot;d:\\abc1.bin&quot;</span>,<span class="string">&quot;wb+&quot;</span>);</span><br><span class="line">    fp2=fopen(<span class="string">&quot;d:\\abc2.txt&quot;</span>,<span class="string">&quot;w+&quot;</span>);</span><br><span class="line">fwrite(&amp;a,<span class="keyword">sizeof</span>(<span class="keyword">short</span>),<span class="number">1</span>,fp1);</span><br><span class="line">fwrite(&amp;b,<span class="keyword">sizeof</span>(<span class="keyword">short</span>),<span class="number">1</span>,fp1);   </span><br><span class="line"><span class="built_in">fprintf</span>(fp2,<span class="string">&quot;%hx %hx&quot;</span>,a,b); </span><br><span class="line"></span><br><span class="line">    rewind(fp1); rewind(fp2);</span><br><span class="line"><span class="keyword">while</span>((ch = fgetc(fp1)) != EOF) </span><br><span class="line"><span class="built_in">putchar</span>(ch);</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>((ch = fgetc(fp2)) != EOF) </span><br><span class="line"><span class="built_in">putchar</span>(ch);</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line"></span><br><span class="line">fclose(fp1);</span><br><span class="line">fclose(fp2);</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 1.请思考程序的输出结果，然后通过上机运行来加以验证。</p><p>预测结果： <figure class="highlight erlang-repl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">？<span class="comment">%&#125;&#123;</span></span><br><span class="line"><span class="number">253</span>f <span class="number">7</span>b7d</span><br></pre></td></tr></table></figure> 实际结果：</p><figure><img src="/report/experiment/64eaaafbb113557fc1c158e6cde943d9.png" alt="图8-1 程序验证题的程序运行结果示意图"><figcaption aria-hidden="true">图8-1程序验证题的程序运行结果示意图</figcaption></figure><ol start="2" type="1"><li>将两处sizeof(short)均改为sizeof(char)结果有什么不同，为什么？</li></ol><p>结果：</p><figure><img src="/report/experiment/ea9171f1ffc35f43c0bfaf697afe55a1.png" alt="图8-2 程序验证题的程序运行结果示意图"><figcaption aria-hidden="true">图8-2程序验证题的程序运行结果示意图</figcaption></figure><p>原因：char大小为一个字节，写入fp1时只能写入8位，故只能对应显示高位对应的字符</p><ol type="1"><li>将fprintf(fp2,"%hx %hx",a,b) 改为 fprintf(fp2,"%d%d",a,b)结果有什么不同。</li></ol><p>将以十进制的形式写入文件</p><p><strong><img src="/report/experiment/f63ad2fbfad7568221777c75b8c3328b.png" alt="图8-3 程序验证题的程序运行结果示意图"></strong></p><h3 id="源程序修改替换题-1">源程序修改替换题</h3><p>将指定的文本文件内容在屏幕上显示出来，命令行的格式为：</p><p><code>type filename</code></p><ol type="1"><li>源程序中存在什么样的逻辑错误（先观察执行结果）？对程序进行修改、调试，使之能够正确完成指定任务。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line">FILE *fp;</span><br><span class="line"><span class="keyword">if</span>(argc!=<span class="number">2</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Arguments error!\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((fp=fopen(argv[<span class="number">1</span>],<span class="string">&quot;r&quot;</span>))==<span class="literal">NULL</span>)&#123;       <span class="comment">/* fp 指向 filename */</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Can&#x27;t open %s file!\n&quot;</span>,argv[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(ch=fgetc(fp)!=EOF)          <span class="comment">/* 从filename中读字符 */</span></span><br><span class="line">   <span class="built_in">putchar</span>(ch);                  <span class="comment">/* 向显示器中写字符 */</span></span><br><span class="line">fclose(fp);                      <span class="comment">/* 关闭filename */</span></span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure> 修改：将 while(ch=fgetc(fp)!=EOF)中ch=fgetc(fp)加上括号</li></ol><figure><img src="/report/experiment/a3468e32561e8af57b78c6cac657cbdb.png" alt="图8-4 源程序修改替换题的程序运行结果示意图"><figcaption aria-hidden="true">图8-4源程序修改替换题的程序运行结果示意图</figcaption></figure><ol start="2" type="1"><li>用输入输出重定向freopen改写main函数。 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc , <span class="keyword">char</span>* argv[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line">FILE *fp;</span><br><span class="line"><span class="keyword">if</span>(argc!=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Arguments error!\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((freopen(argv[<span class="number">1</span>],<span class="string">&quot;r&quot;</span>,<span class="built_in">stdin</span>))==<span class="literal">NULL</span>)</span><br><span class="line">    &#123;       <span class="comment">/* fp 指向 filename */</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Can&#x27;t open %s file!\n&quot;</span>,argv[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>((ch=getchar())!=EOF)          <span class="comment">/* 从filename中读字符 */</span></span><br><span class="line">   <span class="built_in">putchar</span>(ch);                  <span class="comment">/* 向显示器中写字符 */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> <img src="/report/experiment/cb53d1670ccc416d1927af62055c60c4.png" alt="图8-5 源程序修改替换题的程序运行结果示意图"></li></ol><h3 id="程序设计-5">程序设计</h3><p>以下（1）题对应Educoder教学平台"C语言实验"课程，实验8，第20关实验8-1。</p><p>（1）本关任务：编写一个程序，用给定的字符串替换文件中的目标字符串，并显示输出替换的个数。</p><p>注意：读取的文件路径请使用experiment/src/step8/source.txt</p><p>若文件为 <figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">There are moments <span class="keyword">in</span> life when you miss someone so much <span class="keyword">that</span> you just want <span class="keyword">to</span></span><br><span class="line">pick them <span class="keyword">from</span> your dreams <span class="keyword">and</span> hug them <span class="keyword">for</span> <span class="built_in">real</span>!</span><br></pre></td></tr></table></figure> 样例输入：<code>you they</code></p><p>样例输出： <figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line">There are moments <span class="keyword">in</span> life when they miss someone so much <span class="keyword">that</span> they just want</span><br><span class="line"><span class="keyword">to</span> pick them <span class="keyword">from</span> theyr dreams <span class="keyword">and</span> hug them <span class="keyword">for</span> <span class="built_in">real</span>!</span><br></pre></td></tr></table></figure></p><p>1 解题思路：</p><ol type="1"><li><p>读入需要替换的字符串s1,s2</p></li><li><p>使用freopen函数进行重定向，读取相应文件中的字符串</p></li><li><p>使用字符串处理函数进行查找，替换，拼接</p></li><li><p>进行处理后的字符串的输出</p></li></ol><p>2）程序清单 <figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[maxn] , s1[maxn] , s2[maxn] ,ans[maxn] , space[]=<span class="string">&quot; &quot;</span>  , tmp[maxn] ,*p ;</span><br><span class="line"><span class="keyword">int</span> cnt ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s%s&quot;</span> , s1 , s2 ) ;</span><br><span class="line">    <span class="comment">// freopen(&quot;experiment/src/step8/source.txt&quot;,&quot;r&quot;,stdin) ;</span></span><br><span class="line">    <span class="keyword">while</span> ( <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( ( p=<span class="built_in">strstr</span>(s,s1) ) != <span class="literal">NULL</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            re <span class="keyword">int</span> num = <span class="number">0</span> ;</span><br><span class="line">            <span class="keyword">for</span>( num = <span class="number">0</span> ; s[num] != *p ; num++ )</span><br><span class="line">                tmp[num] = s[num] ;</span><br><span class="line">            <span class="built_in">strcat</span>( ans , tmp ) ;</span><br><span class="line">            <span class="built_in">memset</span>( tmp , <span class="number">0</span> , <span class="keyword">sizeof</span>(tmp) ) ;</span><br><span class="line">            <span class="built_in">strcat</span>( ans , s2 ) ;</span><br><span class="line">            <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">0</span> , j = <span class="built_in">strlen</span>(s1) + num ; s[j] ; j++,i++ )</span><br><span class="line">                tmp[i] = s[j] ;</span><br><span class="line">            <span class="built_in">strcat</span>( ans , tmp ) ;</span><br><span class="line">            <span class="built_in">memset</span>( tmp , <span class="number">0</span> , <span class="keyword">sizeof</span>(tmp) ) ;</span><br><span class="line">            cnt++ ;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">strcat</span>(ans,s) ;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">strcat</span>(ans,space) ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,cnt) ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,ans) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure> 3）程序运行结果示意图</p><figure><img src="/report/experiment/9bac5c465f36a334af7c31703876767d.png" alt="图8-6 程序设计题的程序运行结果示意图"><figcaption aria-hidden="true">图8-6程序设计题的程序运行结果示意图</figcaption></figure><h2 id="实验小结-7">8.3 实验小结</h2><p>（1）通过这次实验，我熟悉了文本文件和二进制文件在磁盘中的存储方式；</p><p>（2）通过这次实验，我熟练掌握了流式文件的读写方法。</p>]]></content>
    
    
    <summary type="html">软件学院C语言程序设计实验报告</summary>
    
    
    
    <category term="report" scheme="https://dekrt.cn/categories/report/"/>
    
    
    <category term="报告 | report" scheme="https://dekrt.cn/tags/%E6%8A%A5%E5%91%8A-report/"/>
    
    <category term="答案 | answer" scheme="https://dekrt.cn/tags/%E7%AD%94%E6%A1%88-answer/"/>
    
  </entry>
  
  <entry>
    <title>C语言课后习题&amp;头歌答案</title>
    <link href="https://dekrt.cn/answer/problems/"/>
    <id>https://dekrt.cn/answer/problems/</id>
    <published>2022-01-14T13:27:44.000Z</published>
    <updated>2022-03-10T08:06:56.808Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://cdn.luogu.com.cn/upload/image_hosting/9v7j75wu.png"></p><blockquote><p>本文全部公式采用mathjax渲染，观感极佳</p></blockquote><span id="more"></span><h2 id="第一章">第一章:</h2><h3 id="problems-1.7">problems 1.7:</h3><p><span class="math display">\[ 0xABCD + (feed)_{16} =(AABA)_{16}\]</span> <span class="math display">\[ 0xABCD - (feed)_{16}= (ACE0)_{16}\]</span></p><h3 id="problems-1.8">problems 1.8:</h3><p><span class="math display">\[ (251)_{10} = (1111\;1011)_2 = (373)_8 =(FB)_{16} \]</span></p><h3 id="problems-1.9">problems 1.9:</h3><p><span class="math display">\[157原码：0000\;0000\;1001\;1101补码：0000\;0000\;1001\;1101\]</span></p><p><span class="math display">\[-153原码：1000\;0000\;1001\;1001补码：1111\;1111\;0110\;0111\]</span></p><h3 id="problems-1.12">problems 1.12:</h3><p><span class="math display">\[ANS = (53)_{ASCII} =(5)_{char}\]</span></p><h2 id="第二章">第二章:</h2><h3 id="problems-2.3">problems 2.3:</h3><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">4</span>th 不是 , 以数字开头</span><br><span class="line"></span><br><span class="line"><span class="keyword">sizeof</span> 不是 , 标准C的关键字</span><br><span class="line"></span><br><span class="line">x*y 不是，* 非法</span><br><span class="line"></span><br><span class="line">temp<span class="number">-2</span> 不是，- 非法</span><br><span class="line"></span><br><span class="line">isn<span class="string">&#x27;t 不是，&#x27;</span> 非法</span><br><span class="line"></span><br><span class="line"><span class="built_in">enum</span> 不是, 标准C的关键字</span><br></pre></td></tr></table></figure><h3 id="problems-2.4">problems 2.4:</h3><figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span>L 合法，long长整型</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27; 不合法，单引号组中的单引号前需要转义字符</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">.12 合法，double双精度浮点型</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">0x1ag 不合法，g不是16进制数中的符号，也不表示任何类型</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">33333 合法，int整形</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span>a<span class="string">&quot; 合法，字符串常量</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot; 合法，字符串常量</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">0.L 合法，long double长双精度浮点型</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">E20 不合法，缺少尾数部分</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">0377UL 合法，unsigned long无符号长整型</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;</span>\<span class="number">18</span><span class="string">&#x27; 不合法，存在非8进制位</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;</span>\<span class="number">0xa</span><span class="string">&#x27; 不合法，不符合十六进制字符码表示规则</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">0x9cfU 合法，unsigned int无符号整形</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;</span>\<span class="number">45</span><span class="string">&#x27; 合法，char字符型</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">1.E-5 合法，double双精度浮点型</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;</span>\<span class="number">0</span><span class="string">&#x27; 合法，char字符型</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">3.F 合法，float浮点型</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;</span><span class="number">3</span><span class="string">&#x27;4&quot;</span><span class="string">&quot; 不合法，缺少转义符</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;</span><span class="string">&quot;&#x27;</span> 合法，char字符型</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;\a&#x27;</span> 合法，char字符型</span><br></pre></td></tr></table></figure><h3 id="problems-2.6">problems 2.6:</h3><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>)<span class="keyword">int</span> a; b = <span class="number">5</span>; 第一个分号改为逗号<span class="keyword">int</span> a, b=<span class="number">5</span>;</span><br><span class="line"></span><br><span class="line">(<span class="number">2</span>)doubel h; 关键字错误<span class="keyword">double</span> h;</span><br><span class="line"></span><br><span class="line">(<span class="number">3</span>)<span class="keyword">int</span> x = <span class="number">2.3</span>; 类型错误<span class="keyword">float</span> x = <span class="number">2.3</span>;</span><br><span class="line"></span><br><span class="line">(<span class="number">4</span>)<span class="keyword">const</span> <span class="keyword">long</span> y; 需要赋初值<span class="keyword">const</span> <span class="keyword">long</span> y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">(<span class="number">5</span>)<span class="keyword">float</span> a = <span class="number">2.5</span>*g; g未定义变量</span><br><span class="line"></span><br><span class="line">(<span class="number">6</span>)<span class="keyword">int</span> a = b = <span class="number">2</span>; b未定义变量<span class="keyword">int</span> a = <span class="number">2</span>, b = <span class="number">2</span>;</span><br></pre></td></tr></table></figure><h3 id="problems-2.7">problems 2.7:</h3><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(1)</span>++<span class="comment">a*b</span>-- <span class="literal">-</span>&gt; <span class="comment">4</span></span><br><span class="line"></span><br><span class="line"><span class="comment">(2)!a</span><span class="literal">+</span><span class="comment">b/c</span> <span class="literal">-</span>&gt; <span class="comment">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">(3)a==</span><span class="literal">-</span><span class="comment">b</span><span class="literal">+</span><span class="comment">c</span> <span class="literal">-</span>&gt; <span class="comment">true(或者1)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">(4)d=a</span>++<span class="string">,</span><span class="comment">a*=b</span><span class="literal">+</span><span class="comment">1</span> <span class="literal">-</span>&gt; <span class="comment">d</span> <span class="comment">=</span> <span class="comment">1</span> <span class="string">,</span> <span class="comment">a</span> <span class="comment">=</span> <span class="comment">6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">(5)d=y</span><span class="literal">+</span><span class="comment">=1/x</span> <span class="comment">y为8</span><span class="string">.</span><span class="comment">2</span><span class="string">,</span> <span class="comment">d为8</span></span><br><span class="line"></span><br><span class="line"><span class="comment">(6)a</span>&lt;<span class="comment">b</span> <span class="comment">&amp;&amp;</span> <span class="comment">x</span> <span class="comment">==</span> <span class="comment">y</span> <span class="literal">-</span>&gt; <span class="comment">1</span> <span class="comment">&amp;&amp;</span> <span class="comment">0</span> <span class="literal">-</span>&gt; <span class="comment">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">(7)x=(int)y/b</span>++ <span class="comment">x</span> <span class="comment">=</span> <span class="comment">3</span><span class="string">.</span><span class="comment">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">(8)a</span>--<span class="comment">?</span>++<span class="comment">a:</span>++<span class="comment">a</span> <span class="comment">a</span> <span class="comment">=</span> <span class="comment">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">(9)&#x27;a&#x27;</span><span class="literal">+</span><span class="comment">&#x27;\xa&#x27;</span><span class="literal">+</span><span class="comment">a</span> <span class="literal">-</span>&gt; <span class="comment">97</span> <span class="literal">+</span> <span class="comment">10</span> <span class="literal">+</span> <span class="comment">1</span> <span class="literal">-</span>&gt; <span class="comment">108</span></span><br><span class="line"></span><br><span class="line"><span class="comment">(10)a=0</span><span class="string">,</span>--<span class="comment">a</span><span class="string">,</span><span class="comment">a</span><span class="literal">+</span><span class="comment">=(a</span>++<span class="comment">)</span><span class="literal">-</span><span class="comment">a</span> <span class="comment">表达式结果为</span><span class="literal">-</span><span class="comment">1，a的值为0</span></span><br></pre></td></tr></table></figure><h3 id="problems-2.8">problems 2.8:</h3><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(1)a==b==c</span> <span class="comment">错误，c未定义且逻辑错误</span></span><br><span class="line"></span><br><span class="line"><span class="comment">(5)a*</span>++<span class="literal">-</span><span class="comment">b</span> <span class="comment">错误，</span>++<span class="comment">需要左值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">(6)a||b^i</span> <span class="comment">错误，^号左侧类型为double</span></span><br><span class="line"></span><br><span class="line"><span class="comment">(7)i*j%a</span> <span class="comment">错误，%右侧类型为double</span></span><br></pre></td></tr></table></figure><h3 id="problems-2.10">problems 2.10:</h3><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">1</span>)~<span class="keyword">x</span>&amp;<span class="keyword">x</span> -&gt; <span class="number">0</span></span><br><span class="line"></span><br><span class="line">(<span class="number">2</span>)v<span class="operator">=</span>~<span class="keyword">x</span> <span class="number">-2</span></span><br><span class="line"></span><br><span class="line">(<span class="number">3</span>)w<span class="operator">=</span>~<span class="keyword">x</span>^<span class="keyword">x</span> <span class="number">65535</span></span><br><span class="line"></span><br><span class="line">(<span class="number">4</span>)<span class="keyword">x</span>|y&amp;<span class="keyword">x</span>|z <span class="number">5</span></span><br><span class="line"></span><br><span class="line">(<span class="number">5</span>)w<span class="operator">=</span>y|z<span class="punctuation">,</span>(w&lt;&lt;<span class="number">3</span>)+(w&lt;&lt;<span class="number">1</span>) <span class="number">60</span></span><br><span class="line"></span><br><span class="line">(<span class="number">6</span>)w<span class="operator">=</span><span class="keyword">x</span>|y&amp;<span class="keyword">x</span>|z&lt;&gt;<span class="keyword">x</span> <span class="number">113</span></span><br><span class="line"></span><br><span class="line">(<span class="number">7</span>)v<span class="operator">=</span><span class="number">-1</span><span class="punctuation">,</span>v&lt;&lt;<span class="operator">=</span><span class="number">1</span> <span class="number">-2</span></span><br><span class="line"></span><br><span class="line">(<span class="number">8</span>)v<span class="operator">=</span>~<span class="keyword">x</span>|<span class="keyword">x</span> <span class="number">-1</span></span><br><span class="line"></span><br><span class="line">(<span class="number">9</span>)w<span class="operator">=</span><span class="keyword">x</span>^~y <span class="number">65532</span></span><br><span class="line"></span><br><span class="line">(<span class="number">10</span>)<span class="keyword">x</span>|y|z&gt;&gt;<span class="number">2</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h3 id="problems-2.11">problems 2.11:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">( k &gt;&gt; <span class="number">8</span> ) | ( p &lt;&lt; <span class="number">8</span> ) </span><br></pre></td></tr></table></figure><h3 id="problems-2.16">problems 2.16:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">( a &gt; b ) ? ( a &gt; c ? a : c ) : ( c &gt; b ? c : b ) </span><br></pre></td></tr></table></figure><h3 id="problems-2.18">problems 2.18:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">( ( a % <span class="number">3</span> == <span class="number">0</span> ) &amp;&amp; (a % <span class="number">10</span> == <span class="number">5</span>) ) ? <span class="number">1</span> : <span class="number">0</span> </span><br></pre></td></tr></table></figure><h2 id="第三章">第三章:</h2><h3 id="problems-3.5">problems 3.5:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> c ;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%c&quot;</span>,&amp;c) ;</span><br><span class="line">    <span class="keyword">if</span>(c &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;F&#x27;</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = c-<span class="string">&#x27;A&#x27;</span>+<span class="number">10</span> ;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,tmp) ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( c &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;f&#x27;</span> ) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,c-<span class="string">&#x27;a&#x27;</span>+<span class="number">10</span>) ;</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,c) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problems-3.7">problems 3.7:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="keyword">int</span> k , ans ;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%u&quot;</span>,&amp;k) ;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">short</span> <span class="keyword">int</span> tmp1 = <span class="number">0xf000</span> , tmp2 = <span class="number">0x000f</span> , tmp3 =<span class="number">0x0ff0</span> ;</span><br><span class="line">    tmp1 = (tmp1 &amp; k ) &gt;&gt; <span class="number">12</span> ;</span><br><span class="line">    tmp2 = (tmp2 &amp; k ) &lt;&lt; <span class="number">12</span> ;</span><br><span class="line">    tmp3 = (tmp3 &amp; k ) ;</span><br><span class="line">    ans = ( tmp1 | tmp2 ) | tmp3 ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第四章">第四章:</h2><h3 id="problems-4.1">problems 4.1:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a , b , c ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span> <span class="params">( <span class="keyword">int</span> x , <span class="keyword">int</span> y )</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="keyword">return</span> x &gt; y ? x : y ; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span> <span class="params">( <span class="keyword">int</span> x , <span class="keyword">int</span> y )</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="keyword">return</span> x &lt; y ? x : y ; &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>,&amp;a , &amp;b , &amp;c ) ;</span><br><span class="line">    <span class="keyword">int</span> maxx = max(max(a,b),c) ;</span><br><span class="line">    <span class="keyword">int</span> minn = min(min(a,b),c) ;</span><br><span class="line">    <span class="keyword">if</span>( a == b &amp;&amp; a &lt; c )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;A %d&quot;</span>,a) ;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( a &lt; maxx &amp;&amp; a &gt; minn ) <span class="built_in">printf</span>(<span class="string">&quot;A %d&quot;</span>,a) ;</span><br><span class="line">    <span class="keyword">if</span>( b &lt; maxx &amp;&amp; b &gt; minn ) <span class="built_in">printf</span>(<span class="string">&quot;B %d&quot;</span>,b) ;</span><br><span class="line">    <span class="keyword">if</span>( c &lt; maxx &amp;&amp; c &gt; minn ) <span class="built_in">printf</span>(<span class="string">&quot;C %d&quot;</span>,c) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problems-4.3">problems 4.3:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 15</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> year , month , date , ans ;</span><br><span class="line"><span class="keyword">int</span> a[maxn] ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">judge</span> <span class="params">( <span class="keyword">int</span> x )</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( x % <span class="number">4</span> != <span class="number">0</span> ) <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ( x % <span class="number">100</span> != <span class="number">0</span> ) <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ( x % <span class="number">400</span> == <span class="number">0</span> ) <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span> (<span class="string">&quot;%d%d%d&quot;</span>, &amp;year , &amp;month , &amp;date ) ;</span><br><span class="line">a[<span class="number">1</span>] = a[<span class="number">3</span>] = a[<span class="number">5</span>] = a[<span class="number">7</span>] = a[<span class="number">8</span>] = a[<span class="number">10</span>] = a[<span class="number">12</span>] = <span class="number">31</span> ;</span><br><span class="line">a[<span class="number">4</span>] = a[<span class="number">6</span>] = a[<span class="number">9</span>] = a[<span class="number">11</span>] = <span class="number">30</span> ;</span><br><span class="line"><span class="keyword">if</span>( judge(year) ) a[<span class="number">2</span>] = <span class="number">29</span> ;</span><br><span class="line"><span class="keyword">else</span> a[<span class="number">2</span>] = <span class="number">28</span> ;</span><br><span class="line"><span class="keyword">for</span> (re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= month - <span class="number">1</span> ; i ++ ) </span><br><span class="line">ans += a[i] ;</span><br><span class="line">ans += date ;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,ans) ;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problems-4.5">problems 4.5:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> x , y ;</span><br><span class="line"><span class="keyword">char</span> c ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf%lf %c&quot;</span>,&amp;x,&amp;y,&amp;c) ;</span><br><span class="line"><span class="keyword">if</span>( c == <span class="string">&#x27;+&#x27;</span> )</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.6lf&quot;</span>,x+y) ;</span><br><span class="line"><span class="keyword">if</span>( c == <span class="string">&#x27;-&#x27;</span> )</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.6lf&quot;</span>,x-y) ;</span><br><span class="line"><span class="keyword">if</span>( c == <span class="string">&#x27;*&#x27;</span> )</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.6lf&quot;</span>,x*y) ;</span><br><span class="line"><span class="keyword">if</span>( c == <span class="string">&#x27;/&#x27;</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ( !y ) <span class="built_in">printf</span>(<span class="string">&quot;Error&quot;</span>) ;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%.6lf&quot;</span>,x/y) ;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">if</span>( c == <span class="string">&#x27;&amp;&#x27;</span> ) <span class="built_in">printf</span>(<span class="string">&quot;Error&quot;</span>) ;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problems-4.9">problems 4.9:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n ;</span><br><span class="line"><span class="keyword">int</span> a[maxn] ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n) ;</span><br><span class="line">a[<span class="number">1</span>] = a[<span class="number">2</span>] = <span class="number">1</span> ;</span><br><span class="line"><span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">3</span> ; i &lt;= n ; i++ )</span><br><span class="line">a[i] = a[i<span class="number">-1</span>] + a[i<span class="number">-2</span>] ;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++ )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%6d&quot;</span>,a[i]) ;</span><br><span class="line"><span class="keyword">if</span>( ++ cnt == <span class="number">8</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>) ;</span><br><span class="line">cnt = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problems-4.10">problems 4.10:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">double</span> pi = <span class="number">0</span> , tmp = <span class="number">1.0</span> , sign = <span class="number">-1.0</span> ; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> ( <span class="built_in">fabs</span>( <span class="number">1</span> / tmp ) &gt; <span class="number">1e-5</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        sign *= (<span class="number">-1</span>) ;</span><br><span class="line">        pi += sign / tmp  ;</span><br><span class="line">        tmp += <span class="number">2</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf&quot;</span>, pi * <span class="number">4</span> ) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problems-4.11">problems 4.11:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n ;</span><br><span class="line"><span class="keyword">int</span> a[maxn] ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span> <span class="params">( <span class="keyword">int</span> x , <span class="keyword">int</span> y )</span></span></span><br><span class="line"><span class="function"></span>&#123;<span class="keyword">return</span> y ? gcd (y,x%y) : x ;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a , b ;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a,&amp;b) ;</span><br><span class="line">    <span class="keyword">int</span> tmp = gcd ( a , b ) ;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, tmp , a*b/tmp ) ;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problems-4.17">problems 4.17:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp , sum , cnt ;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= <span class="number">10</span> ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;tmp) ;</span><br><span class="line">        <span class="keyword">if</span> ( tmp &gt; <span class="number">0</span> ) </span><br><span class="line">        &#123;</span><br><span class="line">            cnt ++ ;</span><br><span class="line">            sum += tmp ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( cnt ) <span class="built_in">printf</span>(<span class="string">&quot;numbers = %d , average = %lf \n&quot;</span>, cnt , ( <span class="number">1.0</span> * sum ) / cnt ) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第五章">第五章:</h2><h3 id="problems-5.1">problems 5.1:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> sum , first , second , point ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">game</span> <span class="params">( )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    first = rand() % <span class="number">6</span> ; second = rand() % <span class="number">6</span> ; </span><br><span class="line">    sum = first + second ;</span><br><span class="line">    <span class="keyword">if</span> ( sum == <span class="number">7</span> || sum == <span class="number">11</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;WIN!\nGama Over .&quot;</span>) ;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( sum == <span class="number">2</span> || sum == <span class="number">3</span> || sum == <span class="number">12</span> ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Lost!\nGame over .&quot;</span>) ;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    point += sum ;</span><br><span class="line">    <span class="keyword">if</span> ( point == <span class="number">7</span> ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Lost!\nGame over .&quot;</span>) ;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( point == sum )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;WIN!\nGame Over .&quot;</span>) ;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    game() ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    srand( (<span class="keyword">unsigned</span>)time(<span class="literal">NULL</span>) ) ;</span><br><span class="line">    game() ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problems-5.6">problems 5.6:</h3><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">不能，<span class="keyword">swap</span>传入的是形参，只能在<span class="keyword">swap</span>函数中使用，无法传回原函数。</span><br></pre></td></tr></table></figure><h3 id="problems-5.7">problems 5.7:</h3><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">(1)</span> p<span class="comment">(6)</span> = <span class="number">6</span> ; <span class="comment">(2)</span> p<span class="comment">(6)</span> = <span class="number">12</span> ;</span><br></pre></td></tr></table></figure><h3 id="problems-5.8">problems 5.8:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> i ;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fun</span><span class="params">( <span class="keyword">long</span> i )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">long</span> l = i ;</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> i ;</span><br><span class="line">i = <span class="number">3.4</span> ;</span><br><span class="line">&#125;</span><br><span class="line">l = i + <span class="number">2</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> *p = &amp;i ;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Answer:</span><br><span class="line"><span class="keyword">int</span>型i存储类型为<span class="keyword">extern</span>:</span><br><span class="line">第<span class="number">1</span>行声明（定义)，<span class="number">11</span>行使用;</span><br><span class="line"><span class="keyword">long</span>、<span class="keyword">float</span>型i存储类型为<span class="keyword">auto</span>:</span><br><span class="line"><span class="keyword">long</span>型i在第二行声明（定义)，<span class="number">4</span>、<span class="number">9</span>行使用;</span><br><span class="line"><span class="keyword">float</span>型i在第六行声明（定义)，<span class="number">7</span>行使用。</span><br></pre></td></tr></table></figure><h3 id="problems-5.11">problems 5.11:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n , cnt , tmp ;</span><br><span class="line"><span class="keyword">int</span> a[maxn] ;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">hailstone</span> <span class="params">( <span class="keyword">int</span> x )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>,x) ;</span><br><span class="line"><span class="keyword">if</span>( ++tmp == <span class="number">6</span> ) <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>) , tmp = <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">if</span>( x == <span class="number">1</span> ) </span><br><span class="line">    &#123;</span><br><span class="line">        cnt ++ ;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">if</span>( x % <span class="number">2</span> == <span class="number">0</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        hailstone ( x / <span class="number">2</span> ) ;</span><br><span class="line">        cnt ++ ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">hailstone ( <span class="number">3</span>*x + <span class="number">1</span> ) ;</span><br><span class="line">cnt ++ ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n) ;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Hailstone generated by %d:\n&quot;</span>,n) ;</span><br><span class="line">hailstone ( n ) ;</span><br><span class="line"><span class="keyword">if</span>( cnt % <span class="number">6</span> != <span class="number">0</span> ) <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>) ;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Number of hailstone generated:%d&quot;</span>,cnt) ;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problems-5.13">problems 5.13:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 1005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> k ;</span><br><span class="line"><span class="keyword">char</span> s[maxn] ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">digit</span><span class="params">( <span class="keyword">char</span> s[] , <span class="keyword">int</span> k )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="built_in">strlen</span> (s) ;</span><br><span class="line">    <span class="keyword">if</span> ( k &gt; cnt ) <span class="keyword">return</span> <span class="number">-1</span> ;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> (s[ cnt - k ] - <span class="string">&#x27;0&#x27;</span> ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s %d&quot;</span>,s,&amp;k) ;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,digit( s , k ) ) ;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;    </span><br></pre></td></tr></table></figure><h3 id="problems-12.1">problems 12.1:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> il inline </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> ll <span class="title">fib</span><span class="params">( <span class="keyword">int</span> n )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( n == <span class="number">1</span> || n == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">return</span> fib(n - <span class="number">1</span>) + fib(n - <span class="number">2</span>) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">time_t</span> first , second ;</span><br><span class="line">    first = time(<span class="literal">NULL</span>) ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,fib(<span class="number">40</span>)) ;</span><br><span class="line">    second = time(<span class="literal">NULL</span>) ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;The difference is: %f seconds&quot;</span>, difftime(second,first)) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//solution : 使用数组对求出的 fib(n) 进行存储</span></span><br></pre></td></tr></table></figure><h3 id="problems-12.3">problems 12.3:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[maxn] ;</span><br><span class="line"><span class="keyword">int</span> cnt ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">( <span class="keyword">int</span> pos , <span class="keyword">char</span> s[] )</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( pos == <span class="number">0</span> ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, s[pos] ) ;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, s[pos] ) ;</span><br><span class="line">    solve( pos - <span class="number">1</span> , s ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s) ;</span><br><span class="line">    solve( <span class="built_in">strlen</span>(s) - <span class="number">1</span> , s ) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第六章">第六章</h2><h3 id="problems-6.1">problems 6.1:</h3><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="number">2</span>) 编译时将 NUMBER 换成 = <span class="number">20</span> <span class="comment">;</span></span><br><span class="line">(<span class="number">3</span>) 编译时将 ident 换成 (x) x <span class="comment">;</span></span><br><span class="line">(<span class="number">5</span>) 编译时可能忽略优先级</span><br></pre></td></tr></table></figure><h3 id="problems-6.4">problems 6.4:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> swap(x,y) t=x,x=y,y=t</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> t ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a , b ;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;a , &amp;b ) ;</span><br><span class="line">swap(a,b) ;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>,a,b ) ;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="第七章">第七章：</h2><h3 id="problems-7.7">problems 7.7:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 100005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n ;</span><br><span class="line"><span class="keyword">int</span> a[maxn] , b[maxn] ; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">max</span> <span class="params">( <span class="keyword">int</span> x , <span class="keyword">int</span> y )</span> </span></span><br><span class="line"><span class="function"></span>&#123;<span class="keyword">return</span> x &gt; y ? x : y ;&#125; </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">swap</span> <span class="params">( <span class="keyword">int</span> *a , <span class="keyword">int</span> *b )</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = *a ;</span><br><span class="line">    *a = *b ;</span><br><span class="line">    *b = tmp ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n) ;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++ )</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, a + i ) ;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span>  i = <span class="number">1</span> ; i &lt;= n ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> maxx = i ;</span><br><span class="line">        <span class="keyword">for</span>( re <span class="keyword">int</span> j = i + <span class="number">1</span> ; j &lt;= n ;j ++ ) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>( a[j] &lt; a[maxx] ) maxx = j ;</span><br><span class="line">        &#125;</span><br><span class="line">        swap ( &amp;a[i] , &amp;a[maxx] ) ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i++ )</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,a[i] ) ; </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problems-7.8">problems 7.8:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n , k ;</span><br><span class="line"><span class="keyword">int</span> a[maxn] ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n , &amp;k ) ;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ; i++ ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span> , &amp;a[i]) ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = k ; i &lt; n ; i++ )</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span> , a[i] ) ;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; k ; i++ )</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span> , a[i] ) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problems-7.9">problems 7.9:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> cnt , num , alp , other ;</span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[maxn] ;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s) ;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="built_in">strlen</span> (s) ;</span><br><span class="line">    <span class="keyword">for</span>( re <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; cnt ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( s[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;9&#x27;</span> ) num++ ;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>( ( s[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;z&#x27;</span> ) || ( s[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; s[i] &lt;= <span class="string">&#x27;Z&#x27;</span>) </span><br><span class="line">            alp ++ ;</span><br><span class="line">        <span class="keyword">else</span> other++ ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d&quot;</span>, num , alp , other ) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problems-7.13">problems 7.13:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n ;</span><br><span class="line"><span class="keyword">char</span> s[maxn] , t[maxn] ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">min</span> <span class="params">( <span class="keyword">int</span> x , <span class="keyword">int</span> y )</span> </span></span><br><span class="line"><span class="function"></span>&#123; <span class="keyword">return</span> x &lt; y ? x : y ;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">strncpy</span><span class="params">( <span class="keyword">char</span> a[] , <span class="keyword">char</span> b[] , <span class="keyword">int</span> x )</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len_a = <span class="built_in">strlen</span>(a) , len_b = <span class="built_in">strlen</span>(b) ;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; min( x , len_b ) ; i++ ) </span><br><span class="line">    &#123;</span><br><span class="line">        a[i] = b[i] ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s%s%d&quot;</span>, s , t , &amp;n ) ;</span><br><span class="line">    <span class="built_in">strncpy</span>(s,t,n) ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,s) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problems-7.15">problems 7.15:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n ;</span><br><span class="line"><span class="keyword">char</span> s[maxn] ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">change</span> <span class="params">(<span class="keyword">char</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(c &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;F&#x27;</span>) </span><br><span class="line">        <span class="keyword">return</span> c-<span class="string">&#x27;A&#x27;</span>+<span class="number">10</span> ;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( c &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; c &lt;= <span class="string">&#x27;f&#x27;</span> ) <span class="keyword">return</span> c-<span class="string">&#x27;a&#x27;</span>+<span class="number">10</span> ;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> c-<span class="string">&#x27;0&#x27;</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n ;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n) ;</span><br><span class="line">    <span class="keyword">while</span> ( n-- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s) ;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="built_in">strlen</span> (s) , ans = <span class="number">0</span> , tmp = <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">for</span>( re <span class="keyword">int</span> i = cnt - <span class="number">1</span> ; i &gt; <span class="number">1</span> ; i-- ) </span><br><span class="line">            ans += change(s[i]) * <span class="built_in">pow</span> (<span class="number">16</span>,tmp++) ;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,ans ) ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="problems-12.5">problems 12.5:</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> s[<span class="number">10005</span>] ;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span> ;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">0</span> ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">judge</span> <span class="params">( <span class="keyword">char</span> s[] , <span class="keyword">int</span> l , <span class="keyword">int</span> r )</span> <span class="comment">// solution 1</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( l + <span class="number">1</span> == r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( s[l] != s[r] ) flag = <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( l == r ) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">if</span>( s[l] != s[r] ) flag = <span class="number">0</span> ;</span><br><span class="line">    judge ( s , l + <span class="number">1</span> , r - <span class="number">1</span> ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">IsPalindrom</span><span class="params">( <span class="keyword">char</span> arr[] , <span class="keyword">int</span> len )</span> <span class="comment">// solution 2</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( l + <span class="number">1</span> == len)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>( s[l] != s[len] ) <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span> ; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>( l == len ) <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">if</span>( s[l] != s[len] ) <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">    l++ ; IsPalindrom( arr , len - <span class="number">1</span> ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,s) ;</span><br><span class="line">    <span class="comment">// int cnt = strlen(s) ;</span></span><br><span class="line">    <span class="comment">// judge( s , 0 , cnt - 1 ) ;</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,IsPalindrom( s , <span class="built_in">strlen</span>(s) - <span class="number">1</span> ) ) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">C语言程序设计课后作业答案</summary>
    
    
    
    <category term="answer" scheme="https://dekrt.cn/categories/answer/"/>
    
    
    <category term="答案 | answer" scheme="https://dekrt.cn/tags/%E7%AD%94%E6%A1%88-answer/"/>
    
  </entry>
  
  <entry>
    <title>C语言程序设计作业</title>
    <link href="https://dekrt.cn/answer/homework/"/>
    <id>https://dekrt.cn/answer/homework/</id>
    <published>2022-01-14T12:58:05.000Z</published>
    <updated>2022-03-10T08:47:47.824Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>contributed by dekrt,2021-11-18</p></blockquote><h2 id="第一次作业">第一次作业：</h2><h3 id="hanoi问题">hanoi问题：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> il inline </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">void</span> <span class="title">move</span><span class="params">( <span class="keyword">int</span> n , <span class="keyword">char</span> a , <span class="keyword">char</span> b , <span class="keyword">char</span> c )</span></span></span><br><span class="line"><span class="function"><span class="comment">//将a上的n块借助b移动到c上去</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> cnt = <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">if</span> ( n == <span class="number">1</span> ) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;step %3d : move %c to %c\n&quot;</span>, cnt++ , a , c ) ;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">move</span> ( n<span class="number">-1</span> , a , c , b ) ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;step %3d : move %c to %c\n&quot;</span>, cnt++ , a , c ) ;</span><br><span class="line">    <span class="built_in">move</span> ( n<span class="number">-1</span> , b , a , c ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Input the number of diskes you want to move:&quot;</span>) ;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n) ;</span><br><span class="line">    <span class="built_in">move</span> ( n , <span class="string">&#x27;a&#x27;</span> , <span class="string">&#x27;b&#x27;</span> , <span class="string">&#x27;c&#x27;</span> ) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><span id="more"></span><h3 id="上楼梯问题">上楼梯问题：</h3><h4 id="递归解法">递归解法：</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> il inline </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="keyword">int</span> <span class="title">move</span><span class="params">( <span class="keyword">int</span> n )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( n == <span class="number">1</span> ) <span class="keyword">return</span> <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">if</span> ( n == <span class="number">2</span> ) <span class="keyword">return</span> <span class="number">2</span> ;</span><br><span class="line">    <span class="keyword">if</span> ( n &gt;= <span class="number">3</span> ) <span class="keyword">return</span> move(n - <span class="number">1</span>) + move(n - <span class="number">2</span>) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n) ;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,move(n)) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="递推解法">递推解法：</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> il inline </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n , tmp1 , tmp2 , ans ;  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tmp1 = <span class="number">1</span> ; tmp2 = <span class="number">2</span> ;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n) ;</span><br><span class="line">    <span class="keyword">if</span>( n == <span class="number">1</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;1&quot;</span>) ;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>( n == <span class="number">2</span> )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;2&quot;</span>) ;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">3</span> ; i &lt;= n ; i++ )</span><br><span class="line">        &#123;</span><br><span class="line">            ans = tmp1 + tmp2 ;</span><br><span class="line">            tmp1 = tmp2 ;</span><br><span class="line">            tmp2 = ans ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,ans) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="第二次作业">第二次作业：</h2><h3 id="快速排序">快速排序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[] = &#123; <span class="number">49</span> , <span class="number">38</span> , <span class="number">65</span> , <span class="number">97</span> , <span class="number">76</span> , <span class="number">13</span> , <span class="number">27</span> &#125; ;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="keyword">sizeof</span> (a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]) ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">quicksort</span><span class="params">( <span class="keyword">int</span> b[] , <span class="keyword">int</span> l , <span class="keyword">int</span> r )</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    re <span class="keyword">int</span> i = l , j = r , key ;</span><br><span class="line">    <span class="keyword">if</span> ( l == r ) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">else</span> key = b[i] ;</span><br><span class="line">    <span class="keyword">while</span> ( i &lt; j )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> ( ( i &lt; j ) &amp;&amp; b[j] &gt;  key ) j-- ;</span><br><span class="line">        <span class="keyword">if</span>( i &lt; j ) b[i++] = b[j] ; </span><br><span class="line">        <span class="keyword">while</span> ( ( i &lt; j ) &amp;&amp; b[i] &lt;= key ) i++ ;</span><br><span class="line">        <span class="keyword">if</span>( i &lt; j ) b[j--] = b[i] ;</span><br><span class="line">    &#125;</span><br><span class="line">    b[i] = key ;</span><br><span class="line">    sort( b , l , i<span class="number">-1</span> ) ;</span><br><span class="line">    sort( b , i+<span class="number">1</span> , r ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    quicksort( a , <span class="number">0</span> , cnt - <span class="number">1</span> ) ;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; cnt ; i++ )</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span> , a[i]) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// code by dekrt , 2021 - 11 - 20 </span></span><br></pre></td></tr></table></figure><h3 id="插入排序">插入排序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> a[] = &#123; <span class="number">49</span> , <span class="number">38</span> , <span class="number">65</span> , <span class="number">97</span> , <span class="number">76</span> , <span class="number">13</span> , <span class="number">27</span> &#125; ;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="keyword">sizeof</span> (a) / <span class="keyword">sizeof</span>(a[<span class="number">0</span>]) ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">search</span> <span class="params">( <span class="keyword">int</span> b[] , <span class="keyword">int</span> l , <span class="keyword">int</span> r , <span class="keyword">int</span> key )</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>( l == r ) <span class="keyword">return</span> l ;</span><br><span class="line">    re <span class="keyword">int</span> mid = l + ( ( r - l ) &gt;&gt; <span class="number">1</span> ) ;</span><br><span class="line">    <span class="keyword">if</span>( b[mid] &lt;= key ) <span class="keyword">return</span> search( b , mid + <span class="number">1</span> , r , key ) ;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> search ( b , l , mid - <span class="number">1</span> , key ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">binary_insertsort</span> <span class="params">( <span class="keyword">int</span> b[] , <span class="keyword">int</span> n )</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; n ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        re <span class="keyword">int</span> tmp = b[i] , l = <span class="number">0</span> , r = i - <span class="number">1</span> , mid ;</span><br><span class="line">        <span class="keyword">while</span> ( l &lt;= r ) </span><br><span class="line">        &#123;</span><br><span class="line">            mid = ( l + r) &gt;&gt; <span class="number">1</span> ;</span><br><span class="line">            <span class="keyword">if</span>( b[mid] &lt;= tmp ) l = mid + <span class="number">1</span> ;</span><br><span class="line">            <span class="keyword">else</span> r = mid - <span class="number">1</span> ;</span><br><span class="line">        &#125;</span><br><span class="line">        re <span class="keyword">int</span> j ;</span><br><span class="line">        <span class="keyword">for</span> ( re <span class="keyword">int</span> j = i - <span class="number">1</span> ; j &gt;= mid ; j-- )</span><br><span class="line">            b[j+<span class="number">1</span>] = b[j] ;</span><br><span class="line">        b[l] = tmp ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">1</span> ; i &lt; cnt ; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> tmp = search ( a , <span class="number">0</span> , i - <span class="number">1</span> , a[i] ) ;</span><br><span class="line">        <span class="keyword">for</span> ( re <span class="keyword">int</span> j = i - <span class="number">1</span> ; j &gt;= tmp ; j-- )</span><br><span class="line">            a[j+<span class="number">1</span>] = a[j] ;</span><br><span class="line">        a[tmp] = a[i] ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; cnt ; i++ )</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span> , a[i]) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// code by dekrt , 2021 - 11 - 20 </span></span><br></pre></td></tr></table></figure><h3 id="罗伯法构建奇阶幻方">罗伯法构建奇阶幻方</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> re register</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> maxn 10005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n ;</span><br><span class="line"><span class="keyword">int</span> a[maxn][maxn] ;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">( <span class="keyword">int</span> cnt , <span class="keyword">int</span> x , <span class="keyword">int</span> y )</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( cnt &gt; n * n ) <span class="keyword">return</span> ;</span><br><span class="line">    a[x][y] = cnt ;</span><br><span class="line">    <span class="keyword">int</span> xx = x + <span class="number">1</span> , yy = y + <span class="number">1</span> ;</span><br><span class="line">    <span class="keyword">if</span>( xx &gt; n ) xx -= n ;</span><br><span class="line">    <span class="keyword">if</span>( yy &gt; n ) yy -= n ;</span><br><span class="line">    <span class="keyword">if</span>( a[xx][yy] == <span class="number">0</span> ) dfs ( cnt + <span class="number">1</span> , xx , yy ) ;</span><br><span class="line">    <span class="keyword">else</span> dfs( cnt + <span class="number">1</span> , x , y - <span class="number">1</span> ) ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;Please input &#x27;n&#x27; to start the program:\n&quot;</span>) ;</span><br><span class="line">    <span class="built_in">scanf</span> (<span class="string">&quot;%d&quot;</span> , &amp;n ) ;</span><br><span class="line">    dfs( <span class="number">1</span> , ( n + <span class="number">1</span> ) &gt;&gt; <span class="number">1</span> , n ) ;</span><br><span class="line">    <span class="keyword">for</span> ( re <span class="keyword">int</span> i = n ; i &gt;= <span class="number">1</span> ; i-- , <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>) ) </span><br><span class="line">        <span class="keyword">for</span>( re <span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= n ; j++ )</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%3d &quot;</span> , a[j][i] ) ;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// code by dekrt , 2021 - 11 - 20 </span></span><br></pre></td></tr></table></figure><hr>]]></content>
    
    
    <summary type="html">软院万老师布置的课后作业</summary>
    
    
    
    <category term="answer" scheme="https://dekrt.cn/categories/answer/"/>
    
    
    <category term="答案 | answer" scheme="https://dekrt.cn/tags/%E7%AD%94%E6%A1%88-answer/"/>
    
    <category term="作业 | assignment" scheme="https://dekrt.cn/tags/%E4%BD%9C%E4%B8%9A-assignment/"/>
    
  </entry>
  
  <entry>
    <title>一篇介绍 | A Introduction</title>
    <link href="https://dekrt.cn/introduction/Introduction/"/>
    <id>https://dekrt.cn/introduction/Introduction/</id>
    <published>2022-01-13T04:14:05.000Z</published>
    <updated>2022-07-24T13:51:00.297Z</updated>
    
    <content type="html"><![CDATA[<h1 align="center">你好，陌生人，欢迎你！</h1><h2 id="关于我-about-me">关于我 | About me</h2><p>dekrt,就读于华中科技大学，学习软件工程，是一只小菜狗，喜欢四处水（？）</p><p>我的 <a href="https://github.com/dekrt">github</a> 和 <a href="https://www.luogu.com.cn/user/172007">洛谷</a></p><p>我的 <a href="dekrt@qq.com">e-mail</a> 和 <a href="https://qm.qq.com/cgi-bin/qm/qr?k=U24Uj5ZjOxUD6CV_uiqbH-YL0uU9U0xE&amp;noverify=0">QQ</a></p><p>其他的联系方式可以参见侧栏</p><h2 id="关于这个博客-about-this-blog">关于这个博客 | About thisblog</h2><p>我大抵有一些，想要写点什么东西的念头了。</p><p>分享技术也好，记录生活也罢，我不想让过去的日子就这么过去，他们总是要留下些什么的。</p><p>建站的过程也算遭遇了很多困难，但终究成功了</p><p>所以，你看到了这篇博客，也看到了这里。</p><h2 id="致谢-thanks">致谢 | Thanks</h2><p>感谢我的同学，学长，在我迷茫困惑无助的时候给予我的帮助。</p><p>感谢我的室友陪我度过的快乐时光。</p><p>感谢我的小朋友。</p>]]></content>
    
    
    <summary type="html">&lt;B&gt;你好，陌生人，欢迎你！&lt;/B&gt;</summary>
    
    
    
    <category term="introduction" scheme="https://dekrt.cn/categories/introduction/"/>
    
    
    <category term="介绍 | introduction" scheme="https://dekrt.cn/tags/%E4%BB%8B%E7%BB%8D-introduction/"/>
    
  </entry>
  
</feed>
